// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.provisioning.v1;

import "teleport/header/v1/metadata.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/provisioning/v1;provisioningv1";

// UserStateV1 describes the provisioning state of a Teleport user in a downstream
// system
message UserState {
  string kind = 1;
  string sub_kind = 2;
  string version = 3;
  teleport.header.v1.Metadata metadata = 4;
  UserStateSpec spec = 5;
  UserStateStatus status = 6;
}

// Status indicates the current stage of the provisioning pipeline a resource is
// in.
enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_PENDING = 1;
  STATUS_PROCESSING = 2;
  STATUS_PROVISIONED = 3;
  STATUS_ERROR = 4;
}

// UserStateSpecV1 describes the current state of a provisioning operation. It
// serves as a Teleport-local record of the downstream state.
message UserStateSpec {
  // DownstreamId identifies the downstream service that this state applies to.
  string downstream_id = 1;
  string user = 2;
  string external_id = 3;
}

// UserStateStatus contains the runtime-writable status block for the UserState
// resource
message UserStateStatus {
  Status status = 1;
  string error = 2;
}
