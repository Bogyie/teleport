// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.authorization.v1;

import "teleport/authorization/v1/action.proto";
import "teleport/authorization/v1/external_state.proto";
import "teleport/authorization/v1/resource.proto";
import "teleport/authorization/v1/subject.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/authorization/v1;authorizationpb";

message AuthorizeRequest {
  Subject subject = 1;
  Action action = 2;
  Resource resource = 3;
  ExternalState external_state = 4;

  // Fills in Subject information, such as Kind and ID, using the caller's
  // identity. If it exists the SubjectState is preserved, otherwise it's also
  // copied from the identity.
  //
  // This is resolved by the Authorize RPC and not passed along to further
  // layers.
  //
  // Useful to emulate the current user credentials, but long-term this likely
  // shouldn't exist.
  bool use_caller_as_subject = 5;
}
