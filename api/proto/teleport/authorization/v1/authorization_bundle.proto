// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.authorization.v1;

import "teleport/accesslist/v1/accesslist.proto";
import "teleport/authorization/v1/resource.proto";
// TODO(codingllama): Break down types into individual files.
import "teleport/legacy/types/types.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/authorization/v1;authorizationpb";

// TODO(codingllama): Revisit design. Could work better.
message AuthorizationBundle {
  repeated User users = 1;
  repeated Role roles = 2;
  repeated Resource resources = 3;
  repeated ServerInfo server_infos = 4;
  repeated AccessRequest access_requests = 5;
  repeated AccessList access_lists = 6;
}

message User {
  // "Easy" way out. Protects us from spec version changes.
  types.UserV2 resource = 1;
}

message Role {
  types.RoleV6 resource = 1;
}

message ServerInfo {
  // Only applies to nodes.
  // Matched by name: `si-<node_uuid>`.
  types.ServerInfoV1 resource = 1;
}

message AccessRequest {
  types.AccessRequestV3 resource = 1;
}

message AccessList {
  teleport.accesslist.v1.AccessList resource = 1;
}
