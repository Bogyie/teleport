syntax = "proto3";

package teleport.authorization.v1alpha1;

import "google/protobuf/duration.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/authorization/v1alpha1;authzpb";

// AuthorizationService performs authorization decisions for Teleport.
//
// AuthorizationService acts the PDP (Policy Decision Point) for Teleport
// services, whereas the services themselves act as the PEP (Policy Enforcement
// Point). In other words, it calculates the outcome of an authorization request
// but does not enforce it - each Teleport service must do so.
//
// Authorization responses carry all the data necessary for the enforcement of a
// decision.
service AuthorizationService {
  // AuthorizeSSHAccess calculates the outcome of an SSH access attempt.
  rpc AuthorizeSSHAccess(AuthorizeSSHAccessRequest) returns (AuthorizeSSHAccessResponse);
}

// Request for SSH access attempts.
message AuthorizeSSHAccessRequest {
  Subject subject = 1;
  Resource resource = 2;
  AuthorizeMetadata metadata = 3;

  string login = 4;
}

// Response for SSH access attempts.
message AuthorizeSSHAccessResponse {
  oneof outcome {
    SSHAccessPermit permit = 1;
    SSHAccessDenial denial = 2;
  }
}

// Permit for a successful SSH access attempt.
message SSHAccessPermit {
  PermitMetadata metadata = 1;

  repeated string logins = 2;

  bool forward_agent = 3;

  google.protobuf.Duration max_session_ttl = 4;

  bool port_forwarding = 5;

  int64 client_idle_timeout = 6;

  bool disconnect_expired_cert = 7;

  repeated string bpf = 8;

  bool x11_forwarding = 9;

  int64 max_connections = 10;

  // ... (there's a lot more that needs to go here)
}

// Denial details for an SSH access attempt.
message SSHAccessDenial {
  DenialMetadata metadata = 1;
}

// Subject is the initiator of an access attempt.
// For example, a Teleport user.
message Subject {
  string kind = 1;
  string id = 2;
}

// Resource is the target of an access attempt.
// For example, an SSH node or a database.
message Resource {
  string kind = 1;
  string id = 2;
}

// Metadata common for Authorize operations.
message AuthorizeMetadata {}

// Metadata common for successful access attempts.
message PermitMetadata {}

// Metadata common for denied access attempts.
message DenialMetadata {}
