// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.gitserver.v1;

import "google/protobuf/empty.proto";
import "teleport/legacy/types/types.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/gitserver/v1;gitserverv1";

// GitServerService provides methods to manage Git server.
service GitServerService {
  // GetGitServer is used to retrieve a Git server object.
  rpc GetGitServer(GetGitServerRequest) returns (types.ServerV2);
  // UpsertGitServer is used to create or replace a Git server object.
  rpc UpsertGitServer(UpsertGitServerRequest) returns (types.ServerV2);
  // DeleteGitServer is used to delete a Git server object.
  rpc DeleteGitServer(DeleteGitServerRequest) returns (google.protobuf.Empty);
}

// The request for GetGitServer.
message GetGitServerRequest {
  // Name is the uuid of the server.
  string name = 1;
}

// The request for UpsertGitServer.
message UpsertGitServerRequest {
  // Server is the Git server to upsert.
  types.ServerV2 server = 1;
}

// The request for DeleteGitServer.
message DeleteGitServerRequest {
  // Name is the uuid of the server.
  string name = 1;
}
