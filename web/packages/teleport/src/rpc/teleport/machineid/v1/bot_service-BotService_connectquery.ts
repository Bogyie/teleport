// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/machineid/v1/bot_service.proto (package teleport.machineid.v1, syntax proto3)
/* eslint-disable */

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { CreateBotRequest, DeleteBotRequest, GetBotRequest, ListBotsRequest, ListBotsResponse, UpdateBotRequest, UpsertBotRequest } from "./bot_service_pb";
import { Bot } from "./bot_pb";

/**
 * GetBot is used to query a Bot resource by its name.
 *
 * This will return a NotFound error if the specified Bot does not exist.
 *
 * @generated from rpc teleport.machineid.v1.BotService.GetBot
 */
export const getBot = {
  localName: "getBot",
  name: "GetBot",
  kind: MethodKind.Unary,
  I: GetBotRequest,
  O: Bot,
  service: {
    typeName: "teleport.machineid.v1.BotService"
  }
} as const;

/**
 * ListBots is used to query Bots.
 *
 * Follows the pagination semantics of
 * https://cloud.google.com/apis/design/standard_methods#list.
 *
 * @generated from rpc teleport.machineid.v1.BotService.ListBots
 */
export const listBots = {
  localName: "listBots",
  name: "ListBots",
  kind: MethodKind.Unary,
  I: ListBotsRequest,
  O: ListBotsResponse,
  service: {
    typeName: "teleport.machineid.v1.BotService"
  }
} as const;

/**
 * CreateBot is used to create a Bot.
 *
 * This will return an error if a Bot by that name already exists.
 *
 * @generated from rpc teleport.machineid.v1.BotService.CreateBot
 */
export const createBot = {
  localName: "createBot",
  name: "CreateBot",
  kind: MethodKind.Unary,
  I: CreateBotRequest,
  O: Bot,
  service: {
    typeName: "teleport.machineid.v1.BotService"
  }
} as const;

/**
 * UpdateBot is used to modify an existing Bot.
 *
 * @generated from rpc teleport.machineid.v1.BotService.UpdateBot
 */
export const updateBot = {
  localName: "updateBot",
  name: "UpdateBot",
  kind: MethodKind.Unary,
  I: UpdateBotRequest,
  O: Bot,
  service: {
    typeName: "teleport.machineid.v1.BotService"
  }
} as const;

/**
 * UpsertBot is used to create or replace an existing Bot.
 *
 * Prefer using CreateBot and UpdateBot.
 *
 * @generated from rpc teleport.machineid.v1.BotService.UpsertBot
 */
export const upsertBot = {
  localName: "upsertBot",
  name: "UpsertBot",
  kind: MethodKind.Unary,
  I: UpsertBotRequest,
  O: Bot,
  service: {
    typeName: "teleport.machineid.v1.BotService"
  }
} as const;

/**
 * DeleteBot is used to delete a specific Bot.
 *
 * This will return a NotFound error if the specified Bot does not exist.
 *
 * @generated from rpc teleport.machineid.v1.BotService.DeleteBot
 */
export const deleteBot = {
  localName: "deleteBot",
  name: "DeleteBot",
  kind: MethodKind.Unary,
  I: DeleteBotRequest,
  O: Empty,
  service: {
    typeName: "teleport.machineid.v1.BotService"
  }
} as const;
