// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/machineid/v1/federation_service.proto (package teleport.machineid.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateSPIFFEFederationRequest, DeleteSPIFFEFederationRequest, GetSPIFFEFederationRequest, ListSPIFFEFederationsRequest, ListSPIFFEFederationsResponse } from "./federation_service_pb.js";
import { SPIFFEFederation } from "./federation_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * SPIFFEFederationService provides methods to manage SPIFFE Federations
 * between trust domains.
 *
 * @generated from service teleport.machineid.v1.SPIFFEFederationService
 */
export const SPIFFEFederationService = {
  typeName: "teleport.machineid.v1.SPIFFEFederationService",
  methods: {
    /**
     * GetSPIFFEFederation returns a SPIFFEFederation resource by name.
     *
     * @generated from rpc teleport.machineid.v1.SPIFFEFederationService.GetSPIFFEFederation
     */
    getSPIFFEFederation: {
      name: "GetSPIFFEFederation",
      I: GetSPIFFEFederationRequest,
      O: SPIFFEFederation,
      kind: MethodKind.Unary,
    },
    /**
     * ListSPIFFEFederations returns a list of SPIFFEFederation resources.
     * Follows the pagination semantics of
     * https://cloud.google.com/apis/design/design_patterns#list_pagination
     *
     * @generated from rpc teleport.machineid.v1.SPIFFEFederationService.ListSPIFFEFederations
     */
    listSPIFFEFederations: {
      name: "ListSPIFFEFederations",
      I: ListSPIFFEFederationsRequest,
      O: ListSPIFFEFederationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteSPIFFEFederation deletes a SPIFFEFederation resource by name.
     *
     * @generated from rpc teleport.machineid.v1.SPIFFEFederationService.DeleteSPIFFEFederation
     */
    deleteSPIFFEFederation: {
      name: "DeleteSPIFFEFederation",
      I: DeleteSPIFFEFederationRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * CreateSPIFFEFederation creates a SPIFFEFederation resource.
     *
     * @generated from rpc teleport.machineid.v1.SPIFFEFederationService.CreateSPIFFEFederation
     */
    createSPIFFEFederation: {
      name: "CreateSPIFFEFederation",
      I: CreateSPIFFEFederationRequest,
      O: SPIFFEFederation,
      kind: MethodKind.Unary,
    },
  }
} as const;

