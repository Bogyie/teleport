// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts"
// @generated from file teleport/machineid/v1/bot_instance_service.proto (package teleport.machineid.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { DeleteBotInstanceRequest, GetBotInstanceRequest, ListBotInstancesRequest, ListBotInstancesResponse, SubmitHeartbeatRequest, SubmitHeartbeatResponse } from "./bot_instance_service_pb.js";
import { BotInstance } from "./bot_instance_pb.js";

/**
 * GetBotInstance returns the specified BotInstance resource.
 *
 * @generated from rpc teleport.machineid.v1.BotInstanceService.GetBotInstance
 */
export const getBotInstance = {
  localName: "getBotInstance",
  name: "GetBotInstance",
  kind: MethodKind.Unary,
  I: GetBotInstanceRequest,
  O: BotInstance,
  service: {
    typeName: "teleport.machineid.v1.BotInstanceService"
  }
} as const;

/**
 * ListBotInstances returns a page of BotInstance resources.
 *
 * @generated from rpc teleport.machineid.v1.BotInstanceService.ListBotInstances
 */
export const listBotInstances = {
  localName: "listBotInstances",
  name: "ListBotInstances",
  kind: MethodKind.Unary,
  I: ListBotInstancesRequest,
  O: ListBotInstancesResponse,
  service: {
    typeName: "teleport.machineid.v1.BotInstanceService"
  }
} as const;

/**
 * DeleteBotInstance hard deletes the specified BotInstance resource.
 *
 * @generated from rpc teleport.machineid.v1.BotInstanceService.DeleteBotInstance
 */
export const deleteBotInstance = {
  localName: "deleteBotInstance",
  name: "DeleteBotInstance",
  kind: MethodKind.Unary,
  I: DeleteBotInstanceRequest,
  O: Empty,
  service: {
    typeName: "teleport.machineid.v1.BotInstanceService"
  }
} as const;

/**
 * SubmitHeartbeat submits a heartbeat for a BotInstance.
 *
 * @generated from rpc teleport.machineid.v1.BotInstanceService.SubmitHeartbeat
 */
export const submitHeartbeat = {
  localName: "submitHeartbeat",
  name: "SubmitHeartbeat",
  kind: MethodKind.Unary,
  I: SubmitHeartbeatRequest,
  O: SubmitHeartbeatResponse,
  service: {
    typeName: "teleport.machineid.v1.BotInstanceService"
  }
} as const;
