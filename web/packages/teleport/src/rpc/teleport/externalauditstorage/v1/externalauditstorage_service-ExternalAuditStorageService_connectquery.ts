// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts"
// @generated from file teleport/externalauditstorage/v1/externalauditstorage_service.proto (package teleport.externalauditstorage.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { CreateDraftExternalAuditStorageRequest, CreateDraftExternalAuditStorageResponse, DeleteDraftExternalAuditStorageRequest, DisableClusterExternalAuditStorageRequest, GenerateDraftExternalAuditStorageRequest, GenerateDraftExternalAuditStorageResponse, GetClusterExternalAuditStorageRequest, GetClusterExternalAuditStorageResponse, GetDraftExternalAuditStorageRequest, GetDraftExternalAuditStorageResponse, PromoteToClusterExternalAuditStorageRequest, PromoteToClusterExternalAuditStorageResponse, TestDraftExternalAuditStorageAthenaRequest, TestDraftExternalAuditStorageAthenaResponse, TestDraftExternalAuditStorageBucketsRequest, TestDraftExternalAuditStorageBucketsResponse, TestDraftExternalAuditStorageGlueRequest, TestDraftExternalAuditStorageGlueResponse, UpsertDraftExternalAuditStorageRequest, UpsertDraftExternalAuditStorageResponse } from "./externalauditstorage_service_pb.js";

/**
 * GetDraftExternalAuditStorage returns the draft external audit storage configuration resource.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.GetDraftExternalAuditStorage
 */
export const getDraftExternalAuditStorage = {
  localName: "getDraftExternalAuditStorage",
  name: "GetDraftExternalAuditStorage",
  kind: MethodKind.Unary,
  I: GetDraftExternalAuditStorageRequest,
  O: GetDraftExternalAuditStorageResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * CreateDraftExternalAuditStorage creates a draft External Audit Storage
 * resource if one does not already exist.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.CreateDraftExternalAuditStorage
 */
export const createDraftExternalAuditStorage = {
  localName: "createDraftExternalAuditStorage",
  name: "CreateDraftExternalAuditStorage",
  kind: MethodKind.Unary,
  I: CreateDraftExternalAuditStorageRequest,
  O: CreateDraftExternalAuditStorageResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * UpsertDraftExternalAuditStorage upserts a draft External Audit Storage resource.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.UpsertDraftExternalAuditStorage
 */
export const upsertDraftExternalAuditStorage = {
  localName: "upsertDraftExternalAuditStorage",
  name: "UpsertDraftExternalAuditStorage",
  kind: MethodKind.Unary,
  I: UpsertDraftExternalAuditStorageRequest,
  O: UpsertDraftExternalAuditStorageResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * DeleteDraftExternalAuditStorage removes draft External Audit Storage resource.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.DeleteDraftExternalAuditStorage
 */
export const deleteDraftExternalAuditStorage = {
  localName: "deleteDraftExternalAuditStorage",
  name: "DeleteDraftExternalAuditStorage",
  kind: MethodKind.Unary,
  I: DeleteDraftExternalAuditStorageRequest,
  O: Empty,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * PromoteToClusterExternalAuditStorage promotes the current draft External
 * Audit Storage configuration to be used in the cluster.
 * This method causes the Teleport Auth service to reload.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.PromoteToClusterExternalAuditStorage
 */
export const promoteToClusterExternalAuditStorage = {
  localName: "promoteToClusterExternalAuditStorage",
  name: "PromoteToClusterExternalAuditStorage",
  kind: MethodKind.Unary,
  I: PromoteToClusterExternalAuditStorageRequest,
  O: PromoteToClusterExternalAuditStorageResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * GetClusterExternalAuditStorage gets cluster external audit storage.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.GetClusterExternalAuditStorage
 */
export const getClusterExternalAuditStorage = {
  localName: "getClusterExternalAuditStorage",
  name: "GetClusterExternalAuditStorage",
  kind: MethodKind.Unary,
  I: GetClusterExternalAuditStorageRequest,
  O: GetClusterExternalAuditStorageResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * DisableClusterExternalAuditStorage disables the external audit storage feature.
 * This method causes the Teleport Auth service to reload.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.DisableClusterExternalAuditStorage
 */
export const disableClusterExternalAuditStorage = {
  localName: "disableClusterExternalAuditStorage",
  name: "DisableClusterExternalAuditStorage",
  kind: MethodKind.Unary,
  I: DisableClusterExternalAuditStorageRequest,
  O: Empty,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * GenerateDraftExternalAuditStorage generates a new external audit storage
 * resource with randomized resource names and upserts it as the current
 * draft.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.GenerateDraftExternalAuditStorage
 */
export const generateDraftExternalAuditStorage = {
  localName: "generateDraftExternalAuditStorage",
  name: "GenerateDraftExternalAuditStorage",
  kind: MethodKind.Unary,
  I: GenerateDraftExternalAuditStorageRequest,
  O: GenerateDraftExternalAuditStorageResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * TestDraftExternalAuditStorageBuckets tests the connection to the current draft buckets.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageBuckets
 */
export const testDraftExternalAuditStorageBuckets = {
  localName: "testDraftExternalAuditStorageBuckets",
  name: "TestDraftExternalAuditStorageBuckets",
  kind: MethodKind.Unary,
  I: TestDraftExternalAuditStorageBucketsRequest,
  O: TestDraftExternalAuditStorageBucketsResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * TestDraftExternalAuditStorageGlue tests the configuration to the current draft glue table and database.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageGlue
 */
export const testDraftExternalAuditStorageGlue = {
  localName: "testDraftExternalAuditStorageGlue",
  name: "TestDraftExternalAuditStorageGlue",
  kind: MethodKind.Unary,
  I: TestDraftExternalAuditStorageGlueRequest,
  O: TestDraftExternalAuditStorageGlueResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;

/**
 * TestDraftExternalAuditStorageAthena tests the configuration to the current draft athena.
 *
 * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageAthena
 */
export const testDraftExternalAuditStorageAthena = {
  localName: "testDraftExternalAuditStorageAthena",
  name: "TestDraftExternalAuditStorageAthena",
  kind: MethodKind.Unary,
  I: TestDraftExternalAuditStorageAthenaRequest,
  O: TestDraftExternalAuditStorageAthenaResponse,
  service: {
    typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService"
  }
} as const;
