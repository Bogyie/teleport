// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/externalauditstorage/v1/externalauditstorage.proto (package teleport.externalauditstorage.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ResourceHeader } from "../../header/v1/resourceheader_pb";
import { file_teleport_header_v1_resourceheader } from "../../header/v1/resourceheader_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/externalauditstorage/v1/externalauditstorage.proto.
 */
export const file_teleport_externalauditstorage_v1_externalauditstorage: GenFile = /*@__PURE__*/
  fileDesc("Cjt0ZWxlcG9ydC9leHRlcm5hbGF1ZGl0c3RvcmFnZS92MS9leHRlcm5hbGF1ZGl0c3RvcmFnZS5wcm90bxIgdGVsZXBvcnQuZXh0ZXJuYWxhdWRpdHN0b3JhZ2UudjEilAEKFEV4dGVybmFsQXVkaXRTdG9yYWdlEjIKBmhlYWRlchgBIAEoCzIiLnRlbGVwb3J0LmhlYWRlci52MS5SZXNvdXJjZUhlYWRlchJICgRzcGVjGAIgASgLMjoudGVsZXBvcnQuZXh0ZXJuYWxhdWRpdHN0b3JhZ2UudjEuRXh0ZXJuYWxBdWRpdFN0b3JhZ2VTcGVjIv4BChhFeHRlcm5hbEF1ZGl0U3RvcmFnZVNwZWMSGAoQaW50ZWdyYXRpb25fbmFtZRgBIAEoCRIOCgZyZWdpb24YAiABKAkSHgoWc2Vzc2lvbl9yZWNvcmRpbmdzX3VyaRgDIAEoCRIiChphdWRpdF9ldmVudHNfbG9uZ190ZXJtX3VyaRgEIAEoCRIaChJhdGhlbmFfcmVzdWx0c191cmkYBSABKAkSGAoQYXRoZW5hX3dvcmtncm91cBgGIAEoCRIVCg1nbHVlX2RhdGFiYXNlGAcgASgJEhIKCmdsdWVfdGFibGUYCCABKAkSEwoLcG9saWN5X25hbWUYCSABKAlCbFpqZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvZXh0ZXJuYWxhdWRpdHN0b3JhZ2UvdjE7ZXh0ZXJuYWxhdWRpdHN0b3JhZ2V2MWIGcHJvdG8z", [file_teleport_header_v1_resourceheader]);

/**
 * ExternalAuditStorage contains External Audit Storage configuration.
 * It contains configuration that allows users to store audit events and session
 * recordings on customer-owned infra instead of in Teleport Cloud.
 *
 * @generated from message teleport.externalauditstorage.v1.ExternalAuditStorage
 */
export type ExternalAuditStorage = Message<"teleport.externalauditstorage.v1.ExternalAuditStorage"> & {
  /**
   * Header is the header for the resource.
   *
   * @generated from field: teleport.header.v1.ResourceHeader header = 1;
   */
  header?: ResourceHeader;

  /**
   * Spec is the specification for external audit storage.
   *
   * @generated from field: teleport.externalauditstorage.v1.ExternalAuditStorageSpec spec = 2;
   */
  spec?: ExternalAuditStorageSpec;
};

/**
 * Describes the message teleport.externalauditstorage.v1.ExternalAuditStorage.
 * Use `create(ExternalAuditStorageSchema)` to create a new message.
 */
export const ExternalAuditStorageSchema: GenMessage<ExternalAuditStorage> = /*@__PURE__*/
  messageDesc(file_teleport_externalauditstorage_v1_externalauditstorage, 0);

/**
 * ExternalAuditStorageConfigSpec is the specification of external audit storage.
 *
 * @generated from message teleport.externalauditstorage.v1.ExternalAuditStorageSpec
 */
export type ExternalAuditStorageSpec = Message<"teleport.externalauditstorage.v1.ExternalAuditStorageSpec"> & {
  /**
   * IntegrationName is name of an existing AWS OIDC integration used to
   * authenticate to the external AWS account.
   *
   * @generated from field: string integration_name = 1;
   */
  integrationName: string;

  /**
   * Region is the AWS region where the infrastructure is hosted.
   *
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * SessionRecordingsURI is the S3 path used to store session recordings.
   *
   * @generated from field: string session_recordings_uri = 3;
   */
  sessionRecordingsUri: string;

  /**
   * AuditEventsLongTermURI is the S3 path used to store batched parquet files
   * with audit events.
   *
   * @generated from field: string audit_events_long_term_uri = 4;
   */
  auditEventsLongTermUri: string;

  /**
   * AthenaResultsURI is the S3 path used to store temporary results of Athena
   * queries.
   *
   * @generated from field: string athena_results_uri = 5;
   */
  athenaResultsUri: string;

  /**
   * AthenaWorkgroup is the workgroup used for Athena audit log queries.
   *
   * @generated from field: string athena_workgroup = 6;
   */
  athenaWorkgroup: string;

  /**
   * GlueDatabase is the database used for Athena audit log queries.
   *
   * @generated from field: string glue_database = 7;
   */
  glueDatabase: string;

  /**
   * GlueTable is the table used for Athena audit log queries.
   *
   * @generated from field: string glue_table = 8;
   */
  glueTable: string;

  /**
   * PolicyName is the name of the IAM policy attached to the OIDC integration
   * role.
   *
   * @generated from field: string policy_name = 9;
   */
  policyName: string;
};

/**
 * Describes the message teleport.externalauditstorage.v1.ExternalAuditStorageSpec.
 * Use `create(ExternalAuditStorageSpecSchema)` to create a new message.
 */
export const ExternalAuditStorageSpecSchema: GenMessage<ExternalAuditStorageSpec> = /*@__PURE__*/
  messageDesc(file_teleport_externalauditstorage_v1_externalauditstorage, 1);

