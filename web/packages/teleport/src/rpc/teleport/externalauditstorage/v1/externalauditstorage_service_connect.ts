// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/externalauditstorage/v1/externalauditstorage_service.proto (package teleport.externalauditstorage.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateDraftExternalAuditStorageRequest, CreateDraftExternalAuditStorageResponse, DeleteDraftExternalAuditStorageRequest, DisableClusterExternalAuditStorageRequest, GenerateDraftExternalAuditStorageRequest, GenerateDraftExternalAuditStorageResponse, GetClusterExternalAuditStorageRequest, GetClusterExternalAuditStorageResponse, GetDraftExternalAuditStorageRequest, GetDraftExternalAuditStorageResponse, PromoteToClusterExternalAuditStorageRequest, PromoteToClusterExternalAuditStorageResponse, TestDraftExternalAuditStorageAthenaRequest, TestDraftExternalAuditStorageAthenaResponse, TestDraftExternalAuditStorageBucketsRequest, TestDraftExternalAuditStorageBucketsResponse, TestDraftExternalAuditStorageGlueRequest, TestDraftExternalAuditStorageGlueResponse, UpsertDraftExternalAuditStorageRequest, UpsertDraftExternalAuditStorageResponse } from "./externalauditstorage_service_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * ExternalAuditStorageService provides methods to manage External Audit Storage.
 *
 * The service supports singleton "draft" and "cluster" configurations, allowing
 * us to store state for an in-progress configuring and to test the connection
 * before enabling the feature in the cluster.
 *
 * After creating and testing a draft configuration call
 * PromoteToClusterExternalAuditStorage, which will clone the existing draft
 * ExternalAuditStorage into a new resource and upsert it as the new cluster
 * ExternalAuditStorage.
 * The promoted cluster resource can't be mutated, it can only be deleted or
 * replaced by promoting a new draft.
 *
 * @generated from service teleport.externalauditstorage.v1.ExternalAuditStorageService
 */
export const ExternalAuditStorageService = {
  typeName: "teleport.externalauditstorage.v1.ExternalAuditStorageService",
  methods: {
    /**
     * GetDraftExternalAuditStorage returns the draft external audit storage configuration resource.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.GetDraftExternalAuditStorage
     */
    getDraftExternalAuditStorage: {
      name: "GetDraftExternalAuditStorage",
      I: GetDraftExternalAuditStorageRequest,
      O: GetDraftExternalAuditStorageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateDraftExternalAuditStorage creates a draft External Audit Storage
     * resource if one does not already exist.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.CreateDraftExternalAuditStorage
     */
    createDraftExternalAuditStorage: {
      name: "CreateDraftExternalAuditStorage",
      I: CreateDraftExternalAuditStorageRequest,
      O: CreateDraftExternalAuditStorageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertDraftExternalAuditStorage upserts a draft External Audit Storage resource.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.UpsertDraftExternalAuditStorage
     */
    upsertDraftExternalAuditStorage: {
      name: "UpsertDraftExternalAuditStorage",
      I: UpsertDraftExternalAuditStorageRequest,
      O: UpsertDraftExternalAuditStorageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteDraftExternalAuditStorage removes draft External Audit Storage resource.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.DeleteDraftExternalAuditStorage
     */
    deleteDraftExternalAuditStorage: {
      name: "DeleteDraftExternalAuditStorage",
      I: DeleteDraftExternalAuditStorageRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * PromoteToClusterExternalAuditStorage promotes the current draft External
     * Audit Storage configuration to be used in the cluster.
     * This method causes the Teleport Auth service to reload.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.PromoteToClusterExternalAuditStorage
     */
    promoteToClusterExternalAuditStorage: {
      name: "PromoteToClusterExternalAuditStorage",
      I: PromoteToClusterExternalAuditStorageRequest,
      O: PromoteToClusterExternalAuditStorageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetClusterExternalAuditStorage gets cluster external audit storage.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.GetClusterExternalAuditStorage
     */
    getClusterExternalAuditStorage: {
      name: "GetClusterExternalAuditStorage",
      I: GetClusterExternalAuditStorageRequest,
      O: GetClusterExternalAuditStorageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DisableClusterExternalAuditStorage disables the external audit storage feature.
     * This method causes the Teleport Auth service to reload.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.DisableClusterExternalAuditStorage
     */
    disableClusterExternalAuditStorage: {
      name: "DisableClusterExternalAuditStorage",
      I: DisableClusterExternalAuditStorageRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * GenerateDraftExternalAuditStorage generates a new external audit storage
     * resource with randomized resource names and upserts it as the current
     * draft.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.GenerateDraftExternalAuditStorage
     */
    generateDraftExternalAuditStorage: {
      name: "GenerateDraftExternalAuditStorage",
      I: GenerateDraftExternalAuditStorageRequest,
      O: GenerateDraftExternalAuditStorageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * TestDraftExternalAuditStorageBuckets tests the connection to the current draft buckets.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageBuckets
     */
    testDraftExternalAuditStorageBuckets: {
      name: "TestDraftExternalAuditStorageBuckets",
      I: TestDraftExternalAuditStorageBucketsRequest,
      O: TestDraftExternalAuditStorageBucketsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * TestDraftExternalAuditStorageGlue tests the configuration to the current draft glue table and database.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageGlue
     */
    testDraftExternalAuditStorageGlue: {
      name: "TestDraftExternalAuditStorageGlue",
      I: TestDraftExternalAuditStorageGlueRequest,
      O: TestDraftExternalAuditStorageGlueResponse,
      kind: MethodKind.Unary,
    },
    /**
     * TestDraftExternalAuditStorageAthena tests the configuration to the current draft athena.
     *
     * @generated from rpc teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageAthena
     */
    testDraftExternalAuditStorageAthena: {
      name: "TestDraftExternalAuditStorageAthena",
      I: TestDraftExternalAuditStorageAthenaRequest,
      O: TestDraftExternalAuditStorageAthenaResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

