// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/crownjewel/v1/crownjewel_service.proto (package teleport.crownjewel.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { CrownJewel, CrownJewelSchema } from "./crownjewel_pb";
import { file_teleport_crownjewel_v1_crownjewel } from "./crownjewel_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/crownjewel/v1/crownjewel_service.proto.
 */
export const file_teleport_crownjewel_v1_crownjewel_service: GenFile = /*@__PURE__*/
  fileDesc("Ci90ZWxlcG9ydC9jcm93bmpld2VsL3YxL2Nyb3duamV3ZWxfc2VydmljZS5wcm90bxIWdGVsZXBvcnQuY3Jvd25qZXdlbC52MSJmChdDcmVhdGVDcm93bkpld2VsUmVxdWVzdBI3Cgtjcm93bl9qZXdlbBgCIAEoCzIiLnRlbGVwb3J0LmNyb3duamV3ZWwudjEuQ3Jvd25KZXdlbEoECAEQAlIMY3Jvd25famV3ZWxzIiQKFEdldENyb3duSmV3ZWxSZXF1ZXN0EgwKBG5hbWUYASABKAkiPwoWTGlzdENyb3duSmV3ZWxzUmVxdWVzdBIRCglwYWdlX3NpemUYASABKAMSEgoKcGFnZV90b2tlbhgCIAEoCSJsChdMaXN0Q3Jvd25KZXdlbHNSZXNwb25zZRI4Cgxjcm93bl9qZXdlbHMYASADKAsyIi50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkNyb3duSmV3ZWwSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImYKF1VwZGF0ZUNyb3duSmV3ZWxSZXF1ZXN0EjcKC2Nyb3duX2pld2VsGAIgASgLMiIudGVsZXBvcnQuY3Jvd25qZXdlbC52MS5Dcm93bkpld2VsSgQIARACUgxjcm93bl9qZXdlbHMiZgoXVXBzZXJ0Q3Jvd25KZXdlbFJlcXVlc3QSNwoLY3Jvd25famV3ZWwYAiABKAsyIi50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkNyb3duSmV3ZWxKBAgBEAJSDGNyb3duX2pld2VscyInChdEZWxldGVDcm93bkpld2VsUmVxdWVzdBIMCgRuYW1lGAEgASgJMoIFChFDcm93bkpld2VsU2VydmljZRJnChBDcmVhdGVDcm93bkpld2VsEi8udGVsZXBvcnQuY3Jvd25qZXdlbC52MS5DcmVhdGVDcm93bkpld2VsUmVxdWVzdBoiLnRlbGVwb3J0LmNyb3duamV3ZWwudjEuQ3Jvd25KZXdlbBJhCg1HZXRDcm93bkpld2VsEiwudGVsZXBvcnQuY3Jvd25qZXdlbC52MS5HZXRDcm93bkpld2VsUmVxdWVzdBoiLnRlbGVwb3J0LmNyb3duamV3ZWwudjEuQ3Jvd25KZXdlbBJyCg9MaXN0Q3Jvd25KZXdlbHMSLi50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkxpc3RDcm93bkpld2Vsc1JlcXVlc3QaLy50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkxpc3RDcm93bkpld2Vsc1Jlc3BvbnNlEmcKEFVwZGF0ZUNyb3duSmV3ZWwSLy50ZWxlcG9ydC5jcm93bmpld2VsLnYxLlVwZGF0ZUNyb3duSmV3ZWxSZXF1ZXN0GiIudGVsZXBvcnQuY3Jvd25qZXdlbC52MS5Dcm93bkpld2VsEmcKEFVwc2VydENyb3duSmV3ZWwSLy50ZWxlcG9ydC5jcm93bmpld2VsLnYxLlVwc2VydENyb3duSmV3ZWxSZXF1ZXN0GiIudGVsZXBvcnQuY3Jvd25qZXdlbC52MS5Dcm93bkpld2VsElsKEERlbGV0ZUNyb3duSmV3ZWwSLy50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkRlbGV0ZUNyb3duSmV3ZWxSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5QlhaVmdpdGh1Yi5jb20vZ3Jhdml0YXRpb25hbC90ZWxlcG9ydC9hcGkvZ2VuL3Byb3RvL2dvL3RlbGVwb3J0L2Nyb3duamV3ZWwvdjE7Y3Jvd25qZXdlbHYxYgZwcm90bzM", [file_google_protobuf_empty, file_teleport_crownjewel_v1_crownjewel]);

/**
 * CrownJewelRequest is a request to create a new CrownJewel.
 *
 * @generated from message teleport.crownjewel.v1.CreateCrownJewelRequest
 */
export type CreateCrownJewelRequest = Message<"teleport.crownjewel.v1.CreateCrownJewelRequest"> & {
  /**
   * @generated from field: teleport.crownjewel.v1.CrownJewel crown_jewel = 2;
   */
  crownJewel?: CrownJewel;
};

/**
 * Describes the message teleport.crownjewel.v1.CreateCrownJewelRequest.
 * Use `create(CreateCrownJewelRequestSchema)` to create a new message.
 */
export const CreateCrownJewelRequestSchema: GenMessage<CreateCrownJewelRequest> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 0);

/**
 * GetCrownJewelRequest is a request to get a CrownJewel by name.
 *
 * @generated from message teleport.crownjewel.v1.GetCrownJewelRequest
 */
export type GetCrownJewelRequest = Message<"teleport.crownjewel.v1.GetCrownJewelRequest"> & {
  /**
   * Name is the name of the CrownJewel to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.crownjewel.v1.GetCrownJewelRequest.
 * Use `create(GetCrownJewelRequestSchema)` to create a new message.
 */
export const GetCrownJewelRequestSchema: GenMessage<GetCrownJewelRequest> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 1);

/**
 * ListCrownJewelsRequest is a request to get a list of CrownJewels.
 *
 * @generated from message teleport.crownjewel.v1.ListCrownJewelsRequest
 */
export type ListCrownJewelsRequest = Message<"teleport.crownjewel.v1.ListCrownJewelsRequest"> & {
  /**
   * page_size is the maximum number of items to return.
   * The server may impose a different page size at its discretion.
   *
   * @generated from field: int64 page_size = 1;
   */
  pageSize: bigint;

  /**
   * page_token is the next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.crownjewel.v1.ListCrownJewelsRequest.
 * Use `create(ListCrownJewelsRequestSchema)` to create a new message.
 */
export const ListCrownJewelsRequestSchema: GenMessage<ListCrownJewelsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 2);

/**
 * ListCrownJewelsResponse is a response to GetCrownJewelsRequest.
 *
 * @generated from message teleport.crownjewel.v1.ListCrownJewelsResponse
 */
export type ListCrownJewelsResponse = Message<"teleport.crownjewel.v1.ListCrownJewelsResponse"> & {
  /**
   * @generated from field: repeated teleport.crownjewel.v1.CrownJewel crown_jewels = 1;
   */
  crownJewels: CrownJewel[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.crownjewel.v1.ListCrownJewelsResponse.
 * Use `create(ListCrownJewelsResponseSchema)` to create a new message.
 */
export const ListCrownJewelsResponseSchema: GenMessage<ListCrownJewelsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 3);

/**
 * UpdateCrownJewelRequest is a request to update an existing CrownJewel.
 *
 * @generated from message teleport.crownjewel.v1.UpdateCrownJewelRequest
 */
export type UpdateCrownJewelRequest = Message<"teleport.crownjewel.v1.UpdateCrownJewelRequest"> & {
  /**
   * @generated from field: teleport.crownjewel.v1.CrownJewel crown_jewel = 2;
   */
  crownJewel?: CrownJewel;
};

/**
 * Describes the message teleport.crownjewel.v1.UpdateCrownJewelRequest.
 * Use `create(UpdateCrownJewelRequestSchema)` to create a new message.
 */
export const UpdateCrownJewelRequestSchema: GenMessage<UpdateCrownJewelRequest> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 4);

/**
 * UpsertCrownJewelRequest is a request to upsert a CrownJewel.
 *
 * @generated from message teleport.crownjewel.v1.UpsertCrownJewelRequest
 */
export type UpsertCrownJewelRequest = Message<"teleport.crownjewel.v1.UpsertCrownJewelRequest"> & {
  /**
   * @generated from field: teleport.crownjewel.v1.CrownJewel crown_jewel = 2;
   */
  crownJewel?: CrownJewel;
};

/**
 * Describes the message teleport.crownjewel.v1.UpsertCrownJewelRequest.
 * Use `create(UpsertCrownJewelRequestSchema)` to create a new message.
 */
export const UpsertCrownJewelRequestSchema: GenMessage<UpsertCrownJewelRequest> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 5);

/**
 * DeleteCrownJewelRequest is a request to delete a CrownJewel.
 *
 * @generated from message teleport.crownjewel.v1.DeleteCrownJewelRequest
 */
export type DeleteCrownJewelRequest = Message<"teleport.crownjewel.v1.DeleteCrownJewelRequest"> & {
  /**
   * Name is the name of the CrownJewel to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.crownjewel.v1.DeleteCrownJewelRequest.
 * Use `create(DeleteCrownJewelRequestSchema)` to create a new message.
 */
export const DeleteCrownJewelRequestSchema: GenMessage<DeleteCrownJewelRequest> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel_service, 6);

/**
 * CrownJewelService is a service that provides methods to manage CrownJewels.
 *
 * @generated from service teleport.crownjewel.v1.CrownJewelService
 */
export const CrownJewelService: GenService<{
  /**
   * CreateCrownJewel creates a new CrownJewel.
   *
   * @generated from rpc teleport.crownjewel.v1.CrownJewelService.CreateCrownJewel
   */
  createCrownJewel: {
    methodKind: "unary";
    input: typeof CreateCrownJewelRequestSchema;
    output: typeof CrownJewelSchema;
  },
  /**
   * GetCrownJewel gets a CrownJewel by name.
   *
   * @generated from rpc teleport.crownjewel.v1.CrownJewelService.GetCrownJewel
   */
  getCrownJewel: {
    methodKind: "unary";
    input: typeof GetCrownJewelRequestSchema;
    output: typeof CrownJewelSchema;
  },
  /**
   * ListCrownJewels returns a list of CrownJewels. It supports pagination.
   *
   * @generated from rpc teleport.crownjewel.v1.CrownJewelService.ListCrownJewels
   */
  listCrownJewels: {
    methodKind: "unary";
    input: typeof ListCrownJewelsRequestSchema;
    output: typeof ListCrownJewelsResponseSchema;
  },
  /**
   * UpdateCrownJewel updates an existing CrownJewel.
   *
   * @generated from rpc teleport.crownjewel.v1.CrownJewelService.UpdateCrownJewel
   */
  updateCrownJewel: {
    methodKind: "unary";
    input: typeof UpdateCrownJewelRequestSchema;
    output: typeof CrownJewelSchema;
  },
  /**
   * UpsertCrownJewel upserts a CrownJewel.
   *
   * @generated from rpc teleport.crownjewel.v1.CrownJewelService.UpsertCrownJewel
   */
  upsertCrownJewel: {
    methodKind: "unary";
    input: typeof UpsertCrownJewelRequestSchema;
    output: typeof CrownJewelSchema;
  },
  /**
   * DeleteCrownJewel deletes a CrownJewel.
   *
   * @generated from rpc teleport.crownjewel.v1.CrownJewelService.DeleteCrownJewel
   */
  deleteCrownJewel: {
    methodKind: "unary";
    input: typeof DeleteCrownJewelRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_crownjewel_v1_crownjewel_service, 0);

