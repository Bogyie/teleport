// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/scim/v1/scim_service.proto (package teleport.scim.v1, syntax proto3)
/* eslint-disable */

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { CreateSCIMResourceRequest, DeleteSCIMResourceRequest, GetSCIMResourceRequest, ListSCIMResourcesRequest, Resource, ResourceList, UpdateSCIMResourceRequest } from "./scim_service_pb";

/**
 * List fetches all (or a subset of all) resources resources of a given type
 *
 * @generated from rpc teleport.scim.v1.SCIMService.ListSCIMResources
 */
export const listSCIMResources = {
  localName: "listSCIMResources",
  name: "ListSCIMResources",
  kind: MethodKind.Unary,
  I: ListSCIMResourcesRequest,
  O: ResourceList,
  service: {
    typeName: "teleport.scim.v1.SCIMService"
  }
} as const;

/**
 * GetSCIMResource fetches a single SCIM resource from the server by name
 *
 * @generated from rpc teleport.scim.v1.SCIMService.GetSCIMResource
 */
export const getSCIMResource = {
  localName: "getSCIMResource",
  name: "GetSCIMResource",
  kind: MethodKind.Unary,
  I: GetSCIMResourceRequest,
  O: Resource,
  service: {
    typeName: "teleport.scim.v1.SCIMService"
  }
} as const;

/**
 * CreateSCIResource creates a new SCIM resource based on a supplied
 * resource description
 *
 * @generated from rpc teleport.scim.v1.SCIMService.CreateSCIMResource
 */
export const createSCIMResource = {
  localName: "createSCIMResource",
  name: "CreateSCIMResource",
  kind: MethodKind.Unary,
  I: CreateSCIMResourceRequest,
  O: Resource,
  service: {
    typeName: "teleport.scim.v1.SCIMService"
  }
} as const;

/**
 * UpdateResource handles a request to update a resource, returning a
 * representation of the updated resource
 *
 * @generated from rpc teleport.scim.v1.SCIMService.UpdateSCIMResource
 */
export const updateSCIMResource = {
  localName: "updateSCIMResource",
  name: "UpdateSCIMResource",
  kind: MethodKind.Unary,
  I: UpdateSCIMResourceRequest,
  O: Resource,
  service: {
    typeName: "teleport.scim.v1.SCIMService"
  }
} as const;

/**
 * DeleteSCIMResource deletes a SCIM-managed resource
 *
 * @generated from rpc teleport.scim.v1.SCIMService.DeleteSCIMResource
 */
export const deleteSCIMResource = {
  localName: "deleteSCIMResource",
  name: "DeleteSCIMResource",
  kind: MethodKind.Unary,
  I: DeleteSCIMResourceRequest,
  O: Empty,
  service: {
    typeName: "teleport.scim.v1.SCIMService"
  }
} as const;
