// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/scim/v1/scim_service.proto (package teleport.scim.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/scim/v1/scim_service.proto.
 */
export const file_teleport_scim_v1_scim_service: GenFile = /*@__PURE__*/
  fileDesc("CiN0ZWxlcG9ydC9zY2ltL3YxL3NjaW1fc2VydmljZS5wcm90bxIQdGVsZXBvcnQuc2NpbS52MSKBAQoYTGlzdFNDSU1SZXNvdXJjZXNSZXF1ZXN0Ei8KBnRhcmdldBgBIAEoCzIfLnRlbGVwb3J0LnNjaW0udjEuUmVxdWVzdFRhcmdldBIkCgRwYWdlGAIgASgLMhYudGVsZXBvcnQuc2NpbS52MS5QYWdlEg4KBmZpbHRlchgDIAEoCSJJChZHZXRTQ0lNUmVzb3VyY2VSZXF1ZXN0Ei8KBnRhcmdldBgBIAEoCzIfLnRlbGVwb3J0LnNjaW0udjEuUmVxdWVzdFRhcmdldCJ6ChlDcmVhdGVTQ0lNUmVzb3VyY2VSZXF1ZXN0Ei8KBnRhcmdldBgBIAEoCzIfLnRlbGVwb3J0LnNjaW0udjEuUmVxdWVzdFRhcmdldBIsCghyZXNvdXJjZRgCIAEoCzIaLnRlbGVwb3J0LnNjaW0udjEuUmVzb3VyY2UiegoZVXBkYXRlU0NJTVJlc291cmNlUmVxdWVzdBIvCgZ0YXJnZXQYASABKAsyHy50ZWxlcG9ydC5zY2ltLnYxLlJlcXVlc3RUYXJnZXQSLAoIcmVzb3VyY2UYAiABKAsyGi50ZWxlcG9ydC5zY2ltLnYxLlJlc291cmNlIkwKGURlbGV0ZVNDSU1SZXNvdXJjZVJlcXVlc3QSLwoGdGFyZ2V0GAEgASgLMh8udGVsZXBvcnQuc2NpbS52MS5SZXF1ZXN0VGFyZ2V0Io8BCghSZXNvdXJjZRIPCgdzY2hlbWFzGAEgAygJEgoKAmlkGAIgASgJEhMKC2V4dGVybmFsX2lkGAMgASgJEiQKBG1ldGEYBCABKAsyFi50ZWxlcG9ydC5zY2ltLnYxLk1ldGESKwoKYXR0cmlidXRlcxgFIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QimwEKBE1ldGESFQoNcmVzb3VyY2VfdHlwZRgBIAEoCRIrCgdjcmVhdGVkGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghtb2RpZmllZBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIbG9jYXRpb24YBCABKAkSDwoHdmVyc2lvbhgFIAEoCSKBAQoMUmVzb3VyY2VMaXN0EhUKDXRvdGFsX3Jlc3VsdHMYASABKAUSEwoLc3RhcnRfaW5kZXgYAiABKAUSFgoOaXRlbXNfcGVyX3BhZ2UYAyABKAUSLQoJcmVzb3VyY2VzGAQgAygLMhoudGVsZXBvcnQuc2NpbS52MS5SZXNvdXJjZSJlCg1SZXF1ZXN0VGFyZ2V0EhUKDWF1dGhvcml6YXRpb24YASABKAkSEQoJcGx1Z2luX2lkGAIgASgJEhUKDXJlc291cmNlX3R5cGUYAyABKAkSEwoLcmVzb3VyY2VfaWQYBCABKAkiKgoEUGFnZRITCgtzdGFydF9pbmRleBgBIAEoBBINCgVjb3VudBgCIAEoBDLgAwoLU0NJTVNlcnZpY2USXwoRTGlzdFNDSU1SZXNvdXJjZXMSKi50ZWxlcG9ydC5zY2ltLnYxLkxpc3RTQ0lNUmVzb3VyY2VzUmVxdWVzdBoeLnRlbGVwb3J0LnNjaW0udjEuUmVzb3VyY2VMaXN0ElcKD0dldFNDSU1SZXNvdXJjZRIoLnRlbGVwb3J0LnNjaW0udjEuR2V0U0NJTVJlc291cmNlUmVxdWVzdBoaLnRlbGVwb3J0LnNjaW0udjEuUmVzb3VyY2USXQoSQ3JlYXRlU0NJTVJlc291cmNlEisudGVsZXBvcnQuc2NpbS52MS5DcmVhdGVTQ0lNUmVzb3VyY2VSZXF1ZXN0GhoudGVsZXBvcnQuc2NpbS52MS5SZXNvdXJjZRJdChJVcGRhdGVTQ0lNUmVzb3VyY2USKy50ZWxlcG9ydC5zY2ltLnYxLlVwZGF0ZVNDSU1SZXNvdXJjZVJlcXVlc3QaGi50ZWxlcG9ydC5zY2ltLnYxLlJlc291cmNlElkKEkRlbGV0ZVNDSU1SZXNvdXJjZRIrLnRlbGVwb3J0LnNjaW0udjEuRGVsZXRlU0NJTVJlc291cmNlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUJMWkpnaXRodWIuY29tL2dyYXZpdGF0aW9uYWwvdGVsZXBvcnQvYXBpL2dlbi9wcm90by9nby90ZWxlcG9ydC9zY2ltL3YxO3NjaW12MWIGcHJvdG8z", [file_google_protobuf_empty, file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * ListSCIMResourcesRequest represents a request to fetch multiple resources
 *
 * @generated from message teleport.scim.v1.ListSCIMResourcesRequest
 */
export type ListSCIMResourcesRequest = Message<"teleport.scim.v1.ListSCIMResourcesRequest"> & {
  /**
   * Target describes the set of requested by the client, vy integration and
   * resource type.
   *
   * @generated from field: teleport.scim.v1.RequestTarget target = 1;
   */
  target?: RequestTarget;

  /**
   * Page is an optional request to retrieve a page of results. Returns all
   * appropriate results if not set.
   *
   * @generated from field: teleport.scim.v1.Page page = 2;
   */
  page?: Page;

  /**
   * Filter is an optional filter to apply to any retrieved results.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message teleport.scim.v1.ListSCIMResourcesRequest.
 * Use `create(ListSCIMResourcesRequestSchema)` to create a new message.
 */
export const ListSCIMResourcesRequestSchema: GenMessage<ListSCIMResourcesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 0);

/**
 * GetSCIMResourceRequest describes a request to fetch a specific resource
 *
 * @generated from message teleport.scim.v1.GetSCIMResourceRequest
 */
export type GetSCIMResourceRequest = Message<"teleport.scim.v1.GetSCIMResourceRequest"> & {
  /**
   * Target is the owner, type and ID if the resource targeted by the request.
   *
   * @generated from field: teleport.scim.v1.RequestTarget target = 1;
   */
  target?: RequestTarget;
};

/**
 * Describes the message teleport.scim.v1.GetSCIMResourceRequest.
 * Use `create(GetSCIMResourceRequestSchema)` to create a new message.
 */
export const GetSCIMResourceRequestSchema: GenMessage<GetSCIMResourceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 1);

/**
 * CreateSCIMResourceRequest contains a request for the SCIM server to create a
 * new resource
 *
 * @generated from message teleport.scim.v1.CreateSCIMResourceRequest
 */
export type CreateSCIMResourceRequest = Message<"teleport.scim.v1.CreateSCIMResourceRequest"> & {
  /**
   * Target is the owner & type of the resource targeted by the request.
   *
   * @generated from field: teleport.scim.v1.RequestTarget target = 1;
   */
  target?: RequestTarget;

  /**
   * Resource describes the resource to be created
   *
   * @generated from field: teleport.scim.v1.Resource resource = 2;
   */
  resource?: Resource;
};

/**
 * Describes the message teleport.scim.v1.CreateSCIMResourceRequest.
 * Use `create(CreateSCIMResourceRequestSchema)` to create a new message.
 */
export const CreateSCIMResourceRequestSchema: GenMessage<CreateSCIMResourceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 2);

/**
 * UpdateSCIMResourceRequest describes an update to a given resource
 *
 * @generated from message teleport.scim.v1.UpdateSCIMResourceRequest
 */
export type UpdateSCIMResourceRequest = Message<"teleport.scim.v1.UpdateSCIMResourceRequest"> & {
  /**
   * Target is the owner, type and ID if the resource targeted by the request.
   *
   * @generated from field: teleport.scim.v1.RequestTarget target = 1;
   */
  target?: RequestTarget;

  /**
   * Resource is a representation of the updated resource that the server needs
   * to conform with
   *
   * @generated from field: teleport.scim.v1.Resource resource = 2;
   */
  resource?: Resource;
};

/**
 * Describes the message teleport.scim.v1.UpdateSCIMResourceRequest.
 * Use `create(UpdateSCIMResourceRequestSchema)` to create a new message.
 */
export const UpdateSCIMResourceRequestSchema: GenMessage<UpdateSCIMResourceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 3);

/**
 * DeleteSCIMResourceRequest describes a request to delete a SCIM-mamanged
 * resource
 *
 * @generated from message teleport.scim.v1.DeleteSCIMResourceRequest
 */
export type DeleteSCIMResourceRequest = Message<"teleport.scim.v1.DeleteSCIMResourceRequest"> & {
  /**
   * Target is the owner, type and ID if the resource targeted by the request.
   *
   * @generated from field: teleport.scim.v1.RequestTarget target = 1;
   */
  target?: RequestTarget;
};

/**
 * Describes the message teleport.scim.v1.DeleteSCIMResourceRequest.
 * Use `create(DeleteSCIMResourceRequestSchema)` to create a new message.
 */
export const DeleteSCIMResourceRequestSchema: GenMessage<DeleteSCIMResourceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 4);

/**
 * Resource represents an arbitrary SCIM resource, as per RFC7643
 * Section 3.1.
 *
 * See https://datatracker.ietf.org/doc/html/rfc7643#section-3.1
 *
 * @generated from message teleport.scim.v1.Resource
 */
export type Resource = Message<"teleport.scim.v1.Resource"> & {
  /**
   * @generated from field: repeated string schemas = 1;
   */
  schemas: string[];

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: string external_id = 3;
   */
  externalId: string;

  /**
   * @generated from field: teleport.scim.v1.Meta meta = 4;
   */
  meta?: Meta;

  /**
   * @generated from field: google.protobuf.Struct attributes = 5;
   */
  attributes?: JsonObject;
};

/**
 * Describes the message teleport.scim.v1.Resource.
 * Use `create(ResourceSchema)` to create a new message.
 */
export const ResourceSchema: GenMessage<Resource> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 5);

/**
 * Meta holds resource metadata as per RFC7643 Section 3.1.
 *
 * See https://datatracker.ietf.org/doc/html/rfc7643#section-3.1
 *
 * @generated from message teleport.scim.v1.Meta
 */
export type Meta = Message<"teleport.scim.v1.Meta"> & {
  /**
   * @generated from field: string resource_type = 1;
   */
  resourceType: string;

  /**
   * @generated from field: google.protobuf.Timestamp created = 2;
   */
  created?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp modified = 3;
   */
  modified?: Timestamp;

  /**
   * @generated from field: string location = 4;
   */
  location: string;

  /**
   * @generated from field: string version = 5;
   */
  version: string;
};

/**
 * Describes the message teleport.scim.v1.Meta.
 * Use `create(MetaSchema)` to create a new message.
 */
export const MetaSchema: GenMessage<Meta> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 6);

/**
 * ResourceList encapsulates a list of resources as per RFC7644
 * Section 3.4.2
 *
 * See https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2
 *
 * @generated from message teleport.scim.v1.ResourceList
 */
export type ResourceList = Message<"teleport.scim.v1.ResourceList"> & {
  /**
   * @generated from field: int32 total_results = 1;
   */
  totalResults: number;

  /**
   * @generated from field: int32 start_index = 2;
   */
  startIndex: number;

  /**
   * @generated from field: int32 items_per_page = 3;
   */
  itemsPerPage: number;

  /**
   * @generated from field: repeated teleport.scim.v1.Resource resources = 4;
   */
  resources: Resource[];
};

/**
 * Describes the message teleport.scim.v1.ResourceList.
 * Use `create(ResourceListSchema)` to create a new message.
 */
export const ResourceListSchema: GenMessage<ResourceList> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 7);

/**
 * RequestTarget describes the target resource set of a given request. Common to
 * all request types.
 *
 * @generated from message teleport.scim.v1.RequestTarget
 */
export type RequestTarget = Message<"teleport.scim.v1.RequestTarget"> & {
  /**
   * Authorization is the contents of the HTTP Authorization header supplied by
   * the SCIM client, used to authenticate the request against the targeted
   * interation.
   *
   * @generated from field: string authorization = 1;
   */
  authorization: string;

  /**
   * PluginID is the name of the integration to interact with
   *
   * @generated from field: string plugin_id = 2;
   */
  pluginId: string;

  /**
   * ResourceType is the name of the type of resource to interact with.
   * Expecting either "User" or "Group"
   *
   * @generated from field: string resource_type = 3;
   */
  resourceType: string;

  /**
   * ResourceID is the name of a specific resource to interact with. If blank,
   * treat the request as a bulk query
   *
   * @generated from field: string resource_id = 4;
   */
  resourceId: string;
};

/**
 * Describes the message teleport.scim.v1.RequestTarget.
 * Use `create(RequestTargetSchema)` to create a new message.
 */
export const RequestTargetSchema: GenMessage<RequestTarget> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 8);

/**
 * Page represents an optional range to set in GET request
 *
 * @generated from message teleport.scim.v1.Page
 */
export type Page = Message<"teleport.scim.v1.Page"> & {
  /**
   * @generated from field: uint64 start_index = 1;
   */
  startIndex: bigint;

  /**
   * @generated from field: uint64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message teleport.scim.v1.Page.
 * Use `create(PageSchema)` to create a new message.
 */
export const PageSchema: GenMessage<Page> = /*@__PURE__*/
  messageDesc(file_teleport_scim_v1_scim_service, 9);

/**
 * SCIMService implements a SCIM gateway for external IDPs for user provisioning
 *
 * @generated from service teleport.scim.v1.SCIMService
 */
export const SCIMService: GenService<{
  /**
   * List fetches all (or a subset of all) resources resources of a given type
   *
   * @generated from rpc teleport.scim.v1.SCIMService.ListSCIMResources
   */
  listSCIMResources: {
    methodKind: "unary";
    input: typeof ListSCIMResourcesRequestSchema;
    output: typeof ResourceListSchema;
  },
  /**
   * GetSCIMResource fetches a single SCIM resource from the server by name
   *
   * @generated from rpc teleport.scim.v1.SCIMService.GetSCIMResource
   */
  getSCIMResource: {
    methodKind: "unary";
    input: typeof GetSCIMResourceRequestSchema;
    output: typeof ResourceSchema;
  },
  /**
   * CreateSCIResource creates a new SCIM resource based on a supplied
   * resource description
   *
   * @generated from rpc teleport.scim.v1.SCIMService.CreateSCIMResource
   */
  createSCIMResource: {
    methodKind: "unary";
    input: typeof CreateSCIMResourceRequestSchema;
    output: typeof ResourceSchema;
  },
  /**
   * UpdateResource handles a request to update a resource, returning a
   * representation of the updated resource
   *
   * @generated from rpc teleport.scim.v1.SCIMService.UpdateSCIMResource
   */
  updateSCIMResource: {
    methodKind: "unary";
    input: typeof UpdateSCIMResourceRequestSchema;
    output: typeof ResourceSchema;
  },
  /**
   * DeleteSCIMResource deletes a SCIM-managed resource
   *
   * @generated from rpc teleport.scim.v1.SCIMService.DeleteSCIMResource
   */
  deleteSCIMResource: {
    methodKind: "unary";
    input: typeof DeleteSCIMResourceRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_scim_v1_scim_service, 0);

