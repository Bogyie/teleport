//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/lib/teleterm/v1/gateway.proto (package teleport.lib.teleterm.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/lib/teleterm/v1/gateway.proto.
 */
export const file_teleport_lib_teleterm_v1_gateway: GenFile = /*@__PURE__*/
  fileDesc("CiZ0ZWxlcG9ydC9saWIvdGVsZXRlcm0vdjEvZ2F0ZXdheS5wcm90bxIYdGVsZXBvcnQubGliLnRlbGV0ZXJtLnYxIo8CCgdHYXRld2F5EgsKA3VyaRgBIAEoCRITCgt0YXJnZXRfbmFtZRgCIAEoCRISCgp0YXJnZXRfdXJpGAMgASgJEhMKC3RhcmdldF91c2VyGAQgASgJEhUKDWxvY2FsX2FkZHJlc3MYBSABKAkSEgoKbG9jYWxfcG9ydBgGIAEoCRIQCghwcm90b2NvbBgHIAEoCRIfChd0YXJnZXRfc3VicmVzb3VyY2VfbmFtZRgJIAEoCRJIChNnYXRld2F5X2NsaV9jb21tYW5kGAogASgLMisudGVsZXBvcnQubGliLnRlbGV0ZXJtLnYxLkdhdGV3YXlDTElDb21tYW5kSgQICBAJUgtjbGlfY29tbWFuZCJNChFHYXRld2F5Q0xJQ29tbWFuZBIMCgRwYXRoGAEgASgJEgwKBGFyZ3MYAiADKAkSCwoDZW52GAMgAygJEg8KB3ByZXZpZXcYBCABKAlCVFpSZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2dlbi9wcm90by9nby90ZWxlcG9ydC9saWIvdGVsZXRlcm0vdjE7dGVsZXRlcm12MWIGcHJvdG8z");

/**
 * Gateway is Teleterm's name for a connection to a resource like a database or a web app
 * established through our ALPN proxy.
 *
 * The term "gateway" is used to avoid using the term "proxy" itself which could be confusing as
 * "proxy" means a couple of different things depending on the context. But for Teleterm, a gateway
 * is always an ALPN proxy connection.
 *
 * See RFD 39 for more info on ALPN.
 *
 * @generated from message teleport.lib.teleterm.v1.Gateway
 */
export type Gateway = Message<"teleport.lib.teleterm.v1.Gateway"> & {
  /**
   * uri is the gateway uri
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * target_name is the target resource name
   *
   * @generated from field: string target_name = 2;
   */
  targetName: string;

  /**
   * target_uri is the target uri
   *
   * @generated from field: string target_uri = 3;
   */
  targetUri: string;

  /**
   * target_user is the target user
   *
   * @generated from field: string target_user = 4;
   */
  targetUser: string;

  /**
   * local_address is the gateway address on localhost
   *
   * @generated from field: string local_address = 5;
   */
  localAddress: string;

  /**
   * local_port is the gateway address on localhost
   *
   * @generated from field: string local_port = 6;
   */
  localPort: string;

  /**
   * protocol is the gateway protocol
   *
   * @generated from field: string protocol = 7;
   */
  protocol: string;

  /**
   * target_subresource_name points at a subresource of the remote resource, for example a
   * database name on a database server.
   *
   * @generated from field: string target_subresource_name = 9;
   */
  targetSubresourceName: string;

  /**
   * gateway_cli_client represents a command that the user can execute to connect to the resource
   * through the gateway.
   *
   * Instead of generating those commands in in the frontend code, they are returned from the tsh
   * daemon. This means that the Database Access team can add support for a new protocol and
   * Connect will support it right away with no extra changes.
   *
   * @generated from field: teleport.lib.teleterm.v1.GatewayCLICommand gateway_cli_command = 10;
   */
  gatewayCliCommand?: GatewayCLICommand;
};

/**
 * Describes the message teleport.lib.teleterm.v1.Gateway.
 * Use `create(GatewaySchema)` to create a new message.
 */
export const GatewaySchema: GenMessage<Gateway> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_gateway, 0);

/**
 * GatewayCLICommand represents a command that the user can execute to connect to a gateway
 * resource. It is a combination of two different os/exec.Cmd structs, where path, args and env are
 * directly taken from one Cmd and the preview field is constructed from another Cmd.
 *
 * @generated from message teleport.lib.teleterm.v1.GatewayCLICommand
 */
export type GatewayCLICommand = Message<"teleport.lib.teleterm.v1.GatewayCLICommand"> & {
  /**
   * path is the absolute path to the CLI client of a gateway if the client is
   * in PATH. Otherwise, the name of the program we were trying to find.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * args is a list containing the name of the program as the first element
   * and the actual args as the other elements
   *
   * @generated from field: repeated string args = 2;
   */
  args: string[];

  /**
   * env is a list of env vars that need to be set for the command
   * invocation. The elements of the list are in the format of NAME=value.
   *
   * @generated from field: repeated string env = 3;
   */
  env: string[];

  /**
   * preview is used to show the user what command will be executed before they decide to run it.
   * It can also be copied and then pasted into a terminal.
   * It's like os/exec.Cmd.String with two exceptions:
   *
   * 1) It is prepended with Cmd.Env.
   * 2) The command name is relative and not absolute.
   * 3) It is taken from a different Cmd than the other fields in this message. This Cmd uses a
   * special print format which makes the args suitable to be entered into a terminal, but not to
   * directly spawn a process.
   *
   * Should not be used to execute the command in the shell. Instead, use path, args, and env.
   *
   * @generated from field: string preview = 4;
   */
  preview: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GatewayCLICommand.
 * Use `create(GatewayCLICommandSchema)` to create a new message.
 */
export const GatewayCLICommandSchema: GenMessage<GatewayCLICommand> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_gateway, 1);

