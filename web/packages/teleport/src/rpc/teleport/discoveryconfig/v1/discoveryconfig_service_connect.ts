// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/discoveryconfig/v1/discoveryconfig_service.proto (package teleport.discoveryconfig.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateDiscoveryConfigRequest, DeleteAllDiscoveryConfigsRequest, DeleteDiscoveryConfigRequest, GetDiscoveryConfigRequest, ListDiscoveryConfigsRequest, ListDiscoveryConfigsResponse, UpdateDiscoveryConfigRequest, UpdateDiscoveryConfigStatusRequest, UpsertDiscoveryConfigRequest } from "./discoveryconfig_service_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { DiscoveryConfig } from "./discoveryconfig_pb.js";

/**
 * DiscoveryConfigService provides methods to manage Discovery Configs.
 *
 * Each Discovery Config has a set of matchers and a DiscoveryGroup.
 * DiscoveryServices also have a DiscoveryGroup which will be used to load all the matchers from
 * all the DiscoveryConfigs that have the same Group.
 *
 * @generated from service teleport.discoveryconfig.v1.DiscoveryConfigService
 */
export const DiscoveryConfigService = {
  typeName: "teleport.discoveryconfig.v1.DiscoveryConfigService",
  methods: {
    /**
     * ListDiscoveryConfigs returns a paginated list of Discovery Config resources.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.ListDiscoveryConfigs
     */
    listDiscoveryConfigs: {
      name: "ListDiscoveryConfigs",
      I: ListDiscoveryConfigsRequest,
      O: ListDiscoveryConfigsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetDiscoveryConfig returns the specified DiscoveryConfig resource.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.GetDiscoveryConfig
     */
    getDiscoveryConfig: {
      name: "GetDiscoveryConfig",
      I: GetDiscoveryConfigRequest,
      O: DiscoveryConfig,
      kind: MethodKind.Unary,
    },
    /**
     * CreateDiscoveryConfig creates a new DiscoveryConfig resource.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.CreateDiscoveryConfig
     */
    createDiscoveryConfig: {
      name: "CreateDiscoveryConfig",
      I: CreateDiscoveryConfigRequest,
      O: DiscoveryConfig,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateDiscoveryConfig updates an existing DiscoveryConfig resource.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.UpdateDiscoveryConfig
     */
    updateDiscoveryConfig: {
      name: "UpdateDiscoveryConfig",
      I: UpdateDiscoveryConfigRequest,
      O: DiscoveryConfig,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertDiscoveryConfig creates or updates a DiscoveryConfig resource.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.UpsertDiscoveryConfig
     */
    upsertDiscoveryConfig: {
      name: "UpsertDiscoveryConfig",
      I: UpsertDiscoveryConfigRequest,
      O: DiscoveryConfig,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteDiscoveryConfig removes the specified DiscoveryConfig resource.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.DeleteDiscoveryConfig
     */
    deleteDiscoveryConfig: {
      name: "DeleteDiscoveryConfig",
      I: DeleteDiscoveryConfigRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteAllDiscoveryConfigs removes all DiscoveryConfigs.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.DeleteAllDiscoveryConfigs
     */
    deleteAllDiscoveryConfigs: {
      name: "DeleteAllDiscoveryConfigs",
      I: DeleteAllDiscoveryConfigsRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateDiscoveryConfigStatus updates an existing DiscoveryConfig resource status object.
     *
     * @generated from rpc teleport.discoveryconfig.v1.DiscoveryConfigService.UpdateDiscoveryConfigStatus
     */
    updateDiscoveryConfigStatus: {
      name: "UpdateDiscoveryConfigStatus",
      I: UpdateDiscoveryConfigStatusRequest,
      O: DiscoveryConfig,
      kind: MethodKind.Unary,
    },
  }
} as const;

