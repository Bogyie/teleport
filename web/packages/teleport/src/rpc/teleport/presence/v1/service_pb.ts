// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/presence/v1/service.proto (package teleport.presence.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { RemoteClusterV3, RemoteClusterV3Schema } from "../../legacy/types/types_pb";
import { file_teleport_legacy_types_types } from "../../legacy/types/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/presence/v1/service.proto.
 */
export const file_teleport_presence_v1_service: GenFile = /*@__PURE__*/
  fileDesc("CiJ0ZWxlcG9ydC9wcmVzZW5jZS92MS9zZXJ2aWNlLnByb3RvEhR0ZWxlcG9ydC5wcmVzZW5jZS52MSInChdHZXRSZW1vdGVDbHVzdGVyUmVxdWVzdBIMCgRuYW1lGAEgASgJIkIKGUxpc3RSZW1vdGVDbHVzdGVyc1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgFEhIKCnBhZ2VfdG9rZW4YAiABKAkiZgoaTGlzdFJlbW90ZUNsdXN0ZXJzUmVzcG9uc2USLwoPcmVtb3RlX2NsdXN0ZXJzGAEgAygLMhYudHlwZXMuUmVtb3RlQ2x1c3RlclYzEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJ9ChpVcGRhdGVSZW1vdGVDbHVzdGVyUmVxdWVzdBIuCg5yZW1vdGVfY2x1c3RlchgBIAEoCzIWLnR5cGVzLlJlbW90ZUNsdXN0ZXJWMxIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siKgoaRGVsZXRlUmVtb3RlQ2x1c3RlclJlcXVlc3QSDAoEbmFtZRgBIAEoCTKnAwoPUHJlc2VuY2VTZXJ2aWNlElkKEEdldFJlbW90ZUNsdXN0ZXISLS50ZWxlcG9ydC5wcmVzZW5jZS52MS5HZXRSZW1vdGVDbHVzdGVyUmVxdWVzdBoWLnR5cGVzLlJlbW90ZUNsdXN0ZXJWMxJ3ChJMaXN0UmVtb3RlQ2x1c3RlcnMSLy50ZWxlcG9ydC5wcmVzZW5jZS52MS5MaXN0UmVtb3RlQ2x1c3RlcnNSZXF1ZXN0GjAudGVsZXBvcnQucHJlc2VuY2UudjEuTGlzdFJlbW90ZUNsdXN0ZXJzUmVzcG9uc2USXwoTVXBkYXRlUmVtb3RlQ2x1c3RlchIwLnRlbGVwb3J0LnByZXNlbmNlLnYxLlVwZGF0ZVJlbW90ZUNsdXN0ZXJSZXF1ZXN0GhYudHlwZXMuUmVtb3RlQ2x1c3RlclYzEl8KE0RlbGV0ZVJlbW90ZUNsdXN0ZXISMC50ZWxlcG9ydC5wcmVzZW5jZS52MS5EZWxldGVSZW1vdGVDbHVzdGVyUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUJUWlJnaXRodWIuY29tL2dyYXZpdGF0aW9uYWwvdGVsZXBvcnQvYXBpL2dlbi9wcm90by9nby90ZWxlcG9ydC9wcmVzZW5jZS92MTtwcmVzZW5jZXYxYgZwcm90bzM", [file_google_protobuf_empty, file_google_protobuf_field_mask, file_teleport_legacy_types_types]);

/**
 * Request for GetRemoteCluster
 *
 * @generated from message teleport.presence.v1.GetRemoteClusterRequest
 */
export type GetRemoteClusterRequest = Message<"teleport.presence.v1.GetRemoteClusterRequest"> & {
  /**
   * Name is the name of the RemoteCluster to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.presence.v1.GetRemoteClusterRequest.
 * Use `create(GetRemoteClusterRequestSchema)` to create a new message.
 */
export const GetRemoteClusterRequestSchema: GenMessage<GetRemoteClusterRequest> = /*@__PURE__*/
  messageDesc(file_teleport_presence_v1_service, 0);

/**
 * Request for ListRemoteClusters
 *
 * @generated from message teleport.presence.v1.ListRemoteClustersRequest
 */
export type ListRemoteClustersRequest = Message<"teleport.presence.v1.ListRemoteClustersRequest"> & {
  /**
   * The maximum number of items to return.
   * The server may impose a different page size at its discretion.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * The page_token is the next_page_token value returned from a previous List
   * request, if any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.presence.v1.ListRemoteClustersRequest.
 * Use `create(ListRemoteClustersRequestSchema)` to create a new message.
 */
export const ListRemoteClustersRequestSchema: GenMessage<ListRemoteClustersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_presence_v1_service, 1);

/**
 * Response for ListRemoteClusters
 *
 * @generated from message teleport.presence.v1.ListRemoteClustersResponse
 */
export type ListRemoteClustersResponse = Message<"teleport.presence.v1.ListRemoteClustersResponse"> & {
  /**
   * RemoteClusters is the list of RemoteClusters that were retrieved.
   *
   * @generated from field: repeated types.RemoteClusterV3 remote_clusters = 1;
   */
  remoteClusters: RemoteClusterV3[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.presence.v1.ListRemoteClustersResponse.
 * Use `create(ListRemoteClustersResponseSchema)` to create a new message.
 */
export const ListRemoteClustersResponseSchema: GenMessage<ListRemoteClustersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_presence_v1_service, 2);

/**
 * Request for UpdateRemoteCluster
 *
 * @generated from message teleport.presence.v1.UpdateRemoteClusterRequest
 */
export type UpdateRemoteClusterRequest = Message<"teleport.presence.v1.UpdateRemoteClusterRequest"> & {
  /**
   * RemoteCluster is the RemoteCluster to update.
   *
   * @generated from field: types.RemoteClusterV3 remote_cluster = 1;
   */
  remoteCluster?: RemoteClusterV3;

  /**
   * The update mask applied to the RemoteCluster.
   * Fields are masked according to their proto name.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message teleport.presence.v1.UpdateRemoteClusterRequest.
 * Use `create(UpdateRemoteClusterRequestSchema)` to create a new message.
 */
export const UpdateRemoteClusterRequestSchema: GenMessage<UpdateRemoteClusterRequest> = /*@__PURE__*/
  messageDesc(file_teleport_presence_v1_service, 3);

/**
 * Request for DeleteRemoteCluster
 *
 * @generated from message teleport.presence.v1.DeleteRemoteClusterRequest
 */
export type DeleteRemoteClusterRequest = Message<"teleport.presence.v1.DeleteRemoteClusterRequest"> & {
  /**
   * Name is the name of the RemoteCluster to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.presence.v1.DeleteRemoteClusterRequest.
 * Use `create(DeleteRemoteClusterRequestSchema)` to create a new message.
 */
export const DeleteRemoteClusterRequestSchema: GenMessage<DeleteRemoteClusterRequest> = /*@__PURE__*/
  messageDesc(file_teleport_presence_v1_service, 4);

/**
 * PresenceService provides methods to manage presence of RemoteClusters
 *
 * @generated from service teleport.presence.v1.PresenceService
 */
export const PresenceService: GenService<{
  /**
   * GetRemoteCluster retrieves a RemoteCluster by name.
   *
   * @generated from rpc teleport.presence.v1.PresenceService.GetRemoteCluster
   */
  getRemoteCluster: {
    methodKind: "unary";
    input: typeof GetRemoteClusterRequestSchema;
    output: typeof RemoteClusterV3Schema;
  },
  /**
   * ListRemoteClusters retrieves a page of RemoteClusters.
   *
   * @generated from rpc teleport.presence.v1.PresenceService.ListRemoteClusters
   */
  listRemoteClusters: {
    methodKind: "unary";
    input: typeof ListRemoteClustersRequestSchema;
    output: typeof ListRemoteClustersResponseSchema;
  },
  /**
   * UpdateRemoteCluster updates an existing RemoteCluster.
   *
   * @generated from rpc teleport.presence.v1.PresenceService.UpdateRemoteCluster
   */
  updateRemoteCluster: {
    methodKind: "unary";
    input: typeof UpdateRemoteClusterRequestSchema;
    output: typeof RemoteClusterV3Schema;
  },
  /**
   * DeleteRemoteCluster removes an existing RemoteCluster by name.
   *
   * @generated from rpc teleport.presence.v1.PresenceService.DeleteRemoteCluster
   */
  deleteRemoteCluster: {
    methodKind: "unary";
    input: typeof DeleteRemoteClusterRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_presence_v1_service, 0);

