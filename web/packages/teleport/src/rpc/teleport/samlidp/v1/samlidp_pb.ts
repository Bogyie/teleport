// Copyright 2021-2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/samlidp/v1/samlidp.proto (package teleport.samlidp.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { MFAAuthenticateResponse } from "../../legacy/client/proto/authservice_pb";
import { file_teleport_legacy_client_proto_authservice } from "../../legacy/client/proto/authservice_pb";
import type { SAMLIdPServiceProviderV1, UserV2 } from "../../legacy/types/types_pb";
import { file_teleport_legacy_types_types } from "../../legacy/types/types_pb";
import type { StringValues } from "../../legacy/types/wrappers/wrappers_pb";
import { file_teleport_legacy_types_wrappers_wrappers } from "../../legacy/types/wrappers/wrappers_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/samlidp/v1/samlidp.proto.
 */
export const file_teleport_samlidp_v1_samlidp: GenFile = /*@__PURE__*/
  fileDesc("CiF0ZWxlcG9ydC9zYW1saWRwL3YxL3NhbWxpZHAucHJvdG8SE3RlbGVwb3J0LnNhbWxpZHAudjEimwIKHFByb2Nlc3NTQU1MSWRQUmVxdWVzdFJlcXVlc3QSEwoLZGVzdGluYXRpb24YASABKAkSEgoKcmVxdWVzdF9pZBgCIAEoCRIwCgxyZXF1ZXN0X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhQKDG1ldGFkYXRhX3VybBgEIAEoCRIYChBzaWduYXR1cmVfbWV0aG9kGAUgASgJEhEKCWFzc2VydGlvbhgGIAEoDBInCh9zZXJ2aWNlX3Byb3ZpZGVyX3Nzb19kZXNjcmlwdG9yGAcgASgMEjQKDG1mYV9yZXNwb25zZRgIIAEoCzIeLnByb3RvLk1GQUF1dGhlbnRpY2F0ZVJlc3BvbnNlIjEKHVByb2Nlc3NTQU1MSWRQUmVxdWVzdFJlc3BvbnNlEhAKCHJlc3BvbnNlGAEgASgMIn0KIlRlc3RTQU1MSWRQQXR0cmlidXRlTWFwcGluZ1JlcXVlc3QSOQoQc2VydmljZV9wcm92aWRlchgBIAEoCzIfLnR5cGVzLlNBTUxJZFBTZXJ2aWNlUHJvdmlkZXJWMRIcCgV1c2VycxgCIAMoCzINLnR5cGVzLlVzZXJWMiJmCiNUZXN0U0FNTElkUEF0dHJpYnV0ZU1hcHBpbmdSZXNwb25zZRI/ChFtYXBwZWRfYXR0cmlidXRlcxgBIAMoCzIkLnRlbGVwb3J0LnNhbWxpZHAudjEuTWFwcGVkQXR0cmlidXRlIr8BCg9NYXBwZWRBdHRyaWJ1dGUSEAoIdXNlcm5hbWUYASABKAkSTQoNbWFwcGVkX3ZhbHVlcxgCIAMoCzI2LnRlbGVwb3J0LnNhbWxpZHAudjEuTWFwcGVkQXR0cmlidXRlLk1hcHBlZFZhbHVlc0VudHJ5GksKEU1hcHBlZFZhbHVlc0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIWLndyYXBwZXJzLlN0cmluZ1ZhbHVlczoCOAEyowIKDlNBTUxJZFBTZXJ2aWNlEn4KFVByb2Nlc3NTQU1MSWRQUmVxdWVzdBIxLnRlbGVwb3J0LnNhbWxpZHAudjEuUHJvY2Vzc1NBTUxJZFBSZXF1ZXN0UmVxdWVzdBoyLnRlbGVwb3J0LnNhbWxpZHAudjEuUHJvY2Vzc1NBTUxJZFBSZXF1ZXN0UmVzcG9uc2USkAEKG1Rlc3RTQU1MSWRQQXR0cmlidXRlTWFwcGluZxI3LnRlbGVwb3J0LnNhbWxpZHAudjEuVGVzdFNBTUxJZFBBdHRyaWJ1dGVNYXBwaW5nUmVxdWVzdBo4LnRlbGVwb3J0LnNhbWxpZHAudjEuVGVzdFNBTUxJZFBBdHRyaWJ1dGVNYXBwaW5nUmVzcG9uc2VCUlpQZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvc2FtbGlkcC92MTtzYW1saWRwdjFiBnByb3RvMw", [file_google_protobuf_timestamp, file_teleport_legacy_client_proto_authservice, file_teleport_legacy_types_types, file_teleport_legacy_types_wrappers_wrappers]);

/**
 * ProcessSAMLIdPRequestRequest is a request to create and sign the SAML IdP response
 * to a SAML IdP auth request.
 *
 * @generated from message teleport.samlidp.v1.ProcessSAMLIdPRequestRequest
 */
export type ProcessSAMLIdPRequestRequest = Message<"teleport.samlidp.v1.ProcessSAMLIdPRequestRequest"> & {
  /**
   * destination is the destination of the response.
   *
   * @generated from field: string destination = 1;
   */
  destination: string;

  /**
   * request_id is the request ID.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * request_time is the time the request was made.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 3;
   */
  requestTime?: Timestamp;

  /**
   * Metadata_url is the metadata URL of the SAML IdP.
   *
   * @generated from field: string metadata_url = 4;
   */
  metadataUrl: string;

  /**
   * signature_method is the signature method to use.
   *
   * @generated from field: string signature_method = 5;
   */
  signatureMethod: string;

  /**
   * assertion is the SAML assertion to sign.
   *
   * @generated from field: bytes assertion = 6;
   */
  assertion: Uint8Array;

  /**
   * service_provider_sso_descriptor is the raw bytes of the service provider's SSO descriptor.
   *
   * @generated from field: bytes service_provider_sso_descriptor = 7;
   */
  serviceProviderSsoDescriptor: Uint8Array;

  /**
   * mfa_response is an mfa challenge response used to verify the user.
   *
   * @generated from field: proto.MFAAuthenticateResponse mfa_response = 8;
   */
  mfaResponse?: MFAAuthenticateResponse;
};

/**
 * Describes the message teleport.samlidp.v1.ProcessSAMLIdPRequestRequest.
 * Use `create(ProcessSAMLIdPRequestRequestSchema)` to create a new message.
 */
export const ProcessSAMLIdPRequestRequestSchema: GenMessage<ProcessSAMLIdPRequestRequest> = /*@__PURE__*/
  messageDesc(file_teleport_samlidp_v1_samlidp, 0);

/**
 * ProcessSAMLIdPRequestResponse is a response to processing the SAML IdP auth request.
 *
 * @generated from message teleport.samlidp.v1.ProcessSAMLIdPRequestResponse
 */
export type ProcessSAMLIdPRequestResponse = Message<"teleport.samlidp.v1.ProcessSAMLIdPRequestResponse"> & {
  /**
   * response is the SAML response.
   *
   * @generated from field: bytes response = 1;
   */
  response: Uint8Array;
};

/**
 * Describes the message teleport.samlidp.v1.ProcessSAMLIdPRequestResponse.
 * Use `create(ProcessSAMLIdPRequestResponseSchema)` to create a new message.
 */
export const ProcessSAMLIdPRequestResponseSchema: GenMessage<ProcessSAMLIdPRequestResponse> = /*@__PURE__*/
  messageDesc(file_teleport_samlidp_v1_samlidp, 1);

/**
 * TestSAMLIdPAttributeMappingRequest is a request to test attribute mapping.
 *
 * @generated from message teleport.samlidp.v1.TestSAMLIdPAttributeMappingRequest
 */
export type TestSAMLIdPAttributeMappingRequest = Message<"teleport.samlidp.v1.TestSAMLIdPAttributeMappingRequest"> & {
  /**
   * service_provider is a SAML service provider with attribute mapping.
   *
   * @generated from field: types.SAMLIdPServiceProviderV1 service_provider = 1;
   */
  serviceProvider?: SAMLIdPServiceProviderV1;

  /**
   * users is a list of users whose details will be used
   * to evaluate attribute mapping.
   *
   * @generated from field: repeated types.UserV2 users = 2;
   */
  users: UserV2[];
};

/**
 * Describes the message teleport.samlidp.v1.TestSAMLIdPAttributeMappingRequest.
 * Use `create(TestSAMLIdPAttributeMappingRequestSchema)` to create a new message.
 */
export const TestSAMLIdPAttributeMappingRequestSchema: GenMessage<TestSAMLIdPAttributeMappingRequest> = /*@__PURE__*/
  messageDesc(file_teleport_samlidp_v1_samlidp, 2);

/**
 * TestSAMLIdPAttributeMappingResponse is a response to attribute mapping test request.
 *
 * @generated from message teleport.samlidp.v1.TestSAMLIdPAttributeMappingResponse
 */
export type TestSAMLIdPAttributeMappingResponse = Message<"teleport.samlidp.v1.TestSAMLIdPAttributeMappingResponse"> & {
  /**
   * mapped_attributes is the result of attribute mapping evaluation.
   *
   * @generated from field: repeated teleport.samlidp.v1.MappedAttribute mapped_attributes = 1;
   */
  mappedAttributes: MappedAttribute[];
};

/**
 * Describes the message teleport.samlidp.v1.TestSAMLIdPAttributeMappingResponse.
 * Use `create(TestSAMLIdPAttributeMappingResponseSchema)` to create a new message.
 */
export const TestSAMLIdPAttributeMappingResponseSchema: GenMessage<TestSAMLIdPAttributeMappingResponse> = /*@__PURE__*/
  messageDesc(file_teleport_samlidp_v1_samlidp, 3);

/**
 * MappedAttribute is a result of attribute mapping with username
 * of a user whose username, role and traits are used for evaluation.
 *
 * @generated from message teleport.samlidp.v1.MappedAttribute
 */
export type MappedAttribute = Message<"teleport.samlidp.v1.MappedAttribute"> & {
  /**
   * username is username of user whose detail is used for attribute mapping.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * mapped_values is a result of attribute mapping where key is requested
   * attribute name and value is result of evaluated predicate expression.
   *
   * @generated from field: map<string, wrappers.StringValues> mapped_values = 2;
   */
  mappedValues: { [key: string]: StringValues };
};

/**
 * Describes the message teleport.samlidp.v1.MappedAttribute.
 * Use `create(MappedAttributeSchema)` to create a new message.
 */
export const MappedAttributeSchema: GenMessage<MappedAttribute> = /*@__PURE__*/
  messageDesc(file_teleport_samlidp_v1_samlidp, 4);

/**
 * SAMLIdPService provides utility methods for the SAML identity provider.
 *
 * @generated from service teleport.samlidp.v1.SAMLIdPService
 */
export const SAMLIdPService: GenService<{
  /**
   * ProcessSAMLIdPRequest processes the SAML auth request.
   *
   * @generated from rpc teleport.samlidp.v1.SAMLIdPService.ProcessSAMLIdPRequest
   */
  processSAMLIdPRequest: {
    methodKind: "unary";
    input: typeof ProcessSAMLIdPRequestRequestSchema;
    output: typeof ProcessSAMLIdPRequestResponseSchema;
  },
  /**
   * TestSAMLIdPAttributeMapping tests SAML attribute mapping configuration.
   *
   * @generated from rpc teleport.samlidp.v1.SAMLIdPService.TestSAMLIdPAttributeMapping
   */
  testSAMLIdPAttributeMapping: {
    methodKind: "unary";
    input: typeof TestSAMLIdPAttributeMappingRequestSchema;
    output: typeof TestSAMLIdPAttributeMappingResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_samlidp_v1_samlidp, 0);

