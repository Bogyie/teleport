// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/devicetrust/v1/device_profile.proto (package teleport.devicetrust.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/devicetrust/v1/device_profile.proto.
 */
export const file_teleport_devicetrust_v1_device_profile: GenFile = /*@__PURE__*/
  fileDesc("Cix0ZWxlcG9ydC9kZXZpY2V0cnVzdC92MS9kZXZpY2VfcHJvZmlsZS5wcm90bxIXdGVsZXBvcnQuZGV2aWNldHJ1c3QudjEi9gEKDURldmljZVByb2ZpbGUSLwoLdXBkYXRlX3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhgKEG1vZGVsX2lkZW50aWZpZXIYAiABKAkSEgoKb3NfdmVyc2lvbhgDIAEoCRIQCghvc19idWlsZBgEIAEoCRIUCgxvc191c2VybmFtZXMYBSADKAkSGwoTamFtZl9iaW5hcnlfdmVyc2lvbhgGIAEoCRITCgtleHRlcm5hbF9pZBgHIAEoCRIdChVvc19idWlsZF9zdXBwbGVtZW50YWwYCCABKAkSDQoFb3NfaWQYCSABKAlCWlpYZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvZGV2aWNldHJ1c3QvdjE7ZGV2aWNldHJ1c3R2MWIGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * Device profile information acquired from an external source.
 * If present, it's used to further validate collected data.
 *
 * @generated from message teleport.devicetrust.v1.DeviceProfile
 */
export type DeviceProfile = Message<"teleport.devicetrust.v1.DeviceProfile"> & {
  /**
   * Latest profile update time.
   * System managed.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 1;
   */
  updateTime?: Timestamp;

  /**
   * Non-descriptive model identifier.
   * Example: "MacBookPro9,2".
   *
   * @generated from field: string model_identifier = 2;
   */
  modelIdentifier: string;

  /**
   * OS version number, without the leading 'v'.
   * See the Device's os_type for the general OS category.
   * Example: "13.2.1".
   *
   * @generated from field: string os_version = 3;
   */
  osVersion: string;

  /**
   * OS build identifier. Augments the os_version.
   * Example: "22D68".
   *
   * @generated from field: string os_build = 4;
   */
  osBuild: string;

  /**
   * Known OS users (distinct from the Teleport user).
   *
   * @generated from field: repeated string os_usernames = 5;
   */
  osUsernames: string[];

  /**
   * Jamf binary version, without the leading 'v'.
   * Example: "9.27" or "10.44.1-t1677509507".
   *
   * @generated from field: string jamf_binary_version = 6;
   */
  jamfBinaryVersion: string;

  /**
   * External device identifier, for example the Jamf or Intune ID.
   *
   * @generated from field: string external_id = 7;
   */
  externalId: string;

  /**
   * OS build supplemental number.
   * May match `sw_vers` BuildVersion more closely in certain situations, like
   * macOS rapid security response builds.
   * Example: "22F770820d".
   *
   * @generated from field: string os_build_supplemental = 8;
   */
  osBuildSupplemental: string;

  /**
   * OS identifier.
   * Mainly used to differentiate Linux distros, as there is be no variation
   * for systems like macOS or Windows.
   * Example: "ubuntu", "centos", "fedora", "rhel".
   *
   * @generated from field: string os_id = 9;
   */
  osId: string;
};

/**
 * Describes the message teleport.devicetrust.v1.DeviceProfile.
 * Use `create(DeviceProfileSchema)` to create a new message.
 */
export const DeviceProfileSchema: GenMessage<DeviceProfile> = /*@__PURE__*/
  messageDesc(file_teleport_devicetrust_v1_device_profile, 0);

