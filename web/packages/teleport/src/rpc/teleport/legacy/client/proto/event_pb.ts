// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/legacy/client/proto/event.proto (package proto, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { AccessList, Member, Review } from "../../../accesslist/v1/accesslist_pb";
import { file_teleport_accesslist_v1_accesslist } from "../../../accesslist/v1/accesslist_pb";
import type { AccessMonitoringRule } from "../../../accessmonitoringrules/v1/access_monitoring_rules_pb";
import { file_teleport_accessmonitoringrules_v1_access_monitoring_rules } from "../../../accessmonitoringrules/v1/access_monitoring_rules_pb";
import type { AutoUpdateConfig, AutoUpdateVersion } from "../../../autoupdate/v1/autoupdate_pb";
import { file_teleport_autoupdate_v1_autoupdate } from "../../../autoupdate/v1/autoupdate_pb";
import type { AccessGraphSettings } from "../../../clusterconfig/v1/access_graph_settings_pb";
import { file_teleport_clusterconfig_v1_access_graph_settings } from "../../../clusterconfig/v1/access_graph_settings_pb";
import type { CrownJewel } from "../../../crownjewel/v1/crownjewel_pb";
import { file_teleport_crownjewel_v1_crownjewel } from "../../../crownjewel/v1/crownjewel_pb";
import type { DatabaseObject } from "../../../dbobject/v1/dbobject_pb";
import { file_teleport_dbobject_v1_dbobject } from "../../../dbobject/v1/dbobject_pb";
import type { DiscoveryConfig } from "../../../discoveryconfig/v1/discoveryconfig_pb";
import { file_teleport_discoveryconfig_v1_discoveryconfig } from "../../../discoveryconfig/v1/discoveryconfig_pb";
import type { KubernetesWaitingContainer } from "../../../kubewaitingcontainer/v1/kubewaitingcontainer_pb";
import { file_teleport_kubewaitingcontainer_v1_kubewaitingcontainer } from "../../../kubewaitingcontainer/v1/kubewaitingcontainer_pb";
import type { AccessRequestV3, AppServerV3, AppV3, AuthPreferenceV2, CertAuthorityV2, ClusterAuditConfigV2, ClusterNameV2, ClusterNetworkingConfigV2, DatabaseServerV3, DatabaseServiceV1, DatabaseV3, HeadlessAuthentication, InstallerV1, IntegrationV1, KubernetesClusterV3, KubernetesServerV3, LockV2, Namespace, NetworkRestrictionsV4, OktaAssignmentV1, OktaImportRuleV1, ProvisionTokenV2, RemoteClusterV3, ResourceHeader, ReverseTunnelV2, RoleV6, SAMLIdPServiceProviderV1, ServerV2, SessionRecordingConfigV2, StaticTokensV2, TunnelConnectionV2, UIConfigV1, UserGroupV1, UserV2, WatchStatusV1, WebSessionV2, WebTokenV3, WindowsDesktopServiceV3, WindowsDesktopV3 } from "../../types/types_pb";
import { file_teleport_legacy_types_types } from "../../types/types_pb";
import type { BotInstance } from "../../../machineid/v1/bot_instance_pb";
import { file_teleport_machineid_v1_bot_instance } from "../../../machineid/v1/bot_instance_pb";
import type { SPIFFEFederation } from "../../../machineid/v1/federation_pb";
import { file_teleport_machineid_v1_federation } from "../../../machineid/v1/federation_pb";
import type { GlobalNotification, Notification } from "../../../notifications/v1/notifications_pb";
import { file_teleport_notifications_v1_notifications } from "../../../notifications/v1/notifications_pb";
import type { AuditQuery, Report, ReportState } from "../../../secreports/v1/secreports_pb";
import { file_teleport_secreports_v1_secreports } from "../../../secreports/v1/secreports_pb";
import type { UserLoginState } from "../../../userloginstate/v1/userloginstate_pb";
import { file_teleport_userloginstate_v1_userloginstate } from "../../../userloginstate/v1/userloginstate_pb";
import type { StaticHostUser } from "../../../userprovisioning/v2/statichostuser_pb";
import { file_teleport_userprovisioning_v2_statichostuser } from "../../../userprovisioning/v2/statichostuser_pb";
import type { UserTask } from "../../../usertasks/v1/user_tasks_pb";
import { file_teleport_usertasks_v1_user_tasks } from "../../../usertasks/v1/user_tasks_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/legacy/client/proto/event.proto.
 */
export const file_teleport_legacy_client_proto_event: GenFile = /*@__PURE__*/
  fileDesc("Cih0ZWxlcG9ydC9sZWdhY3kvY2xpZW50L3Byb3RvL2V2ZW50LnByb3RvEgVwcm90byLfGwoFRXZlbnQSHgoEVHlwZRgBIAEoDjIQLnByb3RvLk9wZXJhdGlvbhIvCg5SZXNvdXJjZUhlYWRlchgCIAEoCzIVLnR5cGVzLlJlc291cmNlSGVhZGVySAASLwoNQ2VydEF1dGhvcml0eRgDIAEoCzIWLnR5cGVzLkNlcnRBdXRob3JpdHlWMkgAEi0KDFN0YXRpY1Rva2VucxgEIAEoCzIVLnR5cGVzLlN0YXRpY1Rva2Vuc1YySAASMQoOUHJvdmlzaW9uVG9rZW4YBSABKAsyFy50eXBlcy5Qcm92aXNpb25Ub2tlblYySAASKwoLQ2x1c3Rlck5hbWUYBiABKAsyFC50eXBlcy5DbHVzdGVyTmFtZVYySAASHQoEVXNlchgIIAEoCzINLnR5cGVzLlVzZXJWMkgAEh0KBFJvbGUYCSABKAsyDS50eXBlcy5Sb2xlVjZIABIlCglOYW1lc3BhY2UYCiABKAsyEC50eXBlcy5OYW1lc3BhY2VIABIhCgZTZXJ2ZXIYCyABKAsyDy50eXBlcy5TZXJ2ZXJWMkgAEi8KDVJldmVyc2VUdW5uZWwYDCABKAsyFi50eXBlcy5SZXZlcnNlVHVubmVsVjJIABI1ChBUdW5uZWxDb25uZWN0aW9uGA0gASgLMhkudHlwZXMuVHVubmVsQ29ubmVjdGlvblYySAASLwoNQWNjZXNzUmVxdWVzdBgOIAEoCzIWLnR5cGVzLkFjY2Vzc1JlcXVlc3RWM0gAEikKCkFwcFNlc3Npb24YDyABKAsyEy50eXBlcy5XZWJTZXNzaW9uVjJIABIvCg1SZW1vdGVDbHVzdGVyGBAgASgLMhYudHlwZXMuUmVtb3RlQ2x1c3RlclYzSAASMQoORGF0YWJhc2VTZXJ2ZXIYESABKAsyFy50eXBlcy5EYXRhYmFzZVNlcnZlclYzSAASKQoKV2ViU2Vzc2lvbhgSIAEoCzITLnR5cGVzLldlYlNlc3Npb25WMkgAEiUKCFdlYlRva2VuGBMgASgLMhEudHlwZXMuV2ViVG9rZW5WM0gAEkMKF0NsdXN0ZXJOZXR3b3JraW5nQ29uZmlnGBQgASgLMiAudHlwZXMuQ2x1c3Rlck5ldHdvcmtpbmdDb25maWdWMkgAEkEKFlNlc3Npb25SZWNvcmRpbmdDb25maWcYFSABKAsyHy50eXBlcy5TZXNzaW9uUmVjb3JkaW5nQ29uZmlnVjJIABIxCg5BdXRoUHJlZmVyZW5jZRgWIAEoCzIXLnR5cGVzLkF1dGhQcmVmZXJlbmNlVjJIABI5ChJDbHVzdGVyQXVkaXRDb25maWcYFyABKAsyGy50eXBlcy5DbHVzdGVyQXVkaXRDb25maWdWMkgAEh0KBExvY2sYGCABKAsyDS50eXBlcy5Mb2NrVjJIABI7ChNOZXR3b3JrUmVzdHJpY3Rpb25zGBkgASgLMhwudHlwZXMuTmV0d29ya1Jlc3RyaWN0aW9uc1Y0SAASPwoVV2luZG93c0Rlc2t0b3BTZXJ2aWNlGBogASgLMh4udHlwZXMuV2luZG93c0Rlc2t0b3BTZXJ2aWNlVjNIABIxCg5XaW5kb3dzRGVza3RvcBgbIAEoCzIXLnR5cGVzLldpbmRvd3NEZXNrdG9wVjNIABIlCghEYXRhYmFzZRgcIAEoCzIRLnR5cGVzLkRhdGFiYXNlVjNIABInCglBcHBTZXJ2ZXIYHSABKAsyEi50eXBlcy5BcHBTZXJ2ZXJWM0gAEhsKA0FwcBgeIAEoCzIMLnR5cGVzLkFwcFYzSAASLwoQU25vd2ZsYWtlU2Vzc2lvbhgfIAEoCzITLnR5cGVzLldlYlNlc3Npb25WMkgAEjUKEEt1YmVybmV0ZXNTZXJ2ZXIYICABKAsyGS50eXBlcy5LdWJlcm5ldGVzU2VydmVyVjNIABI3ChFLdWJlcm5ldGVzQ2x1c3RlchghIAEoCzIaLnR5cGVzLkt1YmVybmV0ZXNDbHVzdGVyVjNIABInCglJbnN0YWxsZXIYIiABKAsyEi50eXBlcy5JbnN0YWxsZXJWMUgAEjMKD0RhdGFiYXNlU2VydmljZRgjIAEoCzIYLnR5cGVzLkRhdGFiYXNlU2VydmljZVYxSAASQQoWU0FNTElkUFNlcnZpY2VQcm92aWRlchgkIAEoCzIfLnR5cGVzLlNBTUxJZFBTZXJ2aWNlUHJvdmlkZXJWMUgAEi0KDlNBTUxJZFBTZXNzaW9uGCUgASgLMhMudHlwZXMuV2ViU2Vzc2lvblYySAASJwoJVXNlckdyb3VwGCYgASgLMhIudHlwZXMuVXNlckdyb3VwVjFIABIlCghVSUNvbmZpZxgnIAEoCzIRLnR5cGVzLlVJQ29uZmlnVjFIABIxCg5Pa3RhSW1wb3J0UnVsZRgoIAEoCzIXLnR5cGVzLk9rdGFJbXBvcnRSdWxlVjFIABIxCg5Pa3RhQXNzaWdubWVudBgpIAEoCzIXLnR5cGVzLk9rdGFBc3NpZ25tZW50VjFIABIrCgtJbnRlZ3JhdGlvbhgqIAEoCzIULnR5cGVzLkludGVncmF0aW9uVjFIABIrCgtXYXRjaFN0YXR1cxgrIAEoCzIULnR5cGVzLldhdGNoU3RhdHVzVjFIABI/ChZIZWFkbGVzc0F1dGhlbnRpY2F0aW9uGCwgASgLMh0udHlwZXMuSGVhZGxlc3NBdXRoZW50aWNhdGlvbkgAEjgKCkFjY2Vzc0xpc3QYLSABKAsyIi50ZWxlcG9ydC5hY2Nlc3NsaXN0LnYxLkFjY2Vzc0xpc3RIABJECg5Vc2VyTG9naW5TdGF0ZRguIAEoCzIqLnRlbGVwb3J0LnVzZXJsb2dpbnN0YXRlLnYxLlVzZXJMb2dpblN0YXRlSAASOgoQQWNjZXNzTGlzdE1lbWJlchgvIAEoCzIeLnRlbGVwb3J0LmFjY2Vzc2xpc3QudjEuTWVtYmVySAASRwoPRGlzY292ZXJ5Q29uZmlnGDAgASgLMiwudGVsZXBvcnQuZGlzY292ZXJ5Y29uZmlnLnYxLkRpc2NvdmVyeUNvbmZpZ0gAEjgKCkF1ZGl0UXVlcnkYMiABKAsyIi50ZWxlcG9ydC5zZWNyZXBvcnRzLnYxLkF1ZGl0UXVlcnlIABIwCgZSZXBvcnQYMyABKAsyHi50ZWxlcG9ydC5zZWNyZXBvcnRzLnYxLlJlcG9ydEgAEjoKC1JlcG9ydFN0YXRlGDQgASgLMiMudGVsZXBvcnQuc2VjcmVwb3J0cy52MS5SZXBvcnRTdGF0ZUgAEjoKEEFjY2Vzc0xpc3RSZXZpZXcYNSABKAsyHi50ZWxlcG9ydC5hY2Nlc3NsaXN0LnYxLlJldmlld0gAElcKFEFjY2Vzc01vbml0b3JpbmdSdWxlGDYgASgLMjcudGVsZXBvcnQuYWNjZXNzbW9uaXRvcmluZ3J1bGVzLnYxLkFjY2Vzc01vbml0b3JpbmdSdWxlSAASYgoaS3ViZXJuZXRlc1dhaXRpbmdDb250YWluZXIYNyABKAsyPC50ZWxlcG9ydC5rdWJld2FpdGluZ2NvbnRhaW5lci52MS5LdWJlcm5ldGVzV2FpdGluZ0NvbnRhaW5lckgAEkMKEFVzZXJOb3RpZmljYXRpb24YOCABKAsyJy50ZWxlcG9ydC5ub3RpZmljYXRpb25zLnYxLk5vdGlmaWNhdGlvbkgAEksKEkdsb2JhbE5vdGlmaWNhdGlvbhg5IAEoCzItLnRlbGVwb3J0Lm5vdGlmaWNhdGlvbnMudjEuR2xvYmFsTm90aWZpY2F0aW9uSAASOAoKQ3Jvd25KZXdlbBg6IAEoCzIiLnRlbGVwb3J0LmNyb3duamV3ZWwudjEuQ3Jvd25KZXdlbEgAEj4KDkRhdGFiYXNlT2JqZWN0GDsgASgLMiQudGVsZXBvcnQuZGJvYmplY3QudjEuRGF0YWJhc2VPYmplY3RIABI5CgtCb3RJbnN0YW5jZRg8IAEoCzIiLnRlbGVwb3J0Lm1hY2hpbmVpZC52MS5Cb3RJbnN0YW5jZUgAEk0KE0FjY2Vzc0dyYXBoU2V0dGluZ3MYPSABKAsyLi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkFjY2Vzc0dyYXBoU2V0dGluZ3NIABJDChBTUElGRkVGZWRlcmF0aW9uGD4gASgLMicudGVsZXBvcnQubWFjaGluZWlkLnYxLlNQSUZGRUZlZGVyYXRpb25IABJEChBBdXRvVXBkYXRlQ29uZmlnGEAgASgLMigudGVsZXBvcnQuYXV0b3VwZGF0ZS52MS5BdXRvVXBkYXRlQ29uZmlnSAASRgoRQXV0b1VwZGF0ZVZlcnNpb24YQSABKAsyKS50ZWxlcG9ydC5hdXRvdXBkYXRlLnYxLkF1dG9VcGRhdGVWZXJzaW9uSAASSAoQU3RhdGljSG9zdFVzZXJWMhhCIAEoCzIsLnRlbGVwb3J0LnVzZXJwcm92aXNpb25pbmcudjIuU3RhdGljSG9zdFVzZXJIABIzCghVc2VyVGFzaxhDIAEoCzIfLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5Vc2VyVGFza0gAQgoKCFJlc291cmNlSgQIBxAISgQIMRAySgQIPxBAUhJFeHRlcm5hbENsb3VkQXVkaXRSDlN0YXRpY0hvc3RVc2VyKioKCU9wZXJhdGlvbhIICgRJTklUEAASBwoDUFVUEAESCgoGREVMRVRFEAJCNFoyZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9jbGllbnQvcHJvdG9iBnByb3RvMw", [file_teleport_accesslist_v1_accesslist, file_teleport_accessmonitoringrules_v1_access_monitoring_rules, file_teleport_autoupdate_v1_autoupdate, file_teleport_clusterconfig_v1_access_graph_settings, file_teleport_crownjewel_v1_crownjewel, file_teleport_dbobject_v1_dbobject, file_teleport_discoveryconfig_v1_discoveryconfig, file_teleport_kubewaitingcontainer_v1_kubewaitingcontainer, file_teleport_legacy_types_types, file_teleport_machineid_v1_bot_instance, file_teleport_machineid_v1_federation, file_teleport_notifications_v1_notifications, file_teleport_secreports_v1_secreports, file_teleport_userloginstate_v1_userloginstate, file_teleport_userprovisioning_v2_statichostuser, file_teleport_usertasks_v1_user_tasks]);

/**
 * Event returns cluster event
 *
 * @generated from message proto.Event
 */
export type Event = Message<"proto.Event"> & {
  /**
   * Operation identifies operation
   *
   * @generated from field: proto.Operation Type = 1;
   */
  Type: Operation;

  /**
   * Resource contains the updated resource
   *
   * @generated from oneof proto.Event.Resource
   */
  Resource: {
    /**
     * ResourceHeader is specified in delete events,
     * the full object is not available, so resource
     * header is used to provide information about object type
     *
     * @generated from field: types.ResourceHeader ResourceHeader = 2;
     */
    value: ResourceHeader;
    case: "ResourceHeader";
  } | {
    /**
     * CertAuthority is filled in certificate-authority related events
     *
     * @generated from field: types.CertAuthorityV2 CertAuthority = 3;
     */
    value: CertAuthorityV2;
    case: "CertAuthority";
  } | {
    /**
     * StaticTokens is filled in static-tokens related events
     *
     * @generated from field: types.StaticTokensV2 StaticTokens = 4;
     */
    value: StaticTokensV2;
    case: "StaticTokens";
  } | {
    /**
     * ProvisionToken is filled in provision-token related events
     *
     * @generated from field: types.ProvisionTokenV2 ProvisionToken = 5;
     */
    value: ProvisionTokenV2;
    case: "ProvisionToken";
  } | {
    /**
     * ClusterNameV2 is a cluster name resource
     *
     * @generated from field: types.ClusterNameV2 ClusterName = 6;
     */
    value: ClusterNameV2;
    case: "ClusterName";
  } | {
    /**
     * User is a user resource
     *
     * @generated from field: types.UserV2 User = 8;
     */
    value: UserV2;
    case: "User";
  } | {
    /**
     * Role is a role resource
     *
     * @generated from field: types.RoleV6 Role = 9;
     */
    value: RoleV6;
    case: "Role";
  } | {
    /**
     * Namespace is a namespace resource
     *
     * @generated from field: types.Namespace Namespace = 10;
     */
    value: Namespace;
    case: "Namespace";
  } | {
    /**
     * Server is a node or proxy resource
     *
     * @generated from field: types.ServerV2 Server = 11;
     */
    value: ServerV2;
    case: "Server";
  } | {
    /**
     * ReverseTunnel is a resource with reverse tunnel
     *
     * @generated from field: types.ReverseTunnelV2 ReverseTunnel = 12;
     */
    value: ReverseTunnelV2;
    case: "ReverseTunnel";
  } | {
    /**
     * TunnelConnection is a resource for tunnel connnections
     *
     * @generated from field: types.TunnelConnectionV2 TunnelConnection = 13;
     */
    value: TunnelConnectionV2;
    case: "TunnelConnection";
  } | {
    /**
     * AccessRequest is a resource for access requests
     *
     * @generated from field: types.AccessRequestV3 AccessRequest = 14;
     */
    value: AccessRequestV3;
    case: "AccessRequest";
  } | {
    /**
     * AppSession is an application web session.
     *
     * @generated from field: types.WebSessionV2 AppSession = 15;
     */
    value: WebSessionV2;
    case: "AppSession";
  } | {
    /**
     * RemoteCluster is a resource for remote clusters
     *
     * @generated from field: types.RemoteClusterV3 RemoteCluster = 16;
     */
    value: RemoteClusterV3;
    case: "RemoteCluster";
  } | {
    /**
     * DatabaseServer is a resource for database servers.
     *
     * @generated from field: types.DatabaseServerV3 DatabaseServer = 17;
     */
    value: DatabaseServerV3;
    case: "DatabaseServer";
  } | {
    /**
     * WebSession is a regular web session.
     *
     * @generated from field: types.WebSessionV2 WebSession = 18;
     */
    value: WebSessionV2;
    case: "WebSession";
  } | {
    /**
     * WebToken is a web token.
     *
     * @generated from field: types.WebTokenV3 WebToken = 19;
     */
    value: WebTokenV3;
    case: "WebToken";
  } | {
    /**
     * ClusterNetworkingConfig is a resource for cluster networking configuration.
     *
     * @generated from field: types.ClusterNetworkingConfigV2 ClusterNetworkingConfig = 20;
     */
    value: ClusterNetworkingConfigV2;
    case: "ClusterNetworkingConfig";
  } | {
    /**
     * SessionRecordingConfig is a resource for session recording configuration.
     *
     * @generated from field: types.SessionRecordingConfigV2 SessionRecordingConfig = 21;
     */
    value: SessionRecordingConfigV2;
    case: "SessionRecordingConfig";
  } | {
    /**
     * AuthPreference is cluster auth preference.
     *
     * @generated from field: types.AuthPreferenceV2 AuthPreference = 22;
     */
    value: AuthPreferenceV2;
    case: "AuthPreference";
  } | {
    /**
     * ClusterAuditConfig is a resource for cluster audit configuration.
     *
     * @generated from field: types.ClusterAuditConfigV2 ClusterAuditConfig = 23;
     */
    value: ClusterAuditConfigV2;
    case: "ClusterAuditConfig";
  } | {
    /**
     * Lock is a lock resource.
     *
     * @generated from field: types.LockV2 Lock = 24;
     */
    value: LockV2;
    case: "Lock";
  } | {
    /**
     * NetworkRestrictions is a resource for network restrictions
     *
     * @generated from field: types.NetworkRestrictionsV4 NetworkRestrictions = 25;
     */
    value: NetworkRestrictionsV4;
    case: "NetworkRestrictions";
  } | {
    /**
     * WindowsDesktopService is a resource for Windows desktop services.
     *
     * @generated from field: types.WindowsDesktopServiceV3 WindowsDesktopService = 26;
     */
    value: WindowsDesktopServiceV3;
    case: "WindowsDesktopService";
  } | {
    /**
     * WindowsDesktop is a resource for Windows desktop host.
     *
     * @generated from field: types.WindowsDesktopV3 WindowsDesktop = 27;
     */
    value: WindowsDesktopV3;
    case: "WindowsDesktop";
  } | {
    /**
     * Database is a database resource.
     *
     * @generated from field: types.DatabaseV3 Database = 28;
     */
    value: DatabaseV3;
    case: "Database";
  } | {
    /**
     * AppServer is an application server resource.
     *
     * @generated from field: types.AppServerV3 AppServer = 29;
     */
    value: AppServerV3;
    case: "AppServer";
  } | {
    /**
     * App is an application resource.
     *
     * @generated from field: types.AppV3 App = 30;
     */
    value: AppV3;
    case: "App";
  } | {
    /**
     * SnowflakeSession is a Snowflake web session.
     *
     * @generated from field: types.WebSessionV2 SnowflakeSession = 31;
     */
    value: WebSessionV2;
    case: "SnowflakeSession";
  } | {
    /**
     * KubernetesServer is an Kubernetes server resource.
     *
     * @generated from field: types.KubernetesServerV3 KubernetesServer = 32;
     */
    value: KubernetesServerV3;
    case: "KubernetesServer";
  } | {
    /**
     * KubernetesCluster is an Kubernetes cluster resource.
     *
     * @generated from field: types.KubernetesClusterV3 KubernetesCluster = 33;
     */
    value: KubernetesClusterV3;
    case: "KubernetesCluster";
  } | {
    /**
     * Installer is an installer resource
     *
     * @generated from field: types.InstallerV1 Installer = 34;
     */
    value: InstallerV1;
    case: "Installer";
  } | {
    /**
     * DatabaseService is a DatabaseService resource
     *
     * @generated from field: types.DatabaseServiceV1 DatabaseService = 35;
     */
    value: DatabaseServiceV1;
    case: "DatabaseService";
  } | {
    /**
     * SAMLIdPServiceProvider is a SAMLIdPServiceProvider resource
     *
     * @generated from field: types.SAMLIdPServiceProviderV1 SAMLIdPServiceProvider = 36;
     */
    value: SAMLIdPServiceProviderV1;
    case: "SAMLIdPServiceProvider";
  } | {
    /**
     * SAMLIdPSession is a SAML IdP session.
     *
     * @generated from field: types.WebSessionV2 SAMLIdPSession = 37;
     */
    value: WebSessionV2;
    case: "SAMLIdPSession";
  } | {
    /**
     * UserGroup is a UserGroup resource
     *
     * @generated from field: types.UserGroupV1 UserGroup = 38;
     */
    value: UserGroupV1;
    case: "UserGroup";
  } | {
    /**
     * UIConfig provides a way for users to adjust settings of the UI served by the proxy service.
     *
     * @generated from field: types.UIConfigV1 UIConfig = 39;
     */
    value: UIConfigV1;
    case: "UIConfig";
  } | {
    /**
     * OktaImportRule is an OktaImportRule resource.
     *
     * @generated from field: types.OktaImportRuleV1 OktaImportRule = 40;
     */
    value: OktaImportRuleV1;
    case: "OktaImportRule";
  } | {
    /**
     * OktaAssignment is an OktaAssignment resource.
     *
     * @generated from field: types.OktaAssignmentV1 OktaAssignment = 41;
     */
    value: OktaAssignmentV1;
    case: "OktaAssignment";
  } | {
    /**
     * Integration is an Integration resource.
     *
     * @generated from field: types.IntegrationV1 Integration = 42;
     */
    value: IntegrationV1;
    case: "Integration";
  } | {
    /**
     * WatchStatus is an WatchStatus resource.
     *
     * @generated from field: types.WatchStatusV1 WatchStatus = 43;
     */
    value: WatchStatusV1;
    case: "WatchStatus";
  } | {
    /**
     * HeadlessAuthentication is a HeadlessAuthentication resource.
     *
     * @generated from field: types.HeadlessAuthentication HeadlessAuthentication = 44;
     */
    value: HeadlessAuthentication;
    case: "HeadlessAuthentication";
  } | {
    /**
     * AccessList is an AccessList resource.
     *
     * @generated from field: teleport.accesslist.v1.AccessList AccessList = 45;
     */
    value: AccessList;
    case: "AccessList";
  } | {
    /**
     * UserLoginState is a UserLoginState resource.
     *
     * @generated from field: teleport.userloginstate.v1.UserLoginState UserLoginState = 46;
     */
    value: UserLoginState;
    case: "UserLoginState";
  } | {
    /**
     * AccessListMember is an access list member resource.
     *
     * @generated from field: teleport.accesslist.v1.Member AccessListMember = 47;
     */
    value: Member;
    case: "AccessListMember";
  } | {
    /**
     * DiscoveryConfig contains a list of matchers to be loaded dynamically by Discovery Services.
     *
     * @generated from field: teleport.discoveryconfig.v1.DiscoveryConfig DiscoveryConfig = 48;
     */
    value: DiscoveryConfig;
    case: "DiscoveryConfig";
  } | {
    /**
     * AuditQuery is an audit query resource.
     *
     * @generated from field: teleport.secreports.v1.AuditQuery AuditQuery = 50;
     */
    value: AuditQuery;
    case: "AuditQuery";
  } | {
    /**
     * SecurityReport is a security report resource.
     *
     * @generated from field: teleport.secreports.v1.Report Report = 51;
     */
    value: Report;
    case: "Report";
  } | {
    /**
     * SecurityReportState is a security report state resource.
     *
     * @generated from field: teleport.secreports.v1.ReportState ReportState = 52;
     */
    value: ReportState;
    case: "ReportState";
  } | {
    /**
     * AccessListReview is an access list review resource.
     *
     * @generated from field: teleport.accesslist.v1.Review AccessListReview = 53;
     */
    value: Review;
    case: "AccessListReview";
  } | {
    /**
     * AccessMonitoringRule is an access monitoring rule resource.
     *
     * @generated from field: teleport.accessmonitoringrules.v1.AccessMonitoringRule AccessMonitoringRule = 54;
     */
    value: AccessMonitoringRule;
    case: "AccessMonitoringRule";
  } | {
    /**
     * KubernetesWaitingContainer is a Kubernetes ephemeral container
     * waiting to be created.
     *
     * @generated from field: teleport.kubewaitingcontainer.v1.KubernetesWaitingContainer KubernetesWaitingContainer = 55;
     */
    value: KubernetesWaitingContainer;
    case: "KubernetesWaitingContainer";
  } | {
    /**
     * UserNotification is a user notification resource.
     *
     * @generated from field: teleport.notifications.v1.Notification UserNotification = 56;
     */
    value: Notification;
    case: "UserNotification";
  } | {
    /**
     * GlobalNotification is a global notification resource.
     *
     * @generated from field: teleport.notifications.v1.GlobalNotification GlobalNotification = 57;
     */
    value: GlobalNotification;
    case: "GlobalNotification";
  } | {
    /**
     * CrownJewel is a Crown Jewel resource.
     *
     * @generated from field: teleport.crownjewel.v1.CrownJewel CrownJewel = 58;
     */
    value: CrownJewel;
    case: "CrownJewel";
  } | {
    /**
     * DatabaseObject is a database object resource.
     *
     * @generated from field: teleport.dbobject.v1.DatabaseObject DatabaseObject = 59;
     */
    value: DatabaseObject;
    case: "DatabaseObject";
  } | {
    /**
     * BotInstance is a Machine ID bot instance.
     *
     * @generated from field: teleport.machineid.v1.BotInstance BotInstance = 60;
     */
    value: BotInstance;
    case: "BotInstance";
  } | {
    /**
     * AccessGraphSettings is a resource for access graph settings.
     *
     * @generated from field: teleport.clusterconfig.v1.AccessGraphSettings AccessGraphSettings = 61;
     */
    value: AccessGraphSettings;
    case: "AccessGraphSettings";
  } | {
    /**
     * SPIFFEFederation is a resource for SPIFFE federation.
     *
     * @generated from field: teleport.machineid.v1.SPIFFEFederation SPIFFEFederation = 62;
     */
    value: SPIFFEFederation;
    case: "SPIFFEFederation";
  } | {
    /**
     * AutoUpdateConfig is a resource for autoupdate config.
     *
     * @generated from field: teleport.autoupdate.v1.AutoUpdateConfig AutoUpdateConfig = 64;
     */
    value: AutoUpdateConfig;
    case: "AutoUpdateConfig";
  } | {
    /**
     * AutoUpdateVersion is a resource for autoupdate version.
     *
     * @generated from field: teleport.autoupdate.v1.AutoUpdateVersion AutoUpdateVersion = 65;
     */
    value: AutoUpdateVersion;
    case: "AutoUpdateVersion";
  } | {
    /**
     * StaticHostUserV2 is a resource for static host users.
     *
     * @generated from field: teleport.userprovisioning.v2.StaticHostUser StaticHostUserV2 = 66;
     */
    value: StaticHostUser;
    case: "StaticHostUserV2";
  } | {
    /**
     * UsernTask is a resource for user task.
     *
     * @generated from field: teleport.usertasks.v1.UserTask UserTask = 67;
     */
    value: UserTask;
    case: "UserTask";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message proto.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_teleport_legacy_client_proto_event, 0);

/**
 * Operation identifies type of operation
 *
 * @generated from enum proto.Operation
 */
export enum Operation {
  /**
   * INIT is sent as a first sentinel event
   * on the watch channel
   *
   * @generated from enum value: INIT = 0;
   */
  INIT = 0,

  /**
   * PUT identifies created or updated object
   *
   * @generated from enum value: PUT = 1;
   */
  PUT = 1,

  /**
   * DELETE identifies deleted object
   *
   * @generated from enum value: DELETE = 2;
   */
  DELETE = 2,
}

/**
 * Describes the enum proto.Operation.
 */
export const OperationSchema: GenEnum<Operation> = /*@__PURE__*/
  enumDesc(file_teleport_legacy_client_proto_event, 0);

