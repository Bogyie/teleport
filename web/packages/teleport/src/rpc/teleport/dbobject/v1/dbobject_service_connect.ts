// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/dbobject/v1/dbobject_service.proto (package teleport.dbobject.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateDatabaseObjectRequest, DeleteDatabaseObjectRequest, GetDatabaseObjectRequest, ListDatabaseObjectsRequest, ListDatabaseObjectsResponse, UpdateDatabaseObjectRequest, UpsertDatabaseObjectRequest } from "./dbobject_service_pb.js";
import { DatabaseObject } from "./dbobject_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * DatabaseObjectService provides methods to manage Teleport DatabaseObjects
 *
 * @generated from service teleport.dbobject.v1.DatabaseObjectService
 */
export const DatabaseObjectService = {
  typeName: "teleport.dbobject.v1.DatabaseObjectService",
  methods: {
    /**
     * GetDatabaseObject is used to query a database object resource by its name.
     *
     * This will return a NotFound error if the specified database object does not exist.
     *
     * @generated from rpc teleport.dbobject.v1.DatabaseObjectService.GetDatabaseObject
     */
    getDatabaseObject: {
      name: "GetDatabaseObject",
      I: GetDatabaseObjectRequest,
      O: DatabaseObject,
      kind: MethodKind.Unary,
    },
    /**
     * ListDatabaseObjects is used to query database objects.
     *
     * Follows the pagination semantics of
     * https://cloud.google.com/apis/design/standard_methods#list.
     *
     * @generated from rpc teleport.dbobject.v1.DatabaseObjectService.ListDatabaseObjects
     */
    listDatabaseObjects: {
      name: "ListDatabaseObjects",
      I: ListDatabaseObjectsRequest,
      O: ListDatabaseObjectsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateDatabaseObject is used to create a database object.
     *
     * This will return an error if a database object by that name already exists.
     *
     * @generated from rpc teleport.dbobject.v1.DatabaseObjectService.CreateDatabaseObject
     */
    createDatabaseObject: {
      name: "CreateDatabaseObject",
      I: CreateDatabaseObjectRequest,
      O: DatabaseObject,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateDatabaseObject is used to modify an existing database object.
     *
     * @generated from rpc teleport.dbobject.v1.DatabaseObjectService.UpdateDatabaseObject
     */
    updateDatabaseObject: {
      name: "UpdateDatabaseObject",
      I: UpdateDatabaseObjectRequest,
      O: DatabaseObject,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertDatabaseObject is used to create or replace an existing database object.
     *
     * Prefer using CreateDatabaseObject and UpdateDatabaseObject.
     *
     * @generated from rpc teleport.dbobject.v1.DatabaseObjectService.UpsertDatabaseObject
     */
    upsertDatabaseObject: {
      name: "UpsertDatabaseObject",
      I: UpsertDatabaseObjectRequest,
      O: DatabaseObject,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteDatabaseObject is used to delete a specific database object.
     *
     * This will return a NotFound error if the specified database object does not exist.
     *
     * @generated from rpc teleport.dbobject.v1.DatabaseObjectService.DeleteDatabaseObject
     */
    deleteDatabaseObject: {
      name: "DeleteDatabaseObject",
      I: DeleteDatabaseObjectRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

