// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/userpreferences/v1/userpreferences.proto (package teleport.userpreferences.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { AccessGraphUserPreferences } from "./access_graph_pb";
import { file_teleport_userpreferences_v1_access_graph } from "./access_graph_pb";
import type { ClusterUserPreferences } from "./cluster_preferences_pb";
import { file_teleport_userpreferences_v1_cluster_preferences } from "./cluster_preferences_pb";
import type { OnboardUserPreferences } from "./onboard_pb";
import { file_teleport_userpreferences_v1_onboard } from "./onboard_pb";
import type { Theme } from "./theme_pb";
import { file_teleport_userpreferences_v1_theme } from "./theme_pb";
import type { UnifiedResourcePreferences } from "./unified_resource_preferences_pb";
import { file_teleport_userpreferences_v1_unified_resource_preferences } from "./unified_resource_preferences_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/userpreferences/v1/userpreferences.proto.
 */
export const file_teleport_userpreferences_v1_userpreferences: GenFile = /*@__PURE__*/
  fileDesc("CjF0ZWxlcG9ydC91c2VycHJlZmVyZW5jZXMvdjEvdXNlcnByZWZlcmVuY2VzLnByb3RvEht0ZWxlcG9ydC51c2VycHJlZmVyZW5jZXMudjEimAMKD1VzZXJQcmVmZXJlbmNlcxIxCgV0aGVtZRgCIAEoDjIiLnRlbGVwb3J0LnVzZXJwcmVmZXJlbmNlcy52MS5UaGVtZRJECgdvbmJvYXJkGAMgASgLMjMudGVsZXBvcnQudXNlcnByZWZlcmVuY2VzLnYxLk9uYm9hcmRVc2VyUHJlZmVyZW5jZXMSUAoTY2x1c3Rlcl9wcmVmZXJlbmNlcxgEIAEoCzIzLnRlbGVwb3J0LnVzZXJwcmVmZXJlbmNlcy52MS5DbHVzdGVyVXNlclByZWZlcmVuY2VzEl0KHHVuaWZpZWRfcmVzb3VyY2VfcHJlZmVyZW5jZXMYBSABKAsyNy50ZWxlcG9ydC51c2VycHJlZmVyZW5jZXMudjEuVW5pZmllZFJlc291cmNlUHJlZmVyZW5jZXMSTQoMYWNjZXNzX2dyYXBoGAYgASgLMjcudGVsZXBvcnQudXNlcnByZWZlcmVuY2VzLnYxLkFjY2Vzc0dyYXBoVXNlclByZWZlcmVuY2VzSgQIARACUgZhc3Npc3QiKwoZR2V0VXNlclByZWZlcmVuY2VzUmVxdWVzdEoECAEQAlIIdXNlcm5hbWUiXwoaR2V0VXNlclByZWZlcmVuY2VzUmVzcG9uc2USQQoLcHJlZmVyZW5jZXMYASABKAsyLC50ZWxlcG9ydC51c2VycHJlZmVyZW5jZXMudjEuVXNlclByZWZlcmVuY2VzInEKHFVwc2VydFVzZXJQcmVmZXJlbmNlc1JlcXVlc3QSQQoLcHJlZmVyZW5jZXMYASABKAsyLC50ZWxlcG9ydC51c2VycHJlZmVyZW5jZXMudjEuVXNlclByZWZlcmVuY2VzSgQIAhADUgh1c2VybmFtZTKMAgoWVXNlclByZWZlcmVuY2VzU2VydmljZRKFAQoSR2V0VXNlclByZWZlcmVuY2VzEjYudGVsZXBvcnQudXNlcnByZWZlcmVuY2VzLnYxLkdldFVzZXJQcmVmZXJlbmNlc1JlcXVlc3QaNy50ZWxlcG9ydC51c2VycHJlZmVyZW5jZXMudjEuR2V0VXNlclByZWZlcmVuY2VzUmVzcG9uc2USagoVVXBzZXJ0VXNlclByZWZlcmVuY2VzEjkudGVsZXBvcnQudXNlcnByZWZlcmVuY2VzLnYxLlVwc2VydFVzZXJQcmVmZXJlbmNlc1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHlCWVpXZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdXNlcnByZWZlcmVuY2VzL3YxO3VzZXJwcmVmZXJlbmNlc3YxYgZwcm90bzM", [file_google_protobuf_empty, file_teleport_userpreferences_v1_access_graph, file_teleport_userpreferences_v1_cluster_preferences, file_teleport_userpreferences_v1_onboard, file_teleport_userpreferences_v1_theme, file_teleport_userpreferences_v1_unified_resource_preferences]);

/**
 * UserPreferences is a collection of different user changeable preferences for the frontend.
 *
 * @generated from message teleport.userpreferences.v1.UserPreferences
 */
export type UserPreferences = Message<"teleport.userpreferences.v1.UserPreferences"> & {
  /**
   * theme is the theme of the frontend.
   *
   * @generated from field: teleport.userpreferences.v1.Theme theme = 2;
   */
  theme: Theme;

  /**
   * onboard is the preferences from the onboarding questionnaire.
   *
   * @generated from field: teleport.userpreferences.v1.OnboardUserPreferences onboard = 3;
   */
  onboard?: OnboardUserPreferences;

  /**
   * cluster_preferences are user preferences saved per cluster.
   *
   * @generated from field: teleport.userpreferences.v1.ClusterUserPreferences cluster_preferences = 4;
   */
  clusterPreferences?: ClusterUserPreferences;

  /**
   * unified_resource_preferences are user preferences saved for the Unified Resource web UI
   *
   * @generated from field: teleport.userpreferences.v1.UnifiedResourcePreferences unified_resource_preferences = 5;
   */
  unifiedResourcePreferences?: UnifiedResourcePreferences;

  /**
   * access_graph is the preferences for Access Graph.
   *
   * @generated from field: teleport.userpreferences.v1.AccessGraphUserPreferences access_graph = 6;
   */
  accessGraph?: AccessGraphUserPreferences;
};

/**
 * Describes the message teleport.userpreferences.v1.UserPreferences.
 * Use `create(UserPreferencesSchema)` to create a new message.
 */
export const UserPreferencesSchema: GenMessage<UserPreferences> = /*@__PURE__*/
  messageDesc(file_teleport_userpreferences_v1_userpreferences, 0);

/**
 * GetUserPreferencesRequest is a request to get the user preferences.
 *
 * @generated from message teleport.userpreferences.v1.GetUserPreferencesRequest
 */
export type GetUserPreferencesRequest = Message<"teleport.userpreferences.v1.GetUserPreferencesRequest"> & {
};

/**
 * Describes the message teleport.userpreferences.v1.GetUserPreferencesRequest.
 * Use `create(GetUserPreferencesRequestSchema)` to create a new message.
 */
export const GetUserPreferencesRequestSchema: GenMessage<GetUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_userpreferences_v1_userpreferences, 1);

/**
 * GetUserPreferencesResponse is a response to get the user preferences.
 *
 * @generated from message teleport.userpreferences.v1.GetUserPreferencesResponse
 */
export type GetUserPreferencesResponse = Message<"teleport.userpreferences.v1.GetUserPreferencesResponse"> & {
  /**
   * preferences is the user preferences.
   *
   * @generated from field: teleport.userpreferences.v1.UserPreferences preferences = 1;
   */
  preferences?: UserPreferences;
};

/**
 * Describes the message teleport.userpreferences.v1.GetUserPreferencesResponse.
 * Use `create(GetUserPreferencesResponseSchema)` to create a new message.
 */
export const GetUserPreferencesResponseSchema: GenMessage<GetUserPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_userpreferences_v1_userpreferences, 2);

/**
 * UpsertUserPreferencesRequest is a request to create or update the user preferences.
 *
 * @generated from message teleport.userpreferences.v1.UpsertUserPreferencesRequest
 */
export type UpsertUserPreferencesRequest = Message<"teleport.userpreferences.v1.UpsertUserPreferencesRequest"> & {
  /**
   * preferences is the new user preferences to set.
   *
   * @generated from field: teleport.userpreferences.v1.UserPreferences preferences = 1;
   */
  preferences?: UserPreferences;
};

/**
 * Describes the message teleport.userpreferences.v1.UpsertUserPreferencesRequest.
 * Use `create(UpsertUserPreferencesRequestSchema)` to create a new message.
 */
export const UpsertUserPreferencesRequestSchema: GenMessage<UpsertUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_userpreferences_v1_userpreferences, 3);

/**
 * UserPreferencesService is a service that stores user settings.
 *
 * @generated from service teleport.userpreferences.v1.UserPreferencesService
 */
export const UserPreferencesService: GenService<{
  /**
   * GetUserPreferences returns the user preferences for a given user.
   *
   * @generated from rpc teleport.userpreferences.v1.UserPreferencesService.GetUserPreferences
   */
  getUserPreferences: {
    methodKind: "unary";
    input: typeof GetUserPreferencesRequestSchema;
    output: typeof GetUserPreferencesResponseSchema;
  },
  /**
   * UpsertUserPreferences creates or updates user preferences for a given username.
   *
   * @generated from rpc teleport.userpreferences.v1.UserPreferencesService.UpsertUserPreferences
   */
  upsertUserPreferences: {
    methodKind: "unary";
    input: typeof UpsertUserPreferencesRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_userpreferences_v1_userpreferences, 0);

