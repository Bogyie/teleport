//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file accessgraph/v1alpha/resources.proto (package accessgraph.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { AccessRequestV3, AppServerV3, DatabaseServerV3, KubernetesServerV3, ResourceHeader, RoleV6, ServerV2, UserV2, WindowsDesktopV3 } from "../../teleport/legacy/types/types_pb.js";
import { AccessList, Member } from "../../teleport/accesslist/v1/accesslist_pb.js";
import { CrownJewel } from "../../teleport/crownjewel/v1/crownjewel_pb.js";
import { DatabaseObject } from "../../teleport/dbobject/v1/dbobject_pb.js";
import { Device } from "../../teleport/devicetrust/v1/device_pb.js";
import { PrivateKey } from "../../teleport/access_graph/v1/private_key_pb.js";
import { AuthorizedKey } from "../../teleport/access_graph/v1/authorized_key_pb.js";

/**
 * ResourceList is a list of resources to send to the access graph.
 *
 * @generated from message accessgraph.v1alpha.ResourceList
 */
export class ResourceList extends Message<ResourceList> {
  /**
   * @generated from field: repeated accessgraph.v1alpha.ResourceEntry resources = 1;
   */
  resources: ResourceEntry[] = [];

  constructor(data?: PartialMessage<ResourceList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.ResourceList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: ResourceEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceList {
    return new ResourceList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceList {
    return new ResourceList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceList {
    return new ResourceList().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceList | PlainMessage<ResourceList> | undefined, b: ResourceList | PlainMessage<ResourceList> | undefined): boolean {
    return proto3.util.equals(ResourceList, a, b);
  }
}

/**
 * ResourceHeaderList is a list of resource headers to send to the access graph.
 *
 * @generated from message accessgraph.v1alpha.ResourceHeaderList
 */
export class ResourceHeaderList extends Message<ResourceHeaderList> {
  /**
   * @generated from field: repeated types.ResourceHeader resources = 1;
   */
  resources: ResourceHeader[] = [];

  constructor(data?: PartialMessage<ResourceHeaderList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.ResourceHeaderList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: ResourceHeader, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceHeaderList {
    return new ResourceHeaderList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceHeaderList {
    return new ResourceHeaderList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceHeaderList {
    return new ResourceHeaderList().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceHeaderList | PlainMessage<ResourceHeaderList> | undefined, b: ResourceHeaderList | PlainMessage<ResourceHeaderList> | undefined): boolean {
    return proto3.util.equals(ResourceHeaderList, a, b);
  }
}

/**
 * AccessListsMembers is the request to declare users as members of access lists.
 *
 * @generated from message accessgraph.v1alpha.AccessListsMembers
 */
export class AccessListsMembers extends Message<AccessListsMembers> {
  /**
   * members is the list of members to add to access lists.
   *
   * @generated from field: repeated teleport.accesslist.v1.Member members = 1;
   */
  members: Member[] = [];

  constructor(data?: PartialMessage<AccessListsMembers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AccessListsMembers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "members", kind: "message", T: Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccessListsMembers {
    return new AccessListsMembers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccessListsMembers {
    return new AccessListsMembers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccessListsMembers {
    return new AccessListsMembers().fromJsonString(jsonString, options);
  }

  static equals(a: AccessListsMembers | PlainMessage<AccessListsMembers> | undefined, b: AccessListsMembers | PlainMessage<AccessListsMembers> | undefined): boolean {
    return proto3.util.equals(AccessListsMembers, a, b);
  }
}

/**
 * ExcludeAccessListsMembers is the request to exclude users from access lists.
 *
 * @generated from message accessgraph.v1alpha.ExcludeAccessListsMembers
 */
export class ExcludeAccessListsMembers extends Message<ExcludeAccessListsMembers> {
  /**
   * @generated from field: repeated accessgraph.v1alpha.ExcludeAccessListMember members = 1;
   */
  members: ExcludeAccessListMember[] = [];

  constructor(data?: PartialMessage<ExcludeAccessListsMembers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.ExcludeAccessListsMembers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "members", kind: "message", T: ExcludeAccessListMember, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExcludeAccessListsMembers {
    return new ExcludeAccessListsMembers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExcludeAccessListsMembers {
    return new ExcludeAccessListsMembers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExcludeAccessListsMembers {
    return new ExcludeAccessListsMembers().fromJsonString(jsonString, options);
  }

  static equals(a: ExcludeAccessListsMembers | PlainMessage<ExcludeAccessListsMembers> | undefined, b: ExcludeAccessListsMembers | PlainMessage<ExcludeAccessListsMembers> | undefined): boolean {
    return proto3.util.equals(ExcludeAccessListsMembers, a, b);
  }
}

/**
 * ExcludeAccessListMember is the request to exclude a user from an access list.
 *
 * @generated from message accessgraph.v1alpha.ExcludeAccessListMember
 */
export class ExcludeAccessListMember extends Message<ExcludeAccessListMember> {
  /**
   * @generated from field: string access_list = 1;
   */
  accessList = "";

  /**
   * @generated from field: string username = 2;
   */
  username = "";

  constructor(data?: PartialMessage<ExcludeAccessListMember>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.ExcludeAccessListMember";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_list", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExcludeAccessListMember {
    return new ExcludeAccessListMember().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExcludeAccessListMember {
    return new ExcludeAccessListMember().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExcludeAccessListMember {
    return new ExcludeAccessListMember().fromJsonString(jsonString, options);
  }

  static equals(a: ExcludeAccessListMember | PlainMessage<ExcludeAccessListMember> | undefined, b: ExcludeAccessListMember | PlainMessage<ExcludeAccessListMember> | undefined): boolean {
    return proto3.util.equals(ExcludeAccessListMember, a, b);
  }
}

/**
 * ResourceEntry is a wrapper for the supported resource types.
 *
 * @generated from message accessgraph.v1alpha.ResourceEntry
 */
export class ResourceEntry extends Message<ResourceEntry> {
  /**
   * @generated from oneof accessgraph.v1alpha.ResourceEntry.resource
   */
  resource: {
    /**
     * user is a user resource
     *
     * @generated from field: types.UserV2 user = 1;
     */
    value: UserV2;
    case: "user";
  } | {
    /**
     * role is a role resource
     *
     * @generated from field: types.RoleV6 role = 2;
     */
    value: RoleV6;
    case: "role";
  } | {
    /**
     * server is a node/server resource
     *
     * @generated from field: types.ServerV2 server = 3;
     */
    value: ServerV2;
    case: "server";
  } | {
    /**
     * access_request is a resource for access requests
     *
     * @generated from field: types.AccessRequestV3 access_request = 4;
     */
    value: AccessRequestV3;
    case: "accessRequest";
  } | {
    /**
     * kubernetes_server is a kubernetes server resource
     *
     * @generated from field: types.KubernetesServerV3 kubernetes_server = 5;
     */
    value: KubernetesServerV3;
    case: "kubernetesServer";
  } | {
    /**
     * app_server is an application server resource
     *
     * @generated from field: types.AppServerV3 app_server = 6;
     */
    value: AppServerV3;
    case: "appServer";
  } | {
    /**
     * database_server is a database server resource
     *
     * @generated from field: types.DatabaseServerV3 database_server = 7;
     */
    value: DatabaseServerV3;
    case: "databaseServer";
  } | {
    /**
     * windows_desktop is a resource for Windows desktop host.
     *
     * @generated from field: types.WindowsDesktopV3 windows_desktop = 8;
     */
    value: WindowsDesktopV3;
    case: "windowsDesktop";
  } | {
    /**
     * access_list is a resource for access lists.
     *
     * @generated from field: teleport.accesslist.v1.AccessList access_list = 9;
     */
    value: AccessList;
    case: "accessList";
  } | {
    /**
     * crown_jewel is a resource for crown jewels.
     *
     * @generated from field: teleport.crownjewel.v1.CrownJewel crown_jewel = 10;
     */
    value: CrownJewel;
    case: "crownJewel";
  } | {
    /**
     * database_object is a resource for database objects.
     *
     * @generated from field: teleport.dbobject.v1.DatabaseObject database_object = 11;
     */
    value: DatabaseObject;
    case: "databaseObject";
  } | {
    /**
     * device is a device trust resource.
     *
     * @generated from field: teleport.devicetrust.v1.Device device = 12;
     */
    value: Device;
    case: "device";
  } | {
    /**
     * private_key represents a private key resource found in user's laptops.
     *
     * @generated from field: teleport.access_graph.v1.PrivateKey private_key = 13;
     */
    value: PrivateKey;
    case: "privateKey";
  } | {
    /**
     * authorized_key represents a authorized key for a server.
     *
     * @generated from field: teleport.access_graph.v1.AuthorizedKey authorized_key = 14;
     */
    value: AuthorizedKey;
    case: "authorizedKey";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ResourceEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.ResourceEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: UserV2, oneof: "resource" },
    { no: 2, name: "role", kind: "message", T: RoleV6, oneof: "resource" },
    { no: 3, name: "server", kind: "message", T: ServerV2, oneof: "resource" },
    { no: 4, name: "access_request", kind: "message", T: AccessRequestV3, oneof: "resource" },
    { no: 5, name: "kubernetes_server", kind: "message", T: KubernetesServerV3, oneof: "resource" },
    { no: 6, name: "app_server", kind: "message", T: AppServerV3, oneof: "resource" },
    { no: 7, name: "database_server", kind: "message", T: DatabaseServerV3, oneof: "resource" },
    { no: 8, name: "windows_desktop", kind: "message", T: WindowsDesktopV3, oneof: "resource" },
    { no: 9, name: "access_list", kind: "message", T: AccessList, oneof: "resource" },
    { no: 10, name: "crown_jewel", kind: "message", T: CrownJewel, oneof: "resource" },
    { no: 11, name: "database_object", kind: "message", T: DatabaseObject, oneof: "resource" },
    { no: 12, name: "device", kind: "message", T: Device, oneof: "resource" },
    { no: 13, name: "private_key", kind: "message", T: PrivateKey, oneof: "resource" },
    { no: 14, name: "authorized_key", kind: "message", T: AuthorizedKey, oneof: "resource" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceEntry {
    return new ResourceEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceEntry {
    return new ResourceEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceEntry {
    return new ResourceEntry().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceEntry | PlainMessage<ResourceEntry> | undefined, b: ResourceEntry | PlainMessage<ResourceEntry> | undefined): boolean {
    return proto3.util.equals(ResourceEntry, a, b);
  }
}

