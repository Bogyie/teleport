//
// Teleport
// Copyright (C) 2024  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file accessgraph/v1alpha/entra.proto (package accessgraph.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * EntraSyncOperation is a request to sync Entra resources
 *
 * @generated from message accessgraph.v1alpha.EntraSyncOperation
 */
export class EntraSyncOperation extends Message<EntraSyncOperation> {
  constructor(data?: PartialMessage<EntraSyncOperation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.EntraSyncOperation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntraSyncOperation {
    return new EntraSyncOperation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntraSyncOperation {
    return new EntraSyncOperation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntraSyncOperation {
    return new EntraSyncOperation().fromJsonString(jsonString, options);
  }

  static equals(a: EntraSyncOperation | PlainMessage<EntraSyncOperation> | undefined, b: EntraSyncOperation | PlainMessage<EntraSyncOperation> | undefined): boolean {
    return proto3.util.equals(EntraSyncOperation, a, b);
  }
}

/**
 * EntraResourceList is a request that contains resources to be sync.
 *
 * @generated from message accessgraph.v1alpha.EntraResourceList
 */
export class EntraResourceList extends Message<EntraResourceList> {
  /**
   * resources is a list of entra resources to sync.
   *
   * @generated from field: repeated accessgraph.v1alpha.EntraResource resources = 1;
   */
  resources: EntraResource[] = [];

  constructor(data?: PartialMessage<EntraResourceList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.EntraResourceList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: EntraResource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntraResourceList {
    return new EntraResourceList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntraResourceList {
    return new EntraResourceList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntraResourceList {
    return new EntraResourceList().fromJsonString(jsonString, options);
  }

  static equals(a: EntraResourceList | PlainMessage<EntraResourceList> | undefined, b: EntraResourceList | PlainMessage<EntraResourceList> | undefined): boolean {
    return proto3.util.equals(EntraResourceList, a, b);
  }
}

/**
 * EntraResource represents a Entra resource.
 *
 * @generated from message accessgraph.v1alpha.EntraResource
 */
export class EntraResource extends Message<EntraResource> {
  /**
   * @generated from oneof accessgraph.v1alpha.EntraResource.resource
   */
  resource: {
    /**
     * application represents an Entra ID enterprise application.
     *
     * @generated from field: accessgraph.v1alpha.EntraApplication application = 1;
     */
    value: EntraApplication;
    case: "application";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<EntraResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.EntraResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "application", kind: "message", T: EntraApplication, oneof: "resource" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntraResource {
    return new EntraResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntraResource {
    return new EntraResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntraResource {
    return new EntraResource().fromJsonString(jsonString, options);
  }

  static equals(a: EntraResource | PlainMessage<EntraResource> | undefined, b: EntraResource | PlainMessage<EntraResource> | undefined): boolean {
    return proto3.util.equals(EntraResource, a, b);
  }
}

/**
 * EntraApplication represents an Entra ID enterprise application together with its service principal.
 *
 * @generated from message accessgraph.v1alpha.EntraApplication
 */
export class EntraApplication extends Message<EntraApplication> {
  /**
   * id is the unique Entra object ID.
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * app_id is the application ID.
   *
   * @generated from field: string app_id = 2;
   */
  appId = "";

  /**
   * display_name is a human-friendly application name.
   *
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * tenant_id is the ID of Entra tenant that this application is under.
   *
   * @generated from field: string tenant_id = 4;
   */
  tenantId = "";

  /**
   * signing_certificates is a list of SAML signing certificates for this app.
   *
   * @generated from field: repeated string signing_certificates = 5;
   */
  signingCertificates: string[] = [];

  /**
   * federated_sso_v2 contains payload from the /ApplicationSso/{servicePrincipalId}/FederatedSSOV2 endpoint.
   * It is exposed from the internal plugin cache as an opaque JSON blob.
   *
   * @generated from field: string federated_sso_v2 = 6;
   */
  federatedSsoV2 = "";

  constructor(data?: PartialMessage<EntraApplication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.EntraApplication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "signing_certificates", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "federated_sso_v2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntraApplication {
    return new EntraApplication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntraApplication {
    return new EntraApplication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntraApplication {
    return new EntraApplication().fromJsonString(jsonString, options);
  }

  static equals(a: EntraApplication | PlainMessage<EntraApplication> | undefined, b: EntraApplication | PlainMessage<EntraApplication> | undefined): boolean {
    return proto3.util.equals(EntraApplication, a, b);
  }
}

