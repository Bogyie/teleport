// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/accesslist/v1/accesslist_service.proto (package teleport.accesslist.v1, syntax proto3)
/* eslint-disable */

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { AccessRequestPromoteRequest, AccessRequestPromoteResponse, CountAccessListMembersRequest, CountAccessListMembersResponse, CreateAccessListReviewRequest, CreateAccessListReviewResponse, DeleteAccessListMemberRequest, DeleteAccessListRequest, DeleteAccessListReviewRequest, DeleteAllAccessListMembersForAccessListRequest, DeleteAllAccessListMembersRequest, DeleteAllAccessListsRequest, GetAccessListMemberRequest, GetAccessListRequest, GetAccessListsRequest, GetAccessListsResponse, GetAccessListsToReviewRequest, GetAccessListsToReviewResponse, GetSuggestedAccessListsRequest, GetSuggestedAccessListsResponse, ListAccessListMembersRequest, ListAccessListMembersResponse, ListAccessListReviewsRequest, ListAccessListReviewsResponse, ListAccessListsRequest, ListAccessListsResponse, ListAllAccessListMembersRequest, ListAllAccessListMembersResponse, ListAllAccessListReviewsRequest, ListAllAccessListReviewsResponse, UpdateAccessListMemberRequest, UpdateAccessListRequest, UpsertAccessListMemberRequest, UpsertAccessListRequest, UpsertAccessListWithMembersRequest, UpsertAccessListWithMembersResponse } from "./accesslist_service_pb";
import { AccessList, Member } from "./accesslist_pb";

/**
 * GetAccessLists returns a list of all access lists.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessLists
 */
export const getAccessLists = {
  localName: "getAccessLists",
  name: "GetAccessLists",
  kind: MethodKind.Unary,
  I: GetAccessListsRequest,
  O: GetAccessListsResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * ListAccessLists returns a paginated list of all access lists.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.ListAccessLists
 */
export const listAccessLists = {
  localName: "listAccessLists",
  name: "ListAccessLists",
  kind: MethodKind.Unary,
  I: ListAccessListsRequest,
  O: ListAccessListsResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * GetAccessList returns the specified access list resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessList
 */
export const getAccessList = {
  localName: "getAccessList",
  name: "GetAccessList",
  kind: MethodKind.Unary,
  I: GetAccessListRequest,
  O: AccessList,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * UpsertAccessList creates or updates an access list resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.UpsertAccessList
 */
export const upsertAccessList = {
  localName: "upsertAccessList",
  name: "UpsertAccessList",
  kind: MethodKind.Unary,
  I: UpsertAccessListRequest,
  O: AccessList,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * UpdateAccessList updates an access list resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.UpdateAccessList
 */
export const updateAccessList = {
  localName: "updateAccessList",
  name: "UpdateAccessList",
  kind: MethodKind.Unary,
  I: UpdateAccessListRequest,
  O: AccessList,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * DeleteAccessList hard deletes the specified access list resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAccessList
 */
export const deleteAccessList = {
  localName: "deleteAccessList",
  name: "DeleteAccessList",
  kind: MethodKind.Unary,
  I: DeleteAccessListRequest,
  O: Empty,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * DeleteAllAccessLists hard deletes all access lists.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAllAccessLists
 */
export const deleteAllAccessLists = {
  localName: "deleteAllAccessLists",
  name: "DeleteAllAccessLists",
  kind: MethodKind.Unary,
  I: DeleteAllAccessListsRequest,
  O: Empty,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * GetAccessListsToReview will return access lists that need to be reviewed by
 * the current user.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessListsToReview
 */
export const getAccessListsToReview = {
  localName: "getAccessListsToReview",
  name: "GetAccessListsToReview",
  kind: MethodKind.Unary,
  I: GetAccessListsToReviewRequest,
  O: GetAccessListsToReviewResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * CountAccessListMembers returns the count of access list members in an
 * access list.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.CountAccessListMembers
 */
export const countAccessListMembers = {
  localName: "countAccessListMembers",
  name: "CountAccessListMembers",
  kind: MethodKind.Unary,
  I: CountAccessListMembersRequest,
  O: CountAccessListMembersResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * ListAccessListMembers returns a paginated list of all access list members.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.ListAccessListMembers
 */
export const listAccessListMembers = {
  localName: "listAccessListMembers",
  name: "ListAccessListMembers",
  kind: MethodKind.Unary,
  I: ListAccessListMembersRequest,
  O: ListAccessListMembersResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * ListAllAccessListMembers returns a paginated list of all access list
 * members for all access lists.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.ListAllAccessListMembers
 */
export const listAllAccessListMembers = {
  localName: "listAllAccessListMembers",
  name: "ListAllAccessListMembers",
  kind: MethodKind.Unary,
  I: ListAllAccessListMembersRequest,
  O: ListAllAccessListMembersResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * GetAccessListMember returns the specified access list member resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessListMember
 */
export const getAccessListMember = {
  localName: "getAccessListMember",
  name: "GetAccessListMember",
  kind: MethodKind.Unary,
  I: GetAccessListMemberRequest,
  O: Member,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * UpsertAccessListMember creates or updates an access list member resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.UpsertAccessListMember
 */
export const upsertAccessListMember = {
  localName: "upsertAccessListMember",
  name: "UpsertAccessListMember",
  kind: MethodKind.Unary,
  I: UpsertAccessListMemberRequest,
  O: Member,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * UpdateAccessListMember conditionally updates an access list member resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.UpdateAccessListMember
 */
export const updateAccessListMember = {
  localName: "updateAccessListMember",
  name: "UpdateAccessListMember",
  kind: MethodKind.Unary,
  I: UpdateAccessListMemberRequest,
  O: Member,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * DeleteAccessListMember hard deletes the specified access list member
 * resource.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAccessListMember
 */
export const deleteAccessListMember = {
  localName: "deleteAccessListMember",
  name: "DeleteAccessListMember",
  kind: MethodKind.Unary,
  I: DeleteAccessListMemberRequest,
  O: Empty,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * DeleteAllAccessListMembers hard deletes all access list members for an
 * access list.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAllAccessListMembersForAccessList
 */
export const deleteAllAccessListMembersForAccessList = {
  localName: "deleteAllAccessListMembersForAccessList",
  name: "DeleteAllAccessListMembersForAccessList",
  kind: MethodKind.Unary,
  I: DeleteAllAccessListMembersForAccessListRequest,
  O: Empty,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * DeleteAllAccessListMembers hard deletes all access list members for an
 * access list.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAllAccessListMembers
 */
export const deleteAllAccessListMembers = {
  localName: "deleteAllAccessListMembers",
  name: "DeleteAllAccessListMembers",
  kind: MethodKind.Unary,
  I: DeleteAllAccessListMembersRequest,
  O: Empty,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * UpsertAccessListWithMembers creates or updates an access list with members.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.UpsertAccessListWithMembers
 */
export const upsertAccessListWithMembers = {
  localName: "upsertAccessListWithMembers",
  name: "UpsertAccessListWithMembers",
  kind: MethodKind.Unary,
  I: UpsertAccessListWithMembersRequest,
  O: UpsertAccessListWithMembersResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * ListAccessListReviews will list access list reviews for a particular access
 * list.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.ListAccessListReviews
 */
export const listAccessListReviews = {
  localName: "listAccessListReviews",
  name: "ListAccessListReviews",
  kind: MethodKind.Unary,
  I: ListAccessListReviewsRequest,
  O: ListAccessListReviewsResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * ListAllAccessListReviews will list access list reviews for all access
 * lists.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.ListAllAccessListReviews
 */
export const listAllAccessListReviews = {
  localName: "listAllAccessListReviews",
  name: "ListAllAccessListReviews",
  kind: MethodKind.Unary,
  I: ListAllAccessListReviewsRequest,
  O: ListAllAccessListReviewsResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * CreateAccessListReview will create a new review for an access list. It will
 * also modify the original access list and its members depending on the
 * details of the review.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.CreateAccessListReview
 */
export const createAccessListReview = {
  localName: "createAccessListReview",
  name: "CreateAccessListReview",
  kind: MethodKind.Unary,
  I: CreateAccessListReviewRequest,
  O: CreateAccessListReviewResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * DeleteAccessListReview will delete an access list review from the backend.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAccessListReview
 */
export const deleteAccessListReview = {
  localName: "deleteAccessListReview",
  name: "DeleteAccessListReview",
  kind: MethodKind.Unary,
  I: DeleteAccessListReviewRequest,
  O: Empty,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * AccessRequestPromote promotes an access request to an access list.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.AccessRequestPromote
 */
export const accessRequestPromote = {
  localName: "accessRequestPromote",
  name: "AccessRequestPromote",
  kind: MethodKind.Unary,
  I: AccessRequestPromoteRequest,
  O: AccessRequestPromoteResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;

/**
 * GetSuggestedAccessLists returns suggested access lists for an access
 * request.
 *
 * @generated from rpc teleport.accesslist.v1.AccessListService.GetSuggestedAccessLists
 */
export const getSuggestedAccessLists = {
  localName: "getSuggestedAccessLists",
  name: "GetSuggestedAccessLists",
  kind: MethodKind.Unary,
  I: GetSuggestedAccessListsRequest,
  O: GetSuggestedAccessListsResponse,
  service: {
    typeName: "teleport.accesslist.v1.AccessListService"
  }
} as const;
