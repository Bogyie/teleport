// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/autoupdate/v1/autoupdate_service.proto (package teleport.autoupdate.v1, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { AutoUpdateConfig, AutoUpdateVersion } from "./autoupdate_pb";

/**
 * Request for GetAutoUpdateConfig.
 *
 * @generated from message teleport.autoupdate.v1.GetAutoUpdateConfigRequest
 */
export class GetAutoUpdateConfigRequest extends Message<GetAutoUpdateConfigRequest> {
  constructor(data?: PartialMessage<GetAutoUpdateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.GetAutoUpdateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAutoUpdateConfigRequest {
    return new GetAutoUpdateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAutoUpdateConfigRequest {
    return new GetAutoUpdateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAutoUpdateConfigRequest {
    return new GetAutoUpdateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAutoUpdateConfigRequest | PlainMessage<GetAutoUpdateConfigRequest> | undefined, b: GetAutoUpdateConfigRequest | PlainMessage<GetAutoUpdateConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetAutoUpdateConfigRequest, a, b);
  }
}

/**
 * Request for CreateAutoUpdateConfig.
 *
 * @generated from message teleport.autoupdate.v1.CreateAutoUpdateConfigRequest
 */
export class CreateAutoUpdateConfigRequest extends Message<CreateAutoUpdateConfigRequest> {
  /**
   * @generated from field: teleport.autoupdate.v1.AutoUpdateConfig config = 1;
   */
  config?: AutoUpdateConfig;

  constructor(data?: PartialMessage<CreateAutoUpdateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.CreateAutoUpdateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "config", kind: "message", T: AutoUpdateConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAutoUpdateConfigRequest {
    return new CreateAutoUpdateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAutoUpdateConfigRequest {
    return new CreateAutoUpdateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAutoUpdateConfigRequest {
    return new CreateAutoUpdateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAutoUpdateConfigRequest | PlainMessage<CreateAutoUpdateConfigRequest> | undefined, b: CreateAutoUpdateConfigRequest | PlainMessage<CreateAutoUpdateConfigRequest> | undefined): boolean {
    return proto3.util.equals(CreateAutoUpdateConfigRequest, a, b);
  }
}

/**
 * Request for UpdateAutoUpdateConfig.
 *
 * @generated from message teleport.autoupdate.v1.UpdateAutoUpdateConfigRequest
 */
export class UpdateAutoUpdateConfigRequest extends Message<UpdateAutoUpdateConfigRequest> {
  /**
   * @generated from field: teleport.autoupdate.v1.AutoUpdateConfig config = 1;
   */
  config?: AutoUpdateConfig;

  constructor(data?: PartialMessage<UpdateAutoUpdateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.UpdateAutoUpdateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "config", kind: "message", T: AutoUpdateConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAutoUpdateConfigRequest {
    return new UpdateAutoUpdateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAutoUpdateConfigRequest {
    return new UpdateAutoUpdateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAutoUpdateConfigRequest {
    return new UpdateAutoUpdateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAutoUpdateConfigRequest | PlainMessage<UpdateAutoUpdateConfigRequest> | undefined, b: UpdateAutoUpdateConfigRequest | PlainMessage<UpdateAutoUpdateConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAutoUpdateConfigRequest, a, b);
  }
}

/**
 * Request for UpsertAutoUpdateConfig.
 *
 * @generated from message teleport.autoupdate.v1.UpsertAutoUpdateConfigRequest
 */
export class UpsertAutoUpdateConfigRequest extends Message<UpsertAutoUpdateConfigRequest> {
  /**
   * @generated from field: teleport.autoupdate.v1.AutoUpdateConfig config = 1;
   */
  config?: AutoUpdateConfig;

  constructor(data?: PartialMessage<UpsertAutoUpdateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.UpsertAutoUpdateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "config", kind: "message", T: AutoUpdateConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertAutoUpdateConfigRequest {
    return new UpsertAutoUpdateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertAutoUpdateConfigRequest {
    return new UpsertAutoUpdateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertAutoUpdateConfigRequest {
    return new UpsertAutoUpdateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertAutoUpdateConfigRequest | PlainMessage<UpsertAutoUpdateConfigRequest> | undefined, b: UpsertAutoUpdateConfigRequest | PlainMessage<UpsertAutoUpdateConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpsertAutoUpdateConfigRequest, a, b);
  }
}

/**
 * Request for DeleteAutoUpdateConfig.
 *
 * @generated from message teleport.autoupdate.v1.DeleteAutoUpdateConfigRequest
 */
export class DeleteAutoUpdateConfigRequest extends Message<DeleteAutoUpdateConfigRequest> {
  constructor(data?: PartialMessage<DeleteAutoUpdateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.DeleteAutoUpdateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAutoUpdateConfigRequest {
    return new DeleteAutoUpdateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAutoUpdateConfigRequest {
    return new DeleteAutoUpdateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAutoUpdateConfigRequest {
    return new DeleteAutoUpdateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAutoUpdateConfigRequest | PlainMessage<DeleteAutoUpdateConfigRequest> | undefined, b: DeleteAutoUpdateConfigRequest | PlainMessage<DeleteAutoUpdateConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAutoUpdateConfigRequest, a, b);
  }
}

/**
 * Request for GetAutoUpdateVersion.
 *
 * @generated from message teleport.autoupdate.v1.GetAutoUpdateVersionRequest
 */
export class GetAutoUpdateVersionRequest extends Message<GetAutoUpdateVersionRequest> {
  constructor(data?: PartialMessage<GetAutoUpdateVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.GetAutoUpdateVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAutoUpdateVersionRequest {
    return new GetAutoUpdateVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAutoUpdateVersionRequest {
    return new GetAutoUpdateVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAutoUpdateVersionRequest {
    return new GetAutoUpdateVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAutoUpdateVersionRequest | PlainMessage<GetAutoUpdateVersionRequest> | undefined, b: GetAutoUpdateVersionRequest | PlainMessage<GetAutoUpdateVersionRequest> | undefined): boolean {
    return proto3.util.equals(GetAutoUpdateVersionRequest, a, b);
  }
}

/**
 * Request for CreateAutoUpdateVersion.
 *
 * @generated from message teleport.autoupdate.v1.CreateAutoUpdateVersionRequest
 */
export class CreateAutoUpdateVersionRequest extends Message<CreateAutoUpdateVersionRequest> {
  /**
   * @generated from field: teleport.autoupdate.v1.AutoUpdateVersion version = 1;
   */
  version?: AutoUpdateVersion;

  constructor(data?: PartialMessage<CreateAutoUpdateVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.CreateAutoUpdateVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "message", T: AutoUpdateVersion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAutoUpdateVersionRequest {
    return new CreateAutoUpdateVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAutoUpdateVersionRequest {
    return new CreateAutoUpdateVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAutoUpdateVersionRequest {
    return new CreateAutoUpdateVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAutoUpdateVersionRequest | PlainMessage<CreateAutoUpdateVersionRequest> | undefined, b: CreateAutoUpdateVersionRequest | PlainMessage<CreateAutoUpdateVersionRequest> | undefined): boolean {
    return proto3.util.equals(CreateAutoUpdateVersionRequest, a, b);
  }
}

/**
 * Request for UpdateAutoUpdateConfig.
 *
 * @generated from message teleport.autoupdate.v1.UpdateAutoUpdateVersionRequest
 */
export class UpdateAutoUpdateVersionRequest extends Message<UpdateAutoUpdateVersionRequest> {
  /**
   * @generated from field: teleport.autoupdate.v1.AutoUpdateVersion version = 1;
   */
  version?: AutoUpdateVersion;

  constructor(data?: PartialMessage<UpdateAutoUpdateVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.UpdateAutoUpdateVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "message", T: AutoUpdateVersion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAutoUpdateVersionRequest {
    return new UpdateAutoUpdateVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAutoUpdateVersionRequest {
    return new UpdateAutoUpdateVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAutoUpdateVersionRequest {
    return new UpdateAutoUpdateVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAutoUpdateVersionRequest | PlainMessage<UpdateAutoUpdateVersionRequest> | undefined, b: UpdateAutoUpdateVersionRequest | PlainMessage<UpdateAutoUpdateVersionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAutoUpdateVersionRequest, a, b);
  }
}

/**
 * Request for UpsertAutoUpdateVersion.
 *
 * @generated from message teleport.autoupdate.v1.UpsertAutoUpdateVersionRequest
 */
export class UpsertAutoUpdateVersionRequest extends Message<UpsertAutoUpdateVersionRequest> {
  /**
   * @generated from field: teleport.autoupdate.v1.AutoUpdateVersion version = 1;
   */
  version?: AutoUpdateVersion;

  constructor(data?: PartialMessage<UpsertAutoUpdateVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.UpsertAutoUpdateVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "message", T: AutoUpdateVersion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertAutoUpdateVersionRequest {
    return new UpsertAutoUpdateVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertAutoUpdateVersionRequest {
    return new UpsertAutoUpdateVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertAutoUpdateVersionRequest {
    return new UpsertAutoUpdateVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertAutoUpdateVersionRequest | PlainMessage<UpsertAutoUpdateVersionRequest> | undefined, b: UpsertAutoUpdateVersionRequest | PlainMessage<UpsertAutoUpdateVersionRequest> | undefined): boolean {
    return proto3.util.equals(UpsertAutoUpdateVersionRequest, a, b);
  }
}

/**
 * Request for DeleteAutoUpdateVersion.
 *
 * @generated from message teleport.autoupdate.v1.DeleteAutoUpdateVersionRequest
 */
export class DeleteAutoUpdateVersionRequest extends Message<DeleteAutoUpdateVersionRequest> {
  constructor(data?: PartialMessage<DeleteAutoUpdateVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.autoupdate.v1.DeleteAutoUpdateVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAutoUpdateVersionRequest {
    return new DeleteAutoUpdateVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAutoUpdateVersionRequest {
    return new DeleteAutoUpdateVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAutoUpdateVersionRequest {
    return new DeleteAutoUpdateVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAutoUpdateVersionRequest | PlainMessage<DeleteAutoUpdateVersionRequest> | undefined, b: DeleteAutoUpdateVersionRequest | PlainMessage<DeleteAutoUpdateVersionRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAutoUpdateVersionRequest, a, b);
  }
}

