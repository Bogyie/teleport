// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/attestation/v1/attestation.proto (package teleport.attestation.v1, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * AttestationStatement is an attestation statement for a hardware private key.
 *
 * @generated from message teleport.attestation.v1.AttestationStatement
 */
export class AttestationStatement extends Message<AttestationStatement> {
  /**
   * @generated from oneof teleport.attestation.v1.AttestationStatement.attestation_statement
   */
  attestationStatement: {
    /**
     * yubikey_attestation_statement is an attestation statement for a specific YubiKey PIV slot.
     *
     * @generated from field: teleport.attestation.v1.YubiKeyAttestationStatement yubikey_attestation_statement = 1;
     */
    value: YubiKeyAttestationStatement;
    case: "yubikeyAttestationStatement";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AttestationStatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.attestation.v1.AttestationStatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "yubikey_attestation_statement", kind: "message", T: YubiKeyAttestationStatement, oneof: "attestation_statement" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttestationStatement {
    return new AttestationStatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttestationStatement {
    return new AttestationStatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttestationStatement {
    return new AttestationStatement().fromJsonString(jsonString, options);
  }

  static equals(a: AttestationStatement | PlainMessage<AttestationStatement> | undefined, b: AttestationStatement | PlainMessage<AttestationStatement> | undefined): boolean {
    return proto3.util.equals(AttestationStatement, a, b);
  }
}

/**
 * YubiKeyAttestationStatement is an attestation statement for a specific YubiKey PIV slot.
 *
 * @generated from message teleport.attestation.v1.YubiKeyAttestationStatement
 */
export class YubiKeyAttestationStatement extends Message<YubiKeyAttestationStatement> {
  /**
   * slot_cert is an attestation certificate generated from a YubiKey PIV
   * slot's public key and signed by the YubiKey's attestation certificate.
   *
   * @generated from field: bytes slot_cert = 1;
   */
  slotCert = new Uint8Array(0);

  /**
   * attestation_cert is the YubiKey's unique attestation certificate, signed by a Yubico CA.
   *
   * @generated from field: bytes attestation_cert = 2;
   */
  attestationCert = new Uint8Array(0);

  constructor(data?: PartialMessage<YubiKeyAttestationStatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.attestation.v1.YubiKeyAttestationStatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_cert", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "attestation_cert", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): YubiKeyAttestationStatement {
    return new YubiKeyAttestationStatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): YubiKeyAttestationStatement {
    return new YubiKeyAttestationStatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): YubiKeyAttestationStatement {
    return new YubiKeyAttestationStatement().fromJsonString(jsonString, options);
  }

  static equals(a: YubiKeyAttestationStatement | PlainMessage<YubiKeyAttestationStatement> | undefined, b: YubiKeyAttestationStatement | PlainMessage<YubiKeyAttestationStatement> | undefined): boolean {
    return proto3.util.equals(YubiKeyAttestationStatement, a, b);
  }
}

