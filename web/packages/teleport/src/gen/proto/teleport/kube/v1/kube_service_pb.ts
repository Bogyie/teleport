// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/kube/v1/kube_service.proto (package teleport.kube.v1, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { KubernetesResourceV1, SortBy } from "../../legacy/types/types_pb";

/**
 * ListKubernetesResourcesRequest defines a request to retrieve resources paginated. Only
 * one type of resource can be retrieved per request.
 *
 *
 * @generated from message teleport.kube.v1.ListKubernetesResourcesRequest
 */
export class ListKubernetesResourcesRequest extends Message<ListKubernetesResourcesRequest> {
  /**
   * ResourceType is the Kubernetes resource that is going to be retrieved.
   *
   * @generated from field: string resource_type = 1;
   */
  resourceType = "";

  /**
   * Limit is the maximum amount of resources to retrieve.
   *
   * @generated from field: int32 limit = 2;
   */
  limit = 0;

  /**
   * StartKey is used to start listing resources from a specific spot. It
   * should be set to the previous NextKey value if using pagination, or
   * left empty.
   *
   * @generated from field: string start_key = 3;
   */
  startKey = "";

  /**
   * Labels is a label-based matcher if non-empty.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string } = {};

  /**
   * PredicateExpression defines boolean conditions that will be matched against the resource.
   *
   * @generated from field: string predicate_expression = 5;
   */
  predicateExpression = "";

  /**
   * SearchKeywords is a list of search keywords to match against resource field values.
   *
   * @generated from field: repeated string search_keywords = 6;
   */
  searchKeywords: string[] = [];

  /**
   * SortBy describes which resource field and which direction to sort by.
   *
   * @generated from field: types.SortBy sort_by = 7;
   */
  sortBy?: SortBy;

  /**
   * NeedTotalCount indicates whether or not the caller also wants the total number of resources
   * after filtering.
   *
   * @generated from field: bool need_total_count = 8;
   */
  needTotalCount = false;

  /**
   * UseSearchAsRoles indicates that the response should include all resources
   * the caller is able to request access to using search_as_roles
   *
   * @generated from field: bool use_search_as_roles = 9;
   */
  useSearchAsRoles = false;

  /**
   * UsePreviewAsRoles indicates that the response should include all resources
   * the caller would be able to access with their preview_as_roles
   *
   * @generated from field: bool use_preview_as_roles = 11;
   */
  usePreviewAsRoles = false;

  /**
   * TeleportCluster is the Teleport Cluster name to route the request to.
   *
   * @generated from field: string teleport_cluster = 12;
   */
  teleportCluster = "";

  /**
   * Cluster is the Kubernetes Cluster to request the resources.
   *
   * @generated from field: string kubernetes_cluster = 13;
   */
  kubernetesCluster = "";

  /**
   * Namespace is the Kubernetes namespace where the resources must be located.
   * To search on every Kubernetes Namespace, do not define the value.
   *
   * @generated from field: string kubernetes_namespace = 14;
   */
  kubernetesNamespace = "";

  constructor(data?: PartialMessage<ListKubernetesResourcesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.kube.v1.ListKubernetesResourcesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resource_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "start_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "labels", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 5, name: "predicate_expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "search_keywords", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "sort_by", kind: "message", T: SortBy },
    { no: 8, name: "need_total_count", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "use_search_as_roles", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "use_preview_as_roles", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "teleport_cluster", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "kubernetes_cluster", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "kubernetes_namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKubernetesResourcesRequest {
    return new ListKubernetesResourcesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKubernetesResourcesRequest {
    return new ListKubernetesResourcesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKubernetesResourcesRequest {
    return new ListKubernetesResourcesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListKubernetesResourcesRequest | PlainMessage<ListKubernetesResourcesRequest> | undefined, b: ListKubernetesResourcesRequest | PlainMessage<ListKubernetesResourcesRequest> | undefined): boolean {
    return proto3.util.equals(ListKubernetesResourcesRequest, a, b);
  }
}

/**
 * ListKubernetesResourcesResponse is the response of ListKubernetesResources method.
 *
 * @generated from message teleport.kube.v1.ListKubernetesResourcesResponse
 */
export class ListKubernetesResourcesResponse extends Message<ListKubernetesResourcesResponse> {
  /**
   * Resources is a list of resource.
   *
   * @generated from field: repeated types.KubernetesResourceV1 resources = 1;
   */
  resources: KubernetesResourceV1[] = [];

  /**
   * NextKey is the next Key to use as StartKey in a ListResourcesRequest to
   * continue retrieving pages of resource. If NextKey is empty, there are no
   * more pages.
   *
   * @generated from field: string next_key = 2;
   */
  nextKey = "";

  /**
   * TotalCount is the total number of resources available after filter, if any.
   *
   * @generated from field: int32 total_count = 3;
   */
  totalCount = 0;

  constructor(data?: PartialMessage<ListKubernetesResourcesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "teleport.kube.v1.ListKubernetesResourcesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: KubernetesResourceV1, repeated: true },
    { no: 2, name: "next_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKubernetesResourcesResponse {
    return new ListKubernetesResourcesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKubernetesResourcesResponse {
    return new ListKubernetesResourcesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKubernetesResourcesResponse {
    return new ListKubernetesResourcesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListKubernetesResourcesResponse | PlainMessage<ListKubernetesResourcesResponse> | undefined, b: ListKubernetesResourcesResponse | PlainMessage<ListKubernetesResourcesResponse> | undefined): boolean {
    return proto3.util.equals(ListKubernetesResourcesResponse, a, b);
  }
}

