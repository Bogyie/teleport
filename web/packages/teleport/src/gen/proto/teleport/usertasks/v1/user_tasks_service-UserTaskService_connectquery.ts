// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file teleport/usertasks/v1/user_tasks_service.proto (package teleport.usertasks.v1, syntax proto3)
/* eslint-disable */

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { CreateUserTaskRequest, DeleteUserTaskRequest, GetUserTaskRequest, ListUserTasksRequest, ListUserTasksResponse, UpdateUserTaskRequest, UpsertUserTaskRequest } from "./user_tasks_service_pb";
import { UserTask } from "./user_tasks_pb";

/**
 * CreateUserTask creates a User Task.
 *
 * @generated from rpc teleport.usertasks.v1.UserTaskService.CreateUserTask
 */
export const createUserTask = {
  localName: "createUserTask",
  name: "CreateUserTask",
  kind: MethodKind.Unary,
  I: CreateUserTaskRequest,
  O: UserTask,
  service: {
    typeName: "teleport.usertasks.v1.UserTaskService"
  }
} as const;

/**
 * UpsertUserTask creates or updates User Task.
 *
 * @generated from rpc teleport.usertasks.v1.UserTaskService.UpsertUserTask
 */
export const upsertUserTask = {
  localName: "upsertUserTask",
  name: "UpsertUserTask",
  kind: MethodKind.Unary,
  I: UpsertUserTaskRequest,
  O: UserTask,
  service: {
    typeName: "teleport.usertasks.v1.UserTaskService"
  }
} as const;

/**
 * GetUserTask gets a UserTask by name.
 *
 * @generated from rpc teleport.usertasks.v1.UserTaskService.GetUserTask
 */
export const getUserTask = {
  localName: "getUserTask",
  name: "GetUserTask",
  kind: MethodKind.Unary,
  I: GetUserTaskRequest,
  O: UserTask,
  service: {
    typeName: "teleport.usertasks.v1.UserTaskService"
  }
} as const;

/**
 * ListUserTasks returns a list of UserTasks. It supports pagination and filters.
 *
 * @generated from rpc teleport.usertasks.v1.UserTaskService.ListUserTasks
 */
export const listUserTasks = {
  localName: "listUserTasks",
  name: "ListUserTasks",
  kind: MethodKind.Unary,
  I: ListUserTasksRequest,
  O: ListUserTasksResponse,
  service: {
    typeName: "teleport.usertasks.v1.UserTaskService"
  }
} as const;

/**
 * UpdateUserTask updates an existing User Task.
 *
 * @generated from rpc teleport.usertasks.v1.UserTaskService.UpdateUserTask
 */
export const updateUserTask = {
  localName: "updateUserTask",
  name: "UpdateUserTask",
  kind: MethodKind.Unary,
  I: UpdateUserTaskRequest,
  O: UserTask,
  service: {
    typeName: "teleport.usertasks.v1.UserTaskService"
  }
} as const;

/**
 * DeleteUserTask deletes a User Task.
 *
 * @generated from rpc teleport.usertasks.v1.UserTaskService.DeleteUserTask
 */
export const deleteUserTask = {
  localName: "deleteUserTask",
  name: "DeleteUserTask",
  kind: MethodKind.Unary,
  I: DeleteUserTaskRequest,
  O: Empty,
  service: {
    typeName: "teleport.usertasks.v1.UserTaskService"
  }
} as const;
