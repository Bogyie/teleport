//
// Teleport
// Copyright (C) 2024  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file accessgraph/v1alpha/aws.proto (package accessgraph.v1alpha, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";

/**
 * UsersPermissionsBoundaryType is the type of the permissions boundary.
 *
 * @generated from enum accessgraph.v1alpha.UsersPermissionsBoundaryType
 */
export enum UsersPermissionsBoundaryType {
  /**
   * USERS_PERMISSIONS_BOUNDARY_TYPE_UNSPECIFIED is an unspecified permissions
   * boundary type.
   *
   * @generated from enum value: USERS_PERMISSIONS_BOUNDARY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * USERS_PERMISSIONS_BOUNDARY_TYPE_PERMISSIONS_BOUNDARY_POLICY is a
   * permissions boundary policy.
   *
   * @generated from enum value: USERS_PERMISSIONS_BOUNDARY_TYPE_PERMISSIONS_BOUNDARY_POLICY = 1;
   */
  PERMISSIONS_BOUNDARY_POLICY = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(UsersPermissionsBoundaryType)
proto3.util.setEnumType(UsersPermissionsBoundaryType, "accessgraph.v1alpha.UsersPermissionsBoundaryType", [
  { no: 0, name: "USERS_PERMISSIONS_BOUNDARY_TYPE_UNSPECIFIED" },
  { no: 1, name: "USERS_PERMISSIONS_BOUNDARY_TYPE_PERMISSIONS_BOUNDARY_POLICY" },
]);

/**
 * RolePermissionsBoundaryType is the type of the permissions boundary.
 *
 * @generated from enum accessgraph.v1alpha.RolePermissionsBoundaryType
 */
export enum RolePermissionsBoundaryType {
  /**
   * ROLE_PERMISSIONS_BOUNDARY_TYPE_UNSPECIFIED is an unspecified permissions
   * boundary type.
   *
   * @generated from enum value: ROLE_PERMISSIONS_BOUNDARY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ROLE_PERMISSIONS_BOUNDARY_TYPE_PERMISSIONS_BOUNDARY_POLICY is a
   * permissions boundary policy.
   *
   * @generated from enum value: ROLE_PERMISSIONS_BOUNDARY_TYPE_PERMISSIONS_BOUNDARY_POLICY = 1;
   */
  PERMISSIONS_BOUNDARY_POLICY = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(RolePermissionsBoundaryType)
proto3.util.setEnumType(RolePermissionsBoundaryType, "accessgraph.v1alpha.RolePermissionsBoundaryType", [
  { no: 0, name: "ROLE_PERMISSIONS_BOUNDARY_TYPE_UNSPECIFIED" },
  { no: 1, name: "ROLE_PERMISSIONS_BOUNDARY_TYPE_PERMISSIONS_BOUNDARY_POLICY" },
]);

/**
 * AWSResourceList is a list of AWS resources supported by the access graph.
 *
 * @generated from message accessgraph.v1alpha.AWSResourceList
 */
export class AWSResourceList extends Message<AWSResourceList> {
  /**
   * @generated from field: repeated accessgraph.v1alpha.AWSResource resources = 1;
   */
  resources: AWSResource[] = [];

  constructor(data?: PartialMessage<AWSResourceList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSResourceList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: AWSResource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSResourceList {
    return new AWSResourceList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSResourceList {
    return new AWSResourceList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSResourceList {
    return new AWSResourceList().fromJsonString(jsonString, options);
  }

  static equals(a: AWSResourceList | PlainMessage<AWSResourceList> | undefined, b: AWSResourceList | PlainMessage<AWSResourceList> | undefined): boolean {
    return proto3.util.equals(AWSResourceList, a, b);
  }
}

/**
 * AWSResource is a list of AWS resources supported by the access graph.
 *
 * @generated from message accessgraph.v1alpha.AWSResource
 */
export class AWSResource extends Message<AWSResource> {
  /**
   * @generated from oneof accessgraph.v1alpha.AWSResource.resource
   */
  resource: {
    /**
     * user is an AWS user.
     *
     * @generated from field: accessgraph.v1alpha.AWSUserV1 user = 1;
     */
    value: AWSUserV1;
    case: "user";
  } | {
    /**
     * group is an AWS group.
     *
     * @generated from field: accessgraph.v1alpha.AWSGroupV1 group = 2;
     */
    value: AWSGroupV1;
    case: "group";
  } | {
    /**
     * user_inline_policy is a policy that is inlined to an AWS user.
     *
     * @generated from field: accessgraph.v1alpha.AWSUserInlinePolicyV1 user_inline_policy = 3;
     */
    value: AWSUserInlinePolicyV1;
    case: "userInlinePolicy";
  } | {
    /**
     * user_groups is a list of AWS groups that an AWS user belongs to.
     *
     * @generated from field: accessgraph.v1alpha.AWSUserGroupsV1 user_groups = 4;
     */
    value: AWSUserGroupsV1;
    case: "userGroups";
  } | {
    /**
     * instance is an AWS instance.
     *
     * @generated from field: accessgraph.v1alpha.AWSInstanceV1 instance = 5;
     */
    value: AWSInstanceV1;
    case: "instance";
  } | {
    /**
     * policy is an AWS policy.
     *
     * @generated from field: accessgraph.v1alpha.AWSPolicyV1 policy = 6;
     */
    value: AWSPolicyV1;
    case: "policy";
  } | {
    /**
     * user_attached_policies is a list of AWS policies that are attached to an
     * AWS user.
     *
     * @generated from field: accessgraph.v1alpha.AWSUserAttachedPolicies user_attached_policies = 7;
     */
    value: AWSUserAttachedPolicies;
    case: "userAttachedPolicies";
  } | {
    /**
     * group_attached_policies is a list of AWS policies that are attached to an
     * AWS group.
     *
     * @generated from field: accessgraph.v1alpha.AWSGroupAttachedPolicies group_attached_policies = 8;
     */
    value: AWSGroupAttachedPolicies;
    case: "groupAttachedPolicies";
  } | {
    /**
     * group_inline_policy is a policy that is inlined to an AWS group.
     *
     * @generated from field: accessgraph.v1alpha.AWSGroupInlinePolicyV1 group_inline_policy = 9;
     */
    value: AWSGroupInlinePolicyV1;
    case: "groupInlinePolicy";
  } | {
    /**
     * s3_bucket is an AWS S3 bucket.
     *
     * @generated from field: accessgraph.v1alpha.AWSS3BucketV1 s3_bucket = 10;
     */
    value: AWSS3BucketV1;
    case: "s3Bucket";
  } | {
    /**
     * role is an AWS role.
     *
     * @generated from field: accessgraph.v1alpha.AWSRoleV1 role = 11;
     */
    value: AWSRoleV1;
    case: "role";
  } | {
    /**
     * role_inline_policy is a policy that is inlined to an AWS role.
     *
     * @generated from field: accessgraph.v1alpha.AWSRoleInlinePolicyV1 role_inline_policy = 12;
     */
    value: AWSRoleInlinePolicyV1;
    case: "roleInlinePolicy";
  } | {
    /**
     * role_attached_policies is a list of AWS policies that are attached to an
     * AWS role.
     *
     * @generated from field: accessgraph.v1alpha.AWSRoleAttachedPolicies role_attached_policies = 13;
     */
    value: AWSRoleAttachedPolicies;
    case: "roleAttachedPolicies";
  } | {
    /**
     * instance_profile is an AWS instance profile.
     *
     * @generated from field: accessgraph.v1alpha.AWSInstanceProfileV1 instance_profile = 14;
     */
    value: AWSInstanceProfileV1;
    case: "instanceProfile";
  } | {
    /**
     * eks_cluster is an AWS EKS cluster.
     *
     * @generated from field: accessgraph.v1alpha.AWSEKSClusterV1 eks_cluster = 15;
     */
    value: AWSEKSClusterV1;
    case: "eksCluster";
  } | {
    /**
     * eks_cluster_access_entry is an access entry for a cluster.
     *
     * @generated from field: accessgraph.v1alpha.AWSEKSClusterAccessEntryV1 eks_cluster_access_entry = 16;
     */
    value: AWSEKSClusterAccessEntryV1;
    case: "eksClusterAccessEntry";
  } | {
    /**
     * eks_cluster_associated_policy is an associated policy for a single cluster.
     *
     * @generated from field: accessgraph.v1alpha.AWSEKSAssociatedAccessPolicyV1 eks_cluster_associated_policy = 17;
     */
    value: AWSEKSAssociatedAccessPolicyV1;
    case: "eksClusterAssociatedPolicy";
  } | {
    /**
     * rds is an AWS RDS database.
     *
     * @generated from field: accessgraph.v1alpha.AWSRDSDatabaseV1 rds = 18;
     */
    value: AWSRDSDatabaseV1;
    case: "rds";
  } | {
    /**
     * saml_provider is an AWS IAM SAML Identity Provider
     *
     * @generated from field: accessgraph.v1alpha.AWSSAMLProviderV1 saml_provider = 19;
     */
    value: AWSSAMLProviderV1;
    case: "samlProvider";
  } | {
    /**
     * oidc_provider is an AWS IAM OpenID Connect Identity Provider
     *
     * @generated from field: accessgraph.v1alpha.AWSOIDCProviderV1 oidc_provider = 20;
     */
    value: AWSOIDCProviderV1;
    case: "oidcProvider";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AWSResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: AWSUserV1, oneof: "resource" },
    { no: 2, name: "group", kind: "message", T: AWSGroupV1, oneof: "resource" },
    { no: 3, name: "user_inline_policy", kind: "message", T: AWSUserInlinePolicyV1, oneof: "resource" },
    { no: 4, name: "user_groups", kind: "message", T: AWSUserGroupsV1, oneof: "resource" },
    { no: 5, name: "instance", kind: "message", T: AWSInstanceV1, oneof: "resource" },
    { no: 6, name: "policy", kind: "message", T: AWSPolicyV1, oneof: "resource" },
    { no: 7, name: "user_attached_policies", kind: "message", T: AWSUserAttachedPolicies, oneof: "resource" },
    { no: 8, name: "group_attached_policies", kind: "message", T: AWSGroupAttachedPolicies, oneof: "resource" },
    { no: 9, name: "group_inline_policy", kind: "message", T: AWSGroupInlinePolicyV1, oneof: "resource" },
    { no: 10, name: "s3_bucket", kind: "message", T: AWSS3BucketV1, oneof: "resource" },
    { no: 11, name: "role", kind: "message", T: AWSRoleV1, oneof: "resource" },
    { no: 12, name: "role_inline_policy", kind: "message", T: AWSRoleInlinePolicyV1, oneof: "resource" },
    { no: 13, name: "role_attached_policies", kind: "message", T: AWSRoleAttachedPolicies, oneof: "resource" },
    { no: 14, name: "instance_profile", kind: "message", T: AWSInstanceProfileV1, oneof: "resource" },
    { no: 15, name: "eks_cluster", kind: "message", T: AWSEKSClusterV1, oneof: "resource" },
    { no: 16, name: "eks_cluster_access_entry", kind: "message", T: AWSEKSClusterAccessEntryV1, oneof: "resource" },
    { no: 17, name: "eks_cluster_associated_policy", kind: "message", T: AWSEKSAssociatedAccessPolicyV1, oneof: "resource" },
    { no: 18, name: "rds", kind: "message", T: AWSRDSDatabaseV1, oneof: "resource" },
    { no: 19, name: "saml_provider", kind: "message", T: AWSSAMLProviderV1, oneof: "resource" },
    { no: 20, name: "oidc_provider", kind: "message", T: AWSOIDCProviderV1, oneof: "resource" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSResource {
    return new AWSResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSResource {
    return new AWSResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSResource {
    return new AWSResource().fromJsonString(jsonString, options);
  }

  static equals(a: AWSResource | PlainMessage<AWSResource> | undefined, b: AWSResource | PlainMessage<AWSResource> | undefined): boolean {
    return proto3.util.equals(AWSResource, a, b);
  }
}

/**
 * AWSUserInlinePolicyV1 is a policy that is inlined to an AWS user.
 *
 * @generated from message accessgraph.v1alpha.AWSUserInlinePolicyV1
 */
export class AWSUserInlinePolicyV1 extends Message<AWSUserInlinePolicyV1> {
  /**
   * policy_name is the name of the policy.
   *
   * @generated from field: string policy_name = 1;
   */
  policyName = "";

  /**
   * policy_document is the JSON document that defines the policy.
   *
   * @generated from field: bytes policy_document = 3;
   */
  policyDocument = new Uint8Array(0);

  /**
   * account_id is the ID of the AWS account that the user belongs to.
   *
   * @generated from field: string account_id = 4;
   */
  accountId = "";

  /**
   * user is the user who the policy is attached to.
   *
   * @generated from field: accessgraph.v1alpha.AWSUserV1 user = 5;
   */
  user?: AWSUserV1;

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 6;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSUserInlinePolicyV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSUserInlinePolicyV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "policy_document", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user", kind: "message", T: AWSUserV1 },
    { no: 6, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSUserInlinePolicyV1 {
    return new AWSUserInlinePolicyV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSUserInlinePolicyV1 {
    return new AWSUserInlinePolicyV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSUserInlinePolicyV1 {
    return new AWSUserInlinePolicyV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSUserInlinePolicyV1 | PlainMessage<AWSUserInlinePolicyV1> | undefined, b: AWSUserInlinePolicyV1 | PlainMessage<AWSUserInlinePolicyV1> | undefined): boolean {
    return proto3.util.equals(AWSUserInlinePolicyV1, a, b);
  }
}

/**
 * AWSPolicyV1 is an AWS policy.
 *
 * @generated from message accessgraph.v1alpha.AWSPolicyV1
 */
export class AWSPolicyV1 extends Message<AWSPolicyV1> {
  /**
   * arn is the ARN of the AWS policy.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * created_at is the time when the AWS policy was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * default_version_id is the ID of the default version of the policy.
   *
   * @generated from field: string default_version_id = 3;
   */
  defaultVersionId = "";

  /**
   * description is the description of the policy.
   *
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * is_attachable indicates whether the policy can be attached to an AWS
   * resource.
   *
   * @generated from field: bool is_attachable = 5;
   */
  isAttachable = false;

  /**
   * path is the path of the policy.
   *
   * @generated from field: string path = 6;
   */
  path = "";

  /**
   * policy_id is the ID of the policy.
   *
   * @generated from field: string policy_id = 7;
   */
  policyId = "";

  /**
   * tags is the list of tags that are attached to the policy.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 8;
   */
  tags: AWSTag[] = [];

  /**
   * update_at is the time when the policy was last updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;

  /**
   * account_id is the ID of the AWS account that the policy belongs to.
   *
   * @generated from field: string account_id = 10;
   */
  accountId = "";

  /**
   * policty_name is the name of the policy.
   *
   * @generated from field: string policy_name = 11;
   */
  policyName = "";

  /**
   * policy_document is the JSON document that defines the policy.
   *
   * @generated from field: bytes policy_document = 12;
   */
  policyDocument = new Uint8Array(0);

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 13;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSPolicyV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSPolicyV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "default_version_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "is_attachable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "policy_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 9, name: "updated_at", kind: "message", T: Timestamp },
    { no: 10, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "policy_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "policy_document", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 13, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSPolicyV1 {
    return new AWSPolicyV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSPolicyV1 {
    return new AWSPolicyV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSPolicyV1 {
    return new AWSPolicyV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSPolicyV1 | PlainMessage<AWSPolicyV1> | undefined, b: AWSPolicyV1 | PlainMessage<AWSPolicyV1> | undefined): boolean {
    return proto3.util.equals(AWSPolicyV1, a, b);
  }
}

/**
 * AWSGroupV1 is a group of AWS users.
 *
 * @generated from message accessgraph.v1alpha.AWSGroupV1
 */
export class AWSGroupV1 extends Message<AWSGroupV1> {
  /**
   * arn is the ARN of the AWS group.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * created_at is the time when the AWS group was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * group_id is the ID of the AWS group.
   *
   * @generated from field: string group_id = 3;
   */
  groupId = "";

  /**
   * name is the name of the AWS group.
   *
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * path is the path of the AWS group.
   *
   * @generated from field: string path = 5;
   */
  path = "";

  /**
   * account_id is the ID of the AWS account that the group belongs to.
   *
   * @generated from field: string account_id = 6;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 7;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSGroupV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSGroupV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSGroupV1 {
    return new AWSGroupV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSGroupV1 {
    return new AWSGroupV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSGroupV1 {
    return new AWSGroupV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSGroupV1 | PlainMessage<AWSGroupV1> | undefined, b: AWSGroupV1 | PlainMessage<AWSGroupV1> | undefined): boolean {
    return proto3.util.equals(AWSGroupV1, a, b);
  }
}

/**
 * AWSUserGroupsV1 is a list of AWS groups that an AWS user belongs to.
 *
 * @generated from message accessgraph.v1alpha.AWSUserGroupsV1
 */
export class AWSUserGroupsV1 extends Message<AWSUserGroupsV1> {
  /**
   * user is the AWS user.
   *
   * @generated from field: accessgraph.v1alpha.AWSUserV1 user = 1;
   */
  user?: AWSUserV1;

  /**
   * groups is the list of AWS groups that the user belongs to.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSGroupV1 groups = 2;
   */
  groups: AWSGroupV1[] = [];

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 3;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSUserGroupsV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSUserGroupsV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: AWSUserV1 },
    { no: 2, name: "groups", kind: "message", T: AWSGroupV1, repeated: true },
    { no: 3, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSUserGroupsV1 {
    return new AWSUserGroupsV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSUserGroupsV1 {
    return new AWSUserGroupsV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSUserGroupsV1 {
    return new AWSUserGroupsV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSUserGroupsV1 | PlainMessage<AWSUserGroupsV1> | undefined, b: AWSUserGroupsV1 | PlainMessage<AWSUserGroupsV1> | undefined): boolean {
    return proto3.util.equals(AWSUserGroupsV1, a, b);
  }
}

/**
 * AWSUserV1 is an AWS user.
 *
 * @generated from message accessgraph.v1alpha.AWSUserV1
 */
export class AWSUserV1 extends Message<AWSUserV1> {
  /**
   * arn is the ARN of the AWS user.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * created_at is the time when the AWS user was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * path is the path of the AWS user.
   *
   * @generated from field: string path = 3;
   */
  path = "";

  /**
   * user_id is the ID of the AWS user.
   *
   * @generated from field: string user_id = 4;
   */
  userId = "";

  /**
   * user_name is the name of the AWS user.
   *
   * @generated from field: string user_name = 5;
   */
  userName = "";

  /**
   * password_last_used is the time when the user last used their password.
   *
   * @generated from field: google.protobuf.Timestamp password_last_used = 6;
   */
  passwordLastUsed?: Timestamp;

  /**
   * permissions_boundary is the permissions boundary of the user.
   *
   * @generated from field: accessgraph.v1alpha.UsersPermissionsBoundaryV1 permissions_boundary = 7;
   */
  permissionsBoundary?: UsersPermissionsBoundaryV1;

  /**
   * tags is the list of tags that are attached to the user.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 8;
   */
  tags: AWSTag[] = [];

  /**
   * account_id is the ID of the AWS account that the user belongs to.
   *
   * @generated from field: string account_id = 9;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the user was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 10;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSUserV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSUserV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "password_last_used", kind: "message", T: Timestamp },
    { no: 7, name: "permissions_boundary", kind: "message", T: UsersPermissionsBoundaryV1 },
    { no: 8, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 9, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSUserV1 {
    return new AWSUserV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSUserV1 {
    return new AWSUserV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSUserV1 {
    return new AWSUserV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSUserV1 | PlainMessage<AWSUserV1> | undefined, b: AWSUserV1 | PlainMessage<AWSUserV1> | undefined): boolean {
    return proto3.util.equals(AWSUserV1, a, b);
  }
}

/**
 * AWSTag is a tag that is attached to an AWS resource.
 *
 * @generated from message accessgraph.v1alpha.AWSTag
 */
export class AWSTag extends Message<AWSTag> {
  /**
   * key is the key of the tag.
   *
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * value is the value of the tag.
   *
   * @generated from field: google.protobuf.StringValue value = 2;
   */
  value?: string;

  constructor(data?: PartialMessage<AWSTag>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSTag";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSTag {
    return new AWSTag().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSTag {
    return new AWSTag().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSTag {
    return new AWSTag().fromJsonString(jsonString, options);
  }

  static equals(a: AWSTag | PlainMessage<AWSTag> | undefined, b: AWSTag | PlainMessage<AWSTag> | undefined): boolean {
    return proto3.util.equals(AWSTag, a, b);
  }
}

/**
 * UsersPermissionsBoundaryV1 is the permissions boundary of a user.
 *
 * @generated from message accessgraph.v1alpha.UsersPermissionsBoundaryV1
 */
export class UsersPermissionsBoundaryV1 extends Message<UsersPermissionsBoundaryV1> {
  /**
   * permissions_boundary_arn is the ARN of the permissions boundary.
   *
   * @generated from field: string permissions_boundary_arn = 1;
   */
  permissionsBoundaryArn = "";

  /**
   * permissions_boundary_type is the ARN of the permissions boundary.
   *
   * @generated from field: accessgraph.v1alpha.UsersPermissionsBoundaryType permissions_boundary_type = 2;
   */
  permissionsBoundaryType = UsersPermissionsBoundaryType.UNSPECIFIED;

  constructor(data?: PartialMessage<UsersPermissionsBoundaryV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.UsersPermissionsBoundaryV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions_boundary_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permissions_boundary_type", kind: "enum", T: proto3.getEnumType(UsersPermissionsBoundaryType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsersPermissionsBoundaryV1 {
    return new UsersPermissionsBoundaryV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsersPermissionsBoundaryV1 {
    return new UsersPermissionsBoundaryV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsersPermissionsBoundaryV1 {
    return new UsersPermissionsBoundaryV1().fromJsonString(jsonString, options);
  }

  static equals(a: UsersPermissionsBoundaryV1 | PlainMessage<UsersPermissionsBoundaryV1> | undefined, b: UsersPermissionsBoundaryV1 | PlainMessage<UsersPermissionsBoundaryV1> | undefined): boolean {
    return proto3.util.equals(UsersPermissionsBoundaryV1, a, b);
  }
}

/**
 * AWSInstanceV1 is an AWS instance.
 *
 * @generated from message accessgraph.v1alpha.AWSInstanceV1
 */
export class AWSInstanceV1 extends Message<AWSInstanceV1> {
  /**
   * instance_id is the ID of the AWS instance.
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId = "";

  /**
   * launch_time is the time when the instance was launched.
   *
   * @generated from field: google.protobuf.Timestamp launch_time = 2;
   */
  launchTime?: Timestamp;

  /**
   * region is the region of the AWS instance.
   *
   * @generated from field: string region = 3;
   */
  region = "";

  /**
   * account_id is the ID of the AWS account that the instance belongs to.
   *
   * @generated from field: string account_id = 4;
   */
  accountId = "";

  /**
   * tags is the list of tags that are attached to the instance.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 5;
   */
  tags: AWSTag[] = [];

  /**
   * public_dns_name is the public DNS name of the instance.
   *
   * @generated from field: string public_dns_name = 6;
   */
  publicDnsName = "";

  /**
   * iam_instance_profile_arn is the ARN of the IAM instance profile that is
   * associated with the instance.
   *
   * @generated from field: google.protobuf.StringValue iam_instance_profile_arn = 7;
   */
  iamInstanceProfileArn?: string;

  /**
   * launch_key_name is the name of the key pair that is used to launch the
   * instance.
   *
   * @generated from field: google.protobuf.StringValue launch_key_name = 8;
   */
  launchKeyName?: string;

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 9;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSInstanceV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSInstanceV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "launch_time", kind: "message", T: Timestamp },
    { no: 3, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 6, name: "public_dns_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "iam_instance_profile_arn", kind: "message", T: StringValue },
    { no: 8, name: "launch_key_name", kind: "message", T: StringValue },
    { no: 9, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSInstanceV1 {
    return new AWSInstanceV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSInstanceV1 {
    return new AWSInstanceV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSInstanceV1 {
    return new AWSInstanceV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSInstanceV1 | PlainMessage<AWSInstanceV1> | undefined, b: AWSInstanceV1 | PlainMessage<AWSInstanceV1> | undefined): boolean {
    return proto3.util.equals(AWSInstanceV1, a, b);
  }
}

/**
 * AWSUserAttachedPolicies is a list of AWS policies that are attached to an
 * AWS user.
 *
 * @generated from message accessgraph.v1alpha.AWSUserAttachedPolicies
 */
export class AWSUserAttachedPolicies extends Message<AWSUserAttachedPolicies> {
  /**
   * user is the AWS user.
   *
   * @generated from field: accessgraph.v1alpha.AWSUserV1 user = 1;
   */
  user?: AWSUserV1;

  /**
   * policies is the list of AWS policies that are attached to the user.
   *
   * @generated from field: repeated accessgraph.v1alpha.AttachedPolicyV1 policies = 2;
   */
  policies: AttachedPolicyV1[] = [];

  /**
   * account_id is the ID of the AWS account that the user belongs to.
   *
   * @generated from field: string account_id = 3;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 9;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSUserAttachedPolicies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSUserAttachedPolicies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: AWSUserV1 },
    { no: 2, name: "policies", kind: "message", T: AttachedPolicyV1, repeated: true },
    { no: 3, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSUserAttachedPolicies {
    return new AWSUserAttachedPolicies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSUserAttachedPolicies {
    return new AWSUserAttachedPolicies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSUserAttachedPolicies {
    return new AWSUserAttachedPolicies().fromJsonString(jsonString, options);
  }

  static equals(a: AWSUserAttachedPolicies | PlainMessage<AWSUserAttachedPolicies> | undefined, b: AWSUserAttachedPolicies | PlainMessage<AWSUserAttachedPolicies> | undefined): boolean {
    return proto3.util.equals(AWSUserAttachedPolicies, a, b);
  }
}

/**
 * AttachedPolicyV1 is a AWS policy identifier.
 *
 * @generated from message accessgraph.v1alpha.AttachedPolicyV1
 */
export class AttachedPolicyV1 extends Message<AttachedPolicyV1> {
  /**
   * policy_name is the name of the policy.
   *
   * @generated from field: string policy_name = 1;
   */
  policyName = "";

  /**
   * arn is the ARN of the policy.
   *
   * @generated from field: string arn = 2;
   */
  arn = "";

  constructor(data?: PartialMessage<AttachedPolicyV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AttachedPolicyV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttachedPolicyV1 {
    return new AttachedPolicyV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttachedPolicyV1 {
    return new AttachedPolicyV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttachedPolicyV1 {
    return new AttachedPolicyV1().fromJsonString(jsonString, options);
  }

  static equals(a: AttachedPolicyV1 | PlainMessage<AttachedPolicyV1> | undefined, b: AttachedPolicyV1 | PlainMessage<AttachedPolicyV1> | undefined): boolean {
    return proto3.util.equals(AttachedPolicyV1, a, b);
  }
}

/**
 * AWSGroupAttachedPolicies is a list of AWS policies that are attached to an
 * AWS group.
 *
 * @generated from message accessgraph.v1alpha.AWSGroupAttachedPolicies
 */
export class AWSGroupAttachedPolicies extends Message<AWSGroupAttachedPolicies> {
  /**
   * group is the AWS group.
   *
   * @generated from field: accessgraph.v1alpha.AWSGroupV1 group = 1;
   */
  group?: AWSGroupV1;

  /**
   * policies is the list of AWS policies that are attached to the group.
   *
   * @generated from field: repeated accessgraph.v1alpha.AttachedPolicyV1 policies = 2;
   */
  policies: AttachedPolicyV1[] = [];

  /**
   * account_id is the ID of the AWS account that the group belongs to.
   *
   * @generated from field: string account_id = 3;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 4;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSGroupAttachedPolicies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSGroupAttachedPolicies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group", kind: "message", T: AWSGroupV1 },
    { no: 2, name: "policies", kind: "message", T: AttachedPolicyV1, repeated: true },
    { no: 3, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSGroupAttachedPolicies {
    return new AWSGroupAttachedPolicies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSGroupAttachedPolicies {
    return new AWSGroupAttachedPolicies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSGroupAttachedPolicies {
    return new AWSGroupAttachedPolicies().fromJsonString(jsonString, options);
  }

  static equals(a: AWSGroupAttachedPolicies | PlainMessage<AWSGroupAttachedPolicies> | undefined, b: AWSGroupAttachedPolicies | PlainMessage<AWSGroupAttachedPolicies> | undefined): boolean {
    return proto3.util.equals(AWSGroupAttachedPolicies, a, b);
  }
}

/**
 * AWSGroupInlinePolicyV1 is a policy that is inlined to an AWS Group.
 *
 * @generated from message accessgraph.v1alpha.AWSGroupInlinePolicyV1
 */
export class AWSGroupInlinePolicyV1 extends Message<AWSGroupInlinePolicyV1> {
  /**
   * policy_name is the name of the policy.
   *
   * @generated from field: string policy_name = 1;
   */
  policyName = "";

  /**
   * group is the AWS group.
   *
   * @generated from field: accessgraph.v1alpha.AWSGroupV1 group = 2;
   */
  group?: AWSGroupV1;

  /**
   * policy_document is the JSON document that defines the policy.
   *
   * @generated from field: bytes policy_document = 3;
   */
  policyDocument = new Uint8Array(0);

  /**
   * account_id is the ID of the AWS account that the group belongs to.
   *
   * @generated from field: string account_id = 4;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 5;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSGroupInlinePolicyV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSGroupInlinePolicyV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group", kind: "message", T: AWSGroupV1 },
    { no: 3, name: "policy_document", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSGroupInlinePolicyV1 {
    return new AWSGroupInlinePolicyV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSGroupInlinePolicyV1 {
    return new AWSGroupInlinePolicyV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSGroupInlinePolicyV1 {
    return new AWSGroupInlinePolicyV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSGroupInlinePolicyV1 | PlainMessage<AWSGroupInlinePolicyV1> | undefined, b: AWSGroupInlinePolicyV1 | PlainMessage<AWSGroupInlinePolicyV1> | undefined): boolean {
    return proto3.util.equals(AWSGroupInlinePolicyV1, a, b);
  }
}

/**
 * AWSS3BucketV1 is an AWS S3 bucket.
 *
 * @generated from message accessgraph.v1alpha.AWSS3BucketV1
 */
export class AWSS3BucketV1 extends Message<AWSS3BucketV1> {
  /**
   * name is the name of the AWS S3 bucket.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * account_id is the ID of the AWS account that the S3 bucket belongs to.
   *
   * @generated from field: string account_id = 2;
   */
  accountId = "";

  /**
   * policy_document is the JSON document that defines the policy.
   *
   * @generated from field: bytes policy_document = 3;
   */
  policyDocument = new Uint8Array(0);

  /**
   * is_public indicates whether the S3 bucket is public.
   *
   * @generated from field: bool is_public = 4;
   */
  isPublic = false;

  /**
   * acl is the ACL of the S3 bucket.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSS3BucketACL acls = 5;
   */
  acls: AWSS3BucketACL[] = [];

  /**
   * tags is the list of tags that are attached to the S3 bucket.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 6;
   */
  tags: AWSTag[] = [];

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 7;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSS3BucketV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSS3BucketV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "policy_document", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "is_public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "acls", kind: "message", T: AWSS3BucketACL, repeated: true },
    { no: 6, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 7, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSS3BucketV1 {
    return new AWSS3BucketV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSS3BucketV1 {
    return new AWSS3BucketV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSS3BucketV1 {
    return new AWSS3BucketV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSS3BucketV1 | PlainMessage<AWSS3BucketV1> | undefined, b: AWSS3BucketV1 | PlainMessage<AWSS3BucketV1> | undefined): boolean {
    return proto3.util.equals(AWSS3BucketV1, a, b);
  }
}

/**
 * AWSS3BucketACL is the ACL of an AWS S3 bucket.
 *
 * @generated from message accessgraph.v1alpha.AWSS3BucketACL
 */
export class AWSS3BucketACL extends Message<AWSS3BucketACL> {
  /**
   * grantee is the grantee of the ACL.
   *
   * @generated from field: accessgraph.v1alpha.AWSS3BucketACLGrantee grantee = 1;
   */
  grantee?: AWSS3BucketACLGrantee;

  /**
   * permission is the permission of the ACL.
   *
   * @generated from field: string permission = 2;
   */
  permission = "";

  constructor(data?: PartialMessage<AWSS3BucketACL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSS3BucketACL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "grantee", kind: "message", T: AWSS3BucketACLGrantee },
    { no: 2, name: "permission", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSS3BucketACL {
    return new AWSS3BucketACL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSS3BucketACL {
    return new AWSS3BucketACL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSS3BucketACL {
    return new AWSS3BucketACL().fromJsonString(jsonString, options);
  }

  static equals(a: AWSS3BucketACL | PlainMessage<AWSS3BucketACL> | undefined, b: AWSS3BucketACL | PlainMessage<AWSS3BucketACL> | undefined): boolean {
    return proto3.util.equals(AWSS3BucketACL, a, b);
  }
}

/**
 * AWSS3BucketACLGrantee is the grantee of an ACL.
 *
 * @generated from message accessgraph.v1alpha.AWSS3BucketACLGrantee
 */
export class AWSS3BucketACLGrantee extends Message<AWSS3BucketACLGrantee> {
  /**
   * display_name is the name of the grantee.
   *
   * @generated from field: string display_name = 1;
   */
  displayName = "";

  /**
   * id is the ID of the grantee.
   *
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * email_address is the email address of the grantee.
   *
   * @generated from field: string email_address = 3;
   */
  emailAddress = "";

  /**
   * type is the type of the grantee.
   *
   * @generated from field: string type = 4;
   */
  type = "";

  /**
   * uri is the URI of the grantee.
   *
   * @generated from field: string uri = 5;
   */
  uri = "";

  constructor(data?: PartialMessage<AWSS3BucketACLGrantee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSS3BucketACLGrantee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSS3BucketACLGrantee {
    return new AWSS3BucketACLGrantee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSS3BucketACLGrantee {
    return new AWSS3BucketACLGrantee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSS3BucketACLGrantee {
    return new AWSS3BucketACLGrantee().fromJsonString(jsonString, options);
  }

  static equals(a: AWSS3BucketACLGrantee | PlainMessage<AWSS3BucketACLGrantee> | undefined, b: AWSS3BucketACLGrantee | PlainMessage<AWSS3BucketACLGrantee> | undefined): boolean {
    return proto3.util.equals(AWSS3BucketACLGrantee, a, b);
  }
}

/**
 * AWSRoleV1 is an AWS role.
 *
 * @generated from message accessgraph.v1alpha.AWSRoleV1
 */
export class AWSRoleV1 extends Message<AWSRoleV1> {
  /**
   * arn is the ARN of the AWS role.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * assume_role_policy_document is the JSON document that defines the trust
   * policy for the role.
   *
   * @generated from field: bytes assume_role_policy_document = 2;
   */
  assumeRolePolicyDocument = new Uint8Array(0);

  /**
   * created_at is the time when the role was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * description is the description of the role.
   *
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * max_session_duration is the maximum session duration of the role.
   *
   * @generated from field: google.protobuf.Duration max_session_duration = 5;
   */
  maxSessionDuration?: Duration;

  /**
   * path is the path of the role.
   *
   * @generated from field: string path = 6;
   */
  path = "";

  /**
   * permissions_boundary is the permissions boundary of the role.
   *
   * @generated from field: accessgraph.v1alpha.RolePermissionsBoundaryV1 permissions_boundary = 7;
   */
  permissionsBoundary?: RolePermissionsBoundaryV1;

  /**
   * role_id is the ID of the role.
   *
   * @generated from field: string role_id = 8;
   */
  roleId = "";

  /**
   * name is the name of the role.
   *
   * @generated from field: string name = 9;
   */
  name = "";

  /**
   * tags is the list of tags that are attached to the role.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 10;
   */
  tags: AWSTag[] = [];

  /**
   * role_last_used is the last used information of the role.
   *
   * @generated from field: accessgraph.v1alpha.RoleLastUsedV1 role_last_used = 11;
   */
  roleLastUsed?: RoleLastUsedV1;

  /**
   * account_id is the ID of the AWS account that the role belongs to.
   *
   * @generated from field: string account_id = 12;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 13;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSRoleV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSRoleV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "assume_role_policy_document", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "max_session_duration", kind: "message", T: Duration },
    { no: 6, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "permissions_boundary", kind: "message", T: RolePermissionsBoundaryV1 },
    { no: 8, name: "role_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 11, name: "role_last_used", kind: "message", T: RoleLastUsedV1 },
    { no: 12, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSRoleV1 {
    return new AWSRoleV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSRoleV1 {
    return new AWSRoleV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSRoleV1 {
    return new AWSRoleV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSRoleV1 | PlainMessage<AWSRoleV1> | undefined, b: AWSRoleV1 | PlainMessage<AWSRoleV1> | undefined): boolean {
    return proto3.util.equals(AWSRoleV1, a, b);
  }
}

/**
 * RolePermissionsBoundaryV1 is the permissions boundary of a role.
 *
 * @generated from message accessgraph.v1alpha.RolePermissionsBoundaryV1
 */
export class RolePermissionsBoundaryV1 extends Message<RolePermissionsBoundaryV1> {
  /**
   * permissions_boundary_arn is the ARN of the permissions boundary.
   *
   * @generated from field: string permissions_boundary_arn = 1;
   */
  permissionsBoundaryArn = "";

  /**
   * permissions_boundary_type is the ARN of the permissions boundary.
   *
   * @generated from field: accessgraph.v1alpha.RolePermissionsBoundaryType permissions_boundary_type = 2;
   */
  permissionsBoundaryType = RolePermissionsBoundaryType.UNSPECIFIED;

  constructor(data?: PartialMessage<RolePermissionsBoundaryV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.RolePermissionsBoundaryV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions_boundary_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permissions_boundary_type", kind: "enum", T: proto3.getEnumType(RolePermissionsBoundaryType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RolePermissionsBoundaryV1 {
    return new RolePermissionsBoundaryV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RolePermissionsBoundaryV1 {
    return new RolePermissionsBoundaryV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RolePermissionsBoundaryV1 {
    return new RolePermissionsBoundaryV1().fromJsonString(jsonString, options);
  }

  static equals(a: RolePermissionsBoundaryV1 | PlainMessage<RolePermissionsBoundaryV1> | undefined, b: RolePermissionsBoundaryV1 | PlainMessage<RolePermissionsBoundaryV1> | undefined): boolean {
    return proto3.util.equals(RolePermissionsBoundaryV1, a, b);
  }
}

/**
 * RoleLastUsedV1 is the last used information of a role.
 *
 * @generated from message accessgraph.v1alpha.RoleLastUsedV1
 */
export class RoleLastUsedV1 extends Message<RoleLastUsedV1> {
  /**
   * last_used_date is the date when the role was last used.
   *
   * @generated from field: google.protobuf.Timestamp last_used_date = 1;
   */
  lastUsedDate?: Timestamp;

  /**
   * region is the region where the role was last used.
   *
   * @generated from field: string region = 2;
   */
  region = "";

  constructor(data?: PartialMessage<RoleLastUsedV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.RoleLastUsedV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "last_used_date", kind: "message", T: Timestamp },
    { no: 2, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoleLastUsedV1 {
    return new RoleLastUsedV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoleLastUsedV1 {
    return new RoleLastUsedV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoleLastUsedV1 {
    return new RoleLastUsedV1().fromJsonString(jsonString, options);
  }

  static equals(a: RoleLastUsedV1 | PlainMessage<RoleLastUsedV1> | undefined, b: RoleLastUsedV1 | PlainMessage<RoleLastUsedV1> | undefined): boolean {
    return proto3.util.equals(RoleLastUsedV1, a, b);
  }
}

/**
 * AWSRoleInlinePolicyV1 is a policy that is inlined to an AWS Role.
 *
 * @generated from message accessgraph.v1alpha.AWSRoleInlinePolicyV1
 */
export class AWSRoleInlinePolicyV1 extends Message<AWSRoleInlinePolicyV1> {
  /**
   * policy_name is the name of the policy.
   *
   * @generated from field: string policy_name = 1;
   */
  policyName = "";

  /**
   * policy_document is the JSON document that defines the policy.
   *
   * @generated from field: bytes policy_document = 3;
   */
  policyDocument = new Uint8Array(0);

  /**
   * account_id is the ID of the AWS account that the role belongs to.
   *
   * @generated from field: string account_id = 4;
   */
  accountId = "";

  /**
   * aws_role is the role name of the AWS role that the policy is attached to.
   *
   * @generated from field: accessgraph.v1alpha.AWSRoleV1 aws_role = 5;
   */
  awsRole?: AWSRoleV1;

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 6;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSRoleInlinePolicyV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSRoleInlinePolicyV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "policy_document", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "aws_role", kind: "message", T: AWSRoleV1 },
    { no: 6, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSRoleInlinePolicyV1 {
    return new AWSRoleInlinePolicyV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSRoleInlinePolicyV1 {
    return new AWSRoleInlinePolicyV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSRoleInlinePolicyV1 {
    return new AWSRoleInlinePolicyV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSRoleInlinePolicyV1 | PlainMessage<AWSRoleInlinePolicyV1> | undefined, b: AWSRoleInlinePolicyV1 | PlainMessage<AWSRoleInlinePolicyV1> | undefined): boolean {
    return proto3.util.equals(AWSRoleInlinePolicyV1, a, b);
  }
}

/**
 * AWSRoleAttachedPolicies is a list of AWS policies that are attached to an
 * AWS role.
 *
 * @generated from message accessgraph.v1alpha.AWSRoleAttachedPolicies
 */
export class AWSRoleAttachedPolicies extends Message<AWSRoleAttachedPolicies> {
  /**
   * policies is the list of AWS policies that are attached to the role.
   *
   * @generated from field: repeated accessgraph.v1alpha.AttachedPolicyV1 policies = 2;
   */
  policies: AttachedPolicyV1[] = [];

  /**
   * account_id is the ID of the AWS account that the role belongs to.
   *
   * @generated from field: string account_id = 3;
   */
  accountId = "";

  /**
   * aws_role is the AWS role.
   *
   * @generated from field: accessgraph.v1alpha.AWSRoleV1 aws_role = 4;
   */
  awsRole?: AWSRoleV1;

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 5;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSRoleAttachedPolicies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSRoleAttachedPolicies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "policies", kind: "message", T: AttachedPolicyV1, repeated: true },
    { no: 3, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "aws_role", kind: "message", T: AWSRoleV1 },
    { no: 5, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSRoleAttachedPolicies {
    return new AWSRoleAttachedPolicies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSRoleAttachedPolicies {
    return new AWSRoleAttachedPolicies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSRoleAttachedPolicies {
    return new AWSRoleAttachedPolicies().fromJsonString(jsonString, options);
  }

  static equals(a: AWSRoleAttachedPolicies | PlainMessage<AWSRoleAttachedPolicies> | undefined, b: AWSRoleAttachedPolicies | PlainMessage<AWSRoleAttachedPolicies> | undefined): boolean {
    return proto3.util.equals(AWSRoleAttachedPolicies, a, b);
  }
}

/**
 * AWSInstanceProfileV1 is an AWS instance profile.
 *
 * @generated from message accessgraph.v1alpha.AWSInstanceProfileV1
 */
export class AWSInstanceProfileV1 extends Message<AWSInstanceProfileV1> {
  /**
   * arn is the ARN of the AWS instance profile.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * created_at is the time when the instance profile was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * instance_profile_id is the ID of the instance profile.
   *
   * @generated from field: string instance_profile_id = 3;
   */
  instanceProfileId = "";

  /**
   * instance_profile_name is the name of the instance profile.
   *
   * @generated from field: string instance_profile_name = 4;
   */
  instanceProfileName = "";

  /**
   * path is the path of the instance profile.
   *
   * @generated from field: string path = 5;
   */
  path = "";

  /**
   * roles is the list of roles that are associated with the instance profile.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSRoleV1 roles = 6;
   */
  roles: AWSRoleV1[] = [];

  /**
   * tags is the list of tags that are attached to the instance profile.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 7;
   */
  tags: AWSTag[] = [];

  /**
   * account_id is the ID of the AWS account that the instance profile belongs
   * to.
   *
   * @generated from field: string account_id = 8;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 9;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSInstanceProfileV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSInstanceProfileV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "instance_profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "instance_profile_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "roles", kind: "message", T: AWSRoleV1, repeated: true },
    { no: 7, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 8, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSInstanceProfileV1 {
    return new AWSInstanceProfileV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSInstanceProfileV1 {
    return new AWSInstanceProfileV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSInstanceProfileV1 {
    return new AWSInstanceProfileV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSInstanceProfileV1 | PlainMessage<AWSInstanceProfileV1> | undefined, b: AWSInstanceProfileV1 | PlainMessage<AWSInstanceProfileV1> | undefined): boolean {
    return proto3.util.equals(AWSInstanceProfileV1, a, b);
  }
}

/**
 * AWSEKSClusterV1 represents an AWS EKS cluster.
 *
 * @generated from message accessgraph.v1alpha.AWSEKSClusterV1
 */
export class AWSEKSClusterV1 extends Message<AWSEKSClusterV1> {
  /**
   * name is the cluster name.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * arn is the cluster arn
   *
   * @generated from field: string arn = 2;
   */
  arn = "";

  /**
   * created_at is the time when the instance profile was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * status is the cluster status.
   *
   * @generated from field: string status = 4;
   */
  status = "";

  /**
   * version is the Kubernetes version that the cluster runs.
   *
   * @generated from field: string version = 5;
   */
  version = "";

  /**
   * tags is the list of tags that are attached to the instance profile.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 6;
   */
  tags: AWSTag[] = [];

  /**
   * region is the region where the cluster is located.
   *
   * @generated from field: string region = 7;
   */
  region = "";

  /**
   * account_id is the ID of the AWS account that the instance profile belongs
   * to.
   *
   * @generated from field: string account_id = 8;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 9;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSEKSClusterV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSEKSClusterV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 7, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSEKSClusterV1 {
    return new AWSEKSClusterV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSEKSClusterV1 {
    return new AWSEKSClusterV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSEKSClusterV1 {
    return new AWSEKSClusterV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSEKSClusterV1 | PlainMessage<AWSEKSClusterV1> | undefined, b: AWSEKSClusterV1 | PlainMessage<AWSEKSClusterV1> | undefined): boolean {
    return proto3.util.equals(AWSEKSClusterV1, a, b);
  }
}

/**
 * AWSEKSClusterAccessEntriesV1 represents an EKS cluster Access Entry.
 *
 * @generated from message accessgraph.v1alpha.AWSEKSClusterAccessEntryV1
 */
export class AWSEKSClusterAccessEntryV1 extends Message<AWSEKSClusterAccessEntryV1> {
  /**
   * cluster is the EKS cluster.
   *
   * @generated from field: accessgraph.v1alpha.AWSEKSClusterV1 cluster = 1;
   */
  cluster?: AWSEKSClusterV1;

  /**
   * access_entry_arn is the ARN of the access entry.
   *
   * @generated from field: string access_entry_arn = 2;
   */
  accessEntryArn = "";

  /**
   * created_at is the time when the instance profile was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * kubernetes_groups is the list of groups from which the principal will inherit its permissions.
   *
   * @generated from field: repeated string kubernetes_groups = 4;
   */
  kubernetesGroups: string[] = [];

  /**
   * created_at is the time when the instance profile was created.
   *
   * @generated from field: google.protobuf.Timestamp modified_at = 5;
   */
  modifiedAt?: Timestamp;

  /**
   * principal is the ARN of the IAM principal for the access entry.
   *
   * @generated from field: string principal_arn = 6;
   */
  principalArn = "";

  /**
   * tags is the list of tags that are attached to the instance profile.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 7;
   */
  tags: AWSTag[] = [];

  /**
   * type represents the type of the access entry.
   *
   * @generated from field: string type = 8;
   */
  type = "";

  /**
   * username is the name of the Kubernetes user.
   *
   * @generated from field: string username = 9;
   */
  username = "";

  /**
   * account_id is the ID of the AWS account that the instance profile belongs
   * to.
   *
   * @generated from field: string account_id = 10;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 11;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSEKSClusterAccessEntryV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSEKSClusterAccessEntryV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "cluster", kind: "message", T: AWSEKSClusterV1 },
    { no: 2, name: "access_entry_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "kubernetes_groups", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "modified_at", kind: "message", T: Timestamp },
    { no: 6, name: "principal_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 8, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSEKSClusterAccessEntryV1 {
    return new AWSEKSClusterAccessEntryV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSEKSClusterAccessEntryV1 {
    return new AWSEKSClusterAccessEntryV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSEKSClusterAccessEntryV1 {
    return new AWSEKSClusterAccessEntryV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSEKSClusterAccessEntryV1 | PlainMessage<AWSEKSClusterAccessEntryV1> | undefined, b: AWSEKSClusterAccessEntryV1 | PlainMessage<AWSEKSClusterAccessEntryV1> | undefined): boolean {
    return proto3.util.equals(AWSEKSClusterAccessEntryV1, a, b);
  }
}

/**
 * AWSEKSAssociatedAccessPolicyV1 identifies an access policy association.
 *
 * @generated from message accessgraph.v1alpha.AWSEKSAssociatedAccessPolicyV1
 */
export class AWSEKSAssociatedAccessPolicyV1 extends Message<AWSEKSAssociatedAccessPolicyV1> {
  /**
   * cluster is the EKS cluster.
   *
   * @generated from field: accessgraph.v1alpha.AWSEKSClusterV1 cluster = 1;
   */
  cluster?: AWSEKSClusterV1;

  /**
   * principal_arn is the principal that the associated access policy insides.
   *
   * @generated from field: string principal_arn = 2;
   */
  principalArn = "";

  /**
   * scope restricts the access policy.
   *
   * @generated from field: accessgraph.v1alpha.AWSEKSAccessScopeV1 scope = 3;
   */
  scope?: AWSEKSAccessScopeV1;

  /**
   * associated_at is the date and time the AccessPolicy was associated with an AccessEntry.
   *
   * @generated from field: google.protobuf.Timestamp associated_at = 4;
   */
  associatedAt?: Timestamp;

  /**
   * modified_at is the last modification to the object.
   *
   * @generated from field: google.protobuf.Timestamp modified_at = 5;
   */
  modifiedAt?: Timestamp;

  /**
   * policy_arn is the ARN of the AccessPolicy.
   * Managed by AWS.
   *
   * @generated from field: string policy_arn = 6;
   */
  policyArn = "";

  /**
   * account_id is the ID of the AWS account that the instance profile belongs
   * to.
   *
   * @generated from field: string account_id = 7;
   */
  accountId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 8;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSEKSAssociatedAccessPolicyV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSEKSAssociatedAccessPolicyV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "cluster", kind: "message", T: AWSEKSClusterV1 },
    { no: 2, name: "principal_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "scope", kind: "message", T: AWSEKSAccessScopeV1 },
    { no: 4, name: "associated_at", kind: "message", T: Timestamp },
    { no: 5, name: "modified_at", kind: "message", T: Timestamp },
    { no: 6, name: "policy_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSEKSAssociatedAccessPolicyV1 {
    return new AWSEKSAssociatedAccessPolicyV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSEKSAssociatedAccessPolicyV1 {
    return new AWSEKSAssociatedAccessPolicyV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSEKSAssociatedAccessPolicyV1 {
    return new AWSEKSAssociatedAccessPolicyV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSEKSAssociatedAccessPolicyV1 | PlainMessage<AWSEKSAssociatedAccessPolicyV1> | undefined, b: AWSEKSAssociatedAccessPolicyV1 | PlainMessage<AWSEKSAssociatedAccessPolicyV1> | undefined): boolean {
    return proto3.util.equals(AWSEKSAssociatedAccessPolicyV1, a, b);
  }
}

/**
 * AWSEKSAccessScope identifies the scope to which the AssociatedAccessPolicy applies.
 *
 * @generated from message accessgraph.v1alpha.AWSEKSAccessScopeV1
 */
export class AWSEKSAccessScopeV1 extends Message<AWSEKSAccessScopeV1> {
  /**
   * namespaces is the list of namespaces to scope the policy into.
   *
   * @generated from field: repeated string namespaces = 1;
   */
  namespaces: string[] = [];

  /**
   * type identifies which scope type was configured.
   *
   * @generated from field: string type = 2;
   */
  type = "";

  constructor(data?: PartialMessage<AWSEKSAccessScopeV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSEKSAccessScopeV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "namespaces", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSEKSAccessScopeV1 {
    return new AWSEKSAccessScopeV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSEKSAccessScopeV1 {
    return new AWSEKSAccessScopeV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSEKSAccessScopeV1 {
    return new AWSEKSAccessScopeV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSEKSAccessScopeV1 | PlainMessage<AWSEKSAccessScopeV1> | undefined, b: AWSEKSAccessScopeV1 | PlainMessage<AWSEKSAccessScopeV1> | undefined): boolean {
    return proto3.util.equals(AWSEKSAccessScopeV1, a, b);
  }
}

/**
 * AWSRDSDatabaseV1 defines the database details.
 *
 * @generated from message accessgraph.v1alpha.AWSRDSDatabaseV1
 */
export class AWSRDSDatabaseV1 extends Message<AWSRDSDatabaseV1> {
  /**
   * arn is the instance ARN.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * status is the instance status.
   *
   * @generated from field: string status = 2;
   */
  status = "";

  /**
   * name is the instance name.
   *
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * engine_details describes the database engine details.
   *
   * @generated from field: accessgraph.v1alpha.AWSRDSEngineV1 engine_details = 4;
   */
  engineDetails?: AWSRDSEngineV1;

  /**
   * created_at is the time when the db instance was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * tags is the list of tags that are attached to the instance profile.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 6;
   */
  tags: AWSTag[] = [];

  /**
   * region is the database region location
   *
   * @generated from field: string region = 7;
   */
  region = "";

  /**
   * is_cluster indicates if the database is a cluster.
   *
   * @generated from field: bool is_cluster = 8;
   */
  isCluster = false;

  /**
   * account_id is the ID of the AWS account that the instance profile belongs
   * to.
   *
   * @generated from field: string account_id = 9;
   */
  accountId = "";

  /**
   * resource_id is the RDS unique resource id.
   *
   * @generated from field: string resource_id = 10;
   */
  resourceId = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 11;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSRDSDatabaseV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSRDSDatabaseV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "engine_details", kind: "message", T: AWSRDSEngineV1 },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 7, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "is_cluster", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "resource_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSRDSDatabaseV1 {
    return new AWSRDSDatabaseV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSRDSDatabaseV1 {
    return new AWSRDSDatabaseV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSRDSDatabaseV1 {
    return new AWSRDSDatabaseV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSRDSDatabaseV1 | PlainMessage<AWSRDSDatabaseV1> | undefined, b: AWSRDSDatabaseV1 | PlainMessage<AWSRDSDatabaseV1> | undefined): boolean {
    return proto3.util.equals(AWSRDSDatabaseV1, a, b);
  }
}

/**
 * AWSRDSEngineV1 defines the database engine details
 *
 * @generated from message accessgraph.v1alpha.AWSRDSEngineV1
 */
export class AWSRDSEngineV1 extends Message<AWSRDSEngineV1> {
  /**
   * engine is the engine the database runs.
   *
   * @generated from field: string engine = 1;
   */
  engine = "";

  /**
   * version holds the version information.
   *
   * @generated from field: string version = 2;
   */
  version = "";

  constructor(data?: PartialMessage<AWSRDSEngineV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSRDSEngineV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "engine", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSRDSEngineV1 {
    return new AWSRDSEngineV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSRDSEngineV1 {
    return new AWSRDSEngineV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSRDSEngineV1 {
    return new AWSRDSEngineV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSRDSEngineV1 | PlainMessage<AWSRDSEngineV1> | undefined, b: AWSRDSEngineV1 | PlainMessage<AWSRDSEngineV1> | undefined): boolean {
    return proto3.util.equals(AWSRDSEngineV1, a, b);
  }
}

/**
 * AWSSAMLProviderV1 defines the SAML identity provider details.
 *
 * @generated from message accessgraph.v1alpha.AWSSAMLProviderV1
 */
export class AWSSAMLProviderV1 extends Message<AWSSAMLProviderV1> {
  /**
   * arn is the provider ARN.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * created_at is the time when the SAML provider was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * valid_until is the expiration date and time for the SAML provider.
   *
   * @generated from field: google.protobuf.Timestamp valid_until = 3;
   */
  validUntil?: Timestamp;

  /**
   * tags is the list of tags that are attached to the SAML provider.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 4;
   */
  tags: AWSTag[] = [];

  /**
   * account_id is the ID of the AWS account that the provider belongs to.
   *
   * @generated from field: string account_id = 5;
   */
  accountId = "";

  /**
   * entity_id is the SAML entity ID for this provider.
   *
   * @generated from field: string entity_id = 6;
   */
  entityId = "";

  /**
   * sso_urls is a list of single sign-on service URLs for this identity provider.
   *
   * @generated from field: repeated string sso_urls = 7;
   */
  ssoUrls: string[] = [];

  /**
   * signing_certificates is a list of signing certificates for this identity provider.
   *
   * @generated from field: repeated string signing_certificates = 8;
   */
  signingCertificates: string[] = [];

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 9;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSSAMLProviderV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSSAMLProviderV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "valid_until", kind: "message", T: Timestamp },
    { no: 4, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 5, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "sso_urls", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "signing_certificates", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSSAMLProviderV1 {
    return new AWSSAMLProviderV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSSAMLProviderV1 {
    return new AWSSAMLProviderV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSSAMLProviderV1 {
    return new AWSSAMLProviderV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSSAMLProviderV1 | PlainMessage<AWSSAMLProviderV1> | undefined, b: AWSSAMLProviderV1 | PlainMessage<AWSSAMLProviderV1> | undefined): boolean {
    return proto3.util.equals(AWSSAMLProviderV1, a, b);
  }
}

/**
 * AWSOIDCProviderV1 defines the OIDC identity provider details.
 *
 * @generated from message accessgraph.v1alpha.AWSOIDCProviderV1
 */
export class AWSOIDCProviderV1 extends Message<AWSOIDCProviderV1> {
  /**
   * arn is the provider ARN.
   *
   * @generated from field: string arn = 1;
   */
  arn = "";

  /**
   * created_at is the time when the OIDC provider was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * tags is the list of tags that are attached to the SAML provider.
   *
   * @generated from field: repeated accessgraph.v1alpha.AWSTag tags = 3;
   */
  tags: AWSTag[] = [];

  /**
   * account_id is the ID of the AWS account that the provider belongs to.
   *
   * @generated from field: string account_id = 4;
   */
  accountId = "";

  /**
   * client_ids is a list of client IDs (audiences) associated with this OIDC provider.
   *
   * @generated from field: repeated string client_ids = 5;
   */
  clientIds: string[] = [];

  /**
   * thumbprints is a list of certificate thumbprints for this OIDC provider.
   *
   * @generated from field: repeated string thumbprints = 6;
   */
  thumbprints: string[] = [];

  /**
   * url is the URL for this OIDC provider.
   *
   * @generated from field: string url = 7;
   */
  url = "";

  /**
   * last_sync_time is the time when the resource was last synced.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 8;
   */
  lastSyncTime?: Timestamp;

  constructor(data?: PartialMessage<AWSOIDCProviderV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "accessgraph.v1alpha.AWSOIDCProviderV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "tags", kind: "message", T: AWSTag, repeated: true },
    { no: 4, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "client_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "thumbprints", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "last_sync_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AWSOIDCProviderV1 {
    return new AWSOIDCProviderV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AWSOIDCProviderV1 {
    return new AWSOIDCProviderV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AWSOIDCProviderV1 {
    return new AWSOIDCProviderV1().fromJsonString(jsonString, options);
  }

  static equals(a: AWSOIDCProviderV1 | PlainMessage<AWSOIDCProviderV1> | undefined, b: AWSOIDCProviderV1 | PlainMessage<AWSOIDCProviderV1> | undefined): boolean {
    return proto3.util.equals(AWSOIDCProviderV1, a, b);
  }
}

