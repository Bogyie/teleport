//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file prehog/v1alpha/teleport.proto (package prehog.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { HelloTeleportRequest, HelloTeleportResponse, SubmitEventRequest, SubmitEventResponse, SubmitEventsRequest, SubmitEventsResponse } from "./teleport_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service prehog.v1alpha.TeleportReportingService
 */
export const TeleportReportingService = {
  typeName: "prehog.v1alpha.TeleportReportingService",
  methods: {
    /**
     * equivalent to SubmitEvents with a single event, should be unused by now
     *
     * @generated from rpc prehog.v1alpha.TeleportReportingService.SubmitEvent
     * @deprecated
     */
    submitEvent: {
      name: "SubmitEvent",
      I: SubmitEventRequest,
      O: SubmitEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * encodes and forwards usage events to the PostHog event database; each
     * event is annotated with some properties that depend on the identity of the
     * caller:
     * - tp.account_id (UUID in string form, can be empty if missing from the
     *   license)
     * - tp.license_name (should always be a UUID)
     * - tp.license_authority (name of the authority that signed the license file
     *   used for authentication)
     * - tp.is_cloud (boolean)
     *
     * @generated from rpc prehog.v1alpha.TeleportReportingService.SubmitEvents
     */
    submitEvents: {
      name: "SubmitEvents",
      I: SubmitEventsRequest,
      O: SubmitEventsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc prehog.v1alpha.TeleportReportingService.HelloTeleport
     */
    helloTeleport: {
      name: "HelloTeleport",
      I: HelloTeleportRequest,
      O: HelloTeleportResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

