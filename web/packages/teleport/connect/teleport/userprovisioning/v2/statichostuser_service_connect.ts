// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/userprovisioning/v2/statichostuser_service.proto (package teleport.userprovisioning.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateStaticHostUserRequest, DeleteStaticHostUserRequest, GetStaticHostUserRequest, ListStaticHostUsersRequest, ListStaticHostUsersResponse, UpdateStaticHostUserRequest, UpsertStaticHostUserRequest } from "./statichostuser_service_pb.js";
import { StaticHostUser } from "./statichostuser_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * StaticHostUsersService provides methods to manage static host users.
 *
 * @generated from service teleport.userprovisioning.v2.StaticHostUsersService
 */
export const StaticHostUsersService = {
  typeName: "teleport.userprovisioning.v2.StaticHostUsersService",
  methods: {
    /**
     * GetStaticHostUser retrieves a static host user resource by name.
     *
     * @generated from rpc teleport.userprovisioning.v2.StaticHostUsersService.GetStaticHostUser
     */
    getStaticHostUser: {
      name: "GetStaticHostUser",
      I: GetStaticHostUserRequest,
      O: StaticHostUser,
      kind: MethodKind.Unary,
    },
    /**
     * ListStaticHostUsers gets all existing static host users.
     *
     * @generated from rpc teleport.userprovisioning.v2.StaticHostUsersService.ListStaticHostUsers
     */
    listStaticHostUsers: {
      name: "ListStaticHostUsers",
      I: ListStaticHostUsersRequest,
      O: ListStaticHostUsersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateStaticHostUser creates a static host user if one does not already exist.
     *
     * @generated from rpc teleport.userprovisioning.v2.StaticHostUsersService.CreateStaticHostUser
     */
    createStaticHostUser: {
      name: "CreateStaticHostUser",
      I: CreateStaticHostUserRequest,
      O: StaticHostUser,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateStaticHostUser updates an existing static host user.
     *
     * @generated from rpc teleport.userprovisioning.v2.StaticHostUsersService.UpdateStaticHostUser
     */
    updateStaticHostUser: {
      name: "UpdateStaticHostUser",
      I: UpdateStaticHostUserRequest,
      O: StaticHostUser,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertStaticHostUser creates a new static host user or forcefully updates an existing static host user.
     *
     * @generated from rpc teleport.userprovisioning.v2.StaticHostUsersService.UpsertStaticHostUser
     */
    upsertStaticHostUser: {
      name: "UpsertStaticHostUser",
      I: UpsertStaticHostUserRequest,
      O: StaticHostUser,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteStaticHostUser removes an existing static host user resource by name.
     *
     * @generated from rpc teleport.userprovisioning.v2.StaticHostUsersService.DeleteStaticHostUser
     */
    deleteStaticHostUser: {
      name: "DeleteStaticHostUser",
      I: DeleteStaticHostUserRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

