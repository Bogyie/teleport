// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/scim/v1/scim_service.proto (package teleport.scim.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateSCIMResourceRequest, DeleteSCIMResourceRequest, GetSCIMResourceRequest, ListSCIMResourcesRequest, Resource, ResourceList, UpdateSCIMResourceRequest } from "./scim_service_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * SCIMService implements a SCIM gateway for external IDPs for user provisioning
 *
 * @generated from service teleport.scim.v1.SCIMService
 */
export const SCIMService = {
  typeName: "teleport.scim.v1.SCIMService",
  methods: {
    /**
     * List fetches all (or a subset of all) resources resources of a given type
     *
     * @generated from rpc teleport.scim.v1.SCIMService.ListSCIMResources
     */
    listSCIMResources: {
      name: "ListSCIMResources",
      I: ListSCIMResourcesRequest,
      O: ResourceList,
      kind: MethodKind.Unary,
    },
    /**
     * GetSCIMResource fetches a single SCIM resource from the server by name
     *
     * @generated from rpc teleport.scim.v1.SCIMService.GetSCIMResource
     */
    getSCIMResource: {
      name: "GetSCIMResource",
      I: GetSCIMResourceRequest,
      O: Resource,
      kind: MethodKind.Unary,
    },
    /**
     * CreateSCIResource creates a new SCIM resource based on a supplied
     * resource description
     *
     * @generated from rpc teleport.scim.v1.SCIMService.CreateSCIMResource
     */
    createSCIMResource: {
      name: "CreateSCIMResource",
      I: CreateSCIMResourceRequest,
      O: Resource,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateResource handles a request to update a resource, returning a
     * representation of the updated resource
     *
     * @generated from rpc teleport.scim.v1.SCIMService.UpdateSCIMResource
     */
    updateSCIMResource: {
      name: "UpdateSCIMResource",
      I: UpdateSCIMResourceRequest,
      O: Resource,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteSCIMResource deletes a SCIM-managed resource
     *
     * @generated from rpc teleport.scim.v1.SCIMService.DeleteSCIMResource
     */
    deleteSCIMResource: {
      name: "DeleteSCIMResource",
      I: DeleteSCIMResourceRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

