// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/accesslist/v1/accesslist_service.proto (package teleport.accesslist.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { AccessList, AccessListSchema, Member, MemberSchema, Review } from "./accesslist_pb";
import { file_teleport_accesslist_v1_accesslist } from "./accesslist_pb";
import type { AccessRequestV3 } from "../../legacy/types/types_pb";
import { file_teleport_legacy_types_types } from "../../legacy/types/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/accesslist/v1/accesslist_service.proto.
 */
export const file_teleport_accesslist_v1_accesslist_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_empty, file_google_protobuf_timestamp, file_teleport_accesslist_v1_accesslist, file_teleport_legacy_types_types]);

/**
 * GetAccessListsRequest is the request for getting all access lists.
 *
 * @generated from message teleport.accesslist.v1.GetAccessListsRequest
 */
export type GetAccessListsRequest = Message<"teleport.accesslist.v1.GetAccessListsRequest"> & {
};

/**
 * Describes the message teleport.accesslist.v1.GetAccessListsRequest.
 * Use `create(GetAccessListsRequestSchema)` to create a new message.
 */
export const GetAccessListsRequestSchema: GenMessage<GetAccessListsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 0);

/**
 * GetAccessListsResponse is the response for getting all access lists.
 *
 * @generated from message teleport.accesslist.v1.GetAccessListsResponse
 */
export type GetAccessListsResponse = Message<"teleport.accesslist.v1.GetAccessListsResponse"> & {
  /**
   * access_lists is the list of access lists.
   *
   * @generated from field: repeated teleport.accesslist.v1.AccessList access_lists = 1;
   */
  accessLists: AccessList[];
};

/**
 * Describes the message teleport.accesslist.v1.GetAccessListsResponse.
 * Use `create(GetAccessListsResponseSchema)` to create a new message.
 */
export const GetAccessListsResponseSchema: GenMessage<GetAccessListsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 1);

/**
 * ListAccessListsRequest is the request for getting paginated access lists.
 *
 * @generated from message teleport.accesslist.v1.ListAccessListsRequest
 */
export type ListAccessListsRequest = Message<"teleport.accesslist.v1.ListAccessListsRequest"> & {
  /**
   * page_size is the size of the page to request.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * next_token is the page token.
   *
   * @generated from field: string next_token = 2;
   */
  nextToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAccessListsRequest.
 * Use `create(ListAccessListsRequestSchema)` to create a new message.
 */
export const ListAccessListsRequestSchema: GenMessage<ListAccessListsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 2);

/**
 * ListAccessListsResponse is the response for getting paginated access lists.
 *
 * @generated from message teleport.accesslist.v1.ListAccessListsResponse
 */
export type ListAccessListsResponse = Message<"teleport.accesslist.v1.ListAccessListsResponse"> & {
  /**
   * access_lists is the list of access lists.
   *
   * @generated from field: repeated teleport.accesslist.v1.AccessList access_lists = 1;
   */
  accessLists: AccessList[];

  /**
   * next_token is the next page token.
   *
   * @generated from field: string next_token = 2;
   */
  nextToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAccessListsResponse.
 * Use `create(ListAccessListsResponseSchema)` to create a new message.
 */
export const ListAccessListsResponseSchema: GenMessage<ListAccessListsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 3);

/**
 * GetAccessListRequest is the request for retrieving an access list.
 *
 * @generated from message teleport.accesslist.v1.GetAccessListRequest
 */
export type GetAccessListRequest = Message<"teleport.accesslist.v1.GetAccessListRequest"> & {
  /**
   * name is the name of the access list to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.accesslist.v1.GetAccessListRequest.
 * Use `create(GetAccessListRequestSchema)` to create a new message.
 */
export const GetAccessListRequestSchema: GenMessage<GetAccessListRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 4);

/**
 * UpsertAccessListRequest is the request for upserting an access list.
 *
 * @generated from message teleport.accesslist.v1.UpsertAccessListRequest
 */
export type UpsertAccessListRequest = Message<"teleport.accesslist.v1.UpsertAccessListRequest"> & {
  /**
   * access_list is the access list to upsert.
   *
   * @generated from field: teleport.accesslist.v1.AccessList access_list = 1;
   */
  accessList?: AccessList;
};

/**
 * Describes the message teleport.accesslist.v1.UpsertAccessListRequest.
 * Use `create(UpsertAccessListRequestSchema)` to create a new message.
 */
export const UpsertAccessListRequestSchema: GenMessage<UpsertAccessListRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 5);

/**
 * UpdateAccessListRequest is the request for updating an access list.
 *
 * @generated from message teleport.accesslist.v1.UpdateAccessListRequest
 */
export type UpdateAccessListRequest = Message<"teleport.accesslist.v1.UpdateAccessListRequest"> & {
  /**
   * access_list is the access list to upsert.
   *
   * @generated from field: teleport.accesslist.v1.AccessList access_list = 1;
   */
  accessList?: AccessList;
};

/**
 * Describes the message teleport.accesslist.v1.UpdateAccessListRequest.
 * Use `create(UpdateAccessListRequestSchema)` to create a new message.
 */
export const UpdateAccessListRequestSchema: GenMessage<UpdateAccessListRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 6);

/**
 * DeleteAccessListRequest is the request for deleting an access list.
 *
 * @generated from message teleport.accesslist.v1.DeleteAccessListRequest
 */
export type DeleteAccessListRequest = Message<"teleport.accesslist.v1.DeleteAccessListRequest"> & {
  /**
   * name is the name of the access list to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.accesslist.v1.DeleteAccessListRequest.
 * Use `create(DeleteAccessListRequestSchema)` to create a new message.
 */
export const DeleteAccessListRequestSchema: GenMessage<DeleteAccessListRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 7);

/**
 * DeleteAllAccessListsRequest is the request for deleting all access lists.
 *
 * @generated from message teleport.accesslist.v1.DeleteAllAccessListsRequest
 */
export type DeleteAllAccessListsRequest = Message<"teleport.accesslist.v1.DeleteAllAccessListsRequest"> & {
};

/**
 * Describes the message teleport.accesslist.v1.DeleteAllAccessListsRequest.
 * Use `create(DeleteAllAccessListsRequestSchema)` to create a new message.
 */
export const DeleteAllAccessListsRequestSchema: GenMessage<DeleteAllAccessListsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 8);

/**
 * GetAccessListsToReviewRequest is the request for getting access lists that
 * the current user needs to review.
 *
 * @generated from message teleport.accesslist.v1.GetAccessListsToReviewRequest
 */
export type GetAccessListsToReviewRequest = Message<"teleport.accesslist.v1.GetAccessListsToReviewRequest"> & {
};

/**
 * Describes the message teleport.accesslist.v1.GetAccessListsToReviewRequest.
 * Use `create(GetAccessListsToReviewRequestSchema)` to create a new message.
 */
export const GetAccessListsToReviewRequestSchema: GenMessage<GetAccessListsToReviewRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 9);

/**
 * GetAccessListsToReviewResponse is the response for getting access lists that
 * the current user needs to review.
 *
 * @generated from message teleport.accesslist.v1.GetAccessListsToReviewResponse
 */
export type GetAccessListsToReviewResponse = Message<"teleport.accesslist.v1.GetAccessListsToReviewResponse"> & {
  /**
   * @generated from field: repeated teleport.accesslist.v1.AccessList access_lists = 1;
   */
  accessLists: AccessList[];
};

/**
 * Describes the message teleport.accesslist.v1.GetAccessListsToReviewResponse.
 * Use `create(GetAccessListsToReviewResponseSchema)` to create a new message.
 */
export const GetAccessListsToReviewResponseSchema: GenMessage<GetAccessListsToReviewResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 10);

/**
 * CountAccessListMembersRequest is the request for counting access list
 * members.
 *
 * @generated from message teleport.accesslist.v1.CountAccessListMembersRequest
 */
export type CountAccessListMembersRequest = Message<"teleport.accesslist.v1.CountAccessListMembersRequest"> & {
  /**
   * access_list_name is the name of the access list to retrieve.
   *
   * @generated from field: string access_list_name = 1;
   */
  accessListName: string;
};

/**
 * Describes the message teleport.accesslist.v1.CountAccessListMembersRequest.
 * Use `create(CountAccessListMembersRequestSchema)` to create a new message.
 */
export const CountAccessListMembersRequestSchema: GenMessage<CountAccessListMembersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 11);

/**
 * CountAccessListMembersResponse is the response for counting access list
 * members.
 *
 * @generated from message teleport.accesslist.v1.CountAccessListMembersResponse
 */
export type CountAccessListMembersResponse = Message<"teleport.accesslist.v1.CountAccessListMembersResponse"> & {
  /**
   * count is the number of access list members in the access list.
   *
   * @generated from field: uint32 count = 1;
   */
  count: number;
};

/**
 * Describes the message teleport.accesslist.v1.CountAccessListMembersResponse.
 * Use `create(CountAccessListMembersResponseSchema)` to create a new message.
 */
export const CountAccessListMembersResponseSchema: GenMessage<CountAccessListMembersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 12);

/**
 * ListAccessListMembersRequest is the request for getting paginated access list
 * members.
 *
 * @generated from message teleport.accesslist.v1.ListAccessListMembersRequest
 */
export type ListAccessListMembersRequest = Message<"teleport.accesslist.v1.ListAccessListMembersRequest"> & {
  /**
   * page_size is the size of the page to request.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * page_token is the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * access_list is the name of the access list that the member belongs to.
   *
   * @generated from field: string access_list = 3;
   */
  accessList: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAccessListMembersRequest.
 * Use `create(ListAccessListMembersRequestSchema)` to create a new message.
 */
export const ListAccessListMembersRequestSchema: GenMessage<ListAccessListMembersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 13);

/**
 * ListAccessListMembersResponse is the response for getting paginated access
 * list members.
 *
 * @generated from message teleport.accesslist.v1.ListAccessListMembersResponse
 */
export type ListAccessListMembersResponse = Message<"teleport.accesslist.v1.ListAccessListMembersResponse"> & {
  /**
   * members is the list of access list members.
   *
   * @generated from field: repeated teleport.accesslist.v1.Member members = 1;
   */
  members: Member[];

  /**
   * next_page_token is the next page token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAccessListMembersResponse.
 * Use `create(ListAccessListMembersResponseSchema)` to create a new message.
 */
export const ListAccessListMembersResponseSchema: GenMessage<ListAccessListMembersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 14);

/**
 * ListAllAccessListMembersRequest is the request for getting paginated access
 * list members for all access lists.
 *
 * @generated from message teleport.accesslist.v1.ListAllAccessListMembersRequest
 */
export type ListAllAccessListMembersRequest = Message<"teleport.accesslist.v1.ListAllAccessListMembersRequest"> & {
  /**
   * page_size is the size of the page to request.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * page_token is the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAllAccessListMembersRequest.
 * Use `create(ListAllAccessListMembersRequestSchema)` to create a new message.
 */
export const ListAllAccessListMembersRequestSchema: GenMessage<ListAllAccessListMembersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 15);

/**
 * ListAllAccessListMembersResponse is the response for getting paginated access
 * list members for all access lists.
 *
 * @generated from message teleport.accesslist.v1.ListAllAccessListMembersResponse
 */
export type ListAllAccessListMembersResponse = Message<"teleport.accesslist.v1.ListAllAccessListMembersResponse"> & {
  /**
   * members is the list of access list members.
   *
   * @generated from field: repeated teleport.accesslist.v1.Member members = 1;
   */
  members: Member[];

  /**
   * next_page_token is the next page token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAllAccessListMembersResponse.
 * Use `create(ListAllAccessListMembersResponseSchema)` to create a new message.
 */
export const ListAllAccessListMembersResponseSchema: GenMessage<ListAllAccessListMembersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 16);

/**
 * UpsertAccessListWithMembers is the request for upserting an access list with
 * members.
 *
 * @generated from message teleport.accesslist.v1.UpsertAccessListWithMembersRequest
 */
export type UpsertAccessListWithMembersRequest = Message<"teleport.accesslist.v1.UpsertAccessListWithMembersRequest"> & {
  /**
   * access_list is the access list to upsert.
   *
   * @generated from field: teleport.accesslist.v1.AccessList access_list = 1;
   */
  accessList?: AccessList;

  /**
   * members is the list of access list members.
   *
   * @generated from field: repeated teleport.accesslist.v1.Member members = 2;
   */
  members: Member[];
};

/**
 * Describes the message teleport.accesslist.v1.UpsertAccessListWithMembersRequest.
 * Use `create(UpsertAccessListWithMembersRequestSchema)` to create a new message.
 */
export const UpsertAccessListWithMembersRequestSchema: GenMessage<UpsertAccessListWithMembersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 17);

/**
 * UpsertAccessListWithMembersResponse is the response for upserting an access
 * list with members.
 *
 * @generated from message teleport.accesslist.v1.UpsertAccessListWithMembersResponse
 */
export type UpsertAccessListWithMembersResponse = Message<"teleport.accesslist.v1.UpsertAccessListWithMembersResponse"> & {
  /**
   * access_list is the access list that was upserted.
   *
   * @generated from field: teleport.accesslist.v1.AccessList access_list = 1;
   */
  accessList?: AccessList;

  /**
   * members is the list of access list members that were upserted.
   *
   * @generated from field: repeated teleport.accesslist.v1.Member members = 2;
   */
  members: Member[];
};

/**
 * Describes the message teleport.accesslist.v1.UpsertAccessListWithMembersResponse.
 * Use `create(UpsertAccessListWithMembersResponseSchema)` to create a new message.
 */
export const UpsertAccessListWithMembersResponseSchema: GenMessage<UpsertAccessListWithMembersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 18);

/**
 * GetAccessListMemberRequest is the request for retrieving an access list
 * member.
 *
 * @generated from message teleport.accesslist.v1.GetAccessListMemberRequest
 */
export type GetAccessListMemberRequest = Message<"teleport.accesslist.v1.GetAccessListMemberRequest"> & {
  /**
   * access_list is the name of the access list that the member belongs to.
   *
   * @generated from field: string access_list = 1;
   */
  accessList: string;

  /**
   * member_name is the name of the user that belongs to the access list.
   *
   * @generated from field: string member_name = 2;
   */
  memberName: string;
};

/**
 * Describes the message teleport.accesslist.v1.GetAccessListMemberRequest.
 * Use `create(GetAccessListMemberRequestSchema)` to create a new message.
 */
export const GetAccessListMemberRequestSchema: GenMessage<GetAccessListMemberRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 19);

/**
 * UpsertAccessListMemberRequest is the request for upserting an access list
 * member.
 *
 * @generated from message teleport.accesslist.v1.UpsertAccessListMemberRequest
 */
export type UpsertAccessListMemberRequest = Message<"teleport.accesslist.v1.UpsertAccessListMemberRequest"> & {
  /**
   * member is the access list member to upsert.
   *
   * @generated from field: teleport.accesslist.v1.Member member = 4;
   */
  member?: Member;
};

/**
 * Describes the message teleport.accesslist.v1.UpsertAccessListMemberRequest.
 * Use `create(UpsertAccessListMemberRequestSchema)` to create a new message.
 */
export const UpsertAccessListMemberRequestSchema: GenMessage<UpsertAccessListMemberRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 20);

/**
 * UpdateAccessListMemberRequest is the request for updating an access list
 * member.
 *
 * @generated from message teleport.accesslist.v1.UpdateAccessListMemberRequest
 */
export type UpdateAccessListMemberRequest = Message<"teleport.accesslist.v1.UpdateAccessListMemberRequest"> & {
  /**
   * member is the access list member to upsert.
   *
   * @generated from field: teleport.accesslist.v1.Member member = 1;
   */
  member?: Member;
};

/**
 * Describes the message teleport.accesslist.v1.UpdateAccessListMemberRequest.
 * Use `create(UpdateAccessListMemberRequestSchema)` to create a new message.
 */
export const UpdateAccessListMemberRequestSchema: GenMessage<UpdateAccessListMemberRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 21);

/**
 * DeleteAccessListMemberRequest is the request for deleting a member from an
 * access list.
 *
 * @generated from message teleport.accesslist.v1.DeleteAccessListMemberRequest
 */
export type DeleteAccessListMemberRequest = Message<"teleport.accesslist.v1.DeleteAccessListMemberRequest"> & {
  /**
   * access_list is the name of access list.
   *
   * @generated from field: string access_list = 1;
   */
  accessList: string;

  /**
   * member_name is the name of the user to delete.
   *
   * @generated from field: string member_name = 3;
   */
  memberName: string;
};

/**
 * Describes the message teleport.accesslist.v1.DeleteAccessListMemberRequest.
 * Use `create(DeleteAccessListMemberRequestSchema)` to create a new message.
 */
export const DeleteAccessListMemberRequestSchema: GenMessage<DeleteAccessListMemberRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 22);

/**
 * DeleteAllAccessListMembersForAccessListRequest is the request for deleting
 * all members from an access list.
 *
 * @generated from message teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest
 */
export type DeleteAllAccessListMembersForAccessListRequest = Message<"teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest"> & {
  /**
   * access_list is the name of access list.
   *
   * @generated from field: string access_list = 1;
   */
  accessList: string;
};

/**
 * Describes the message teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.
 * Use `create(DeleteAllAccessListMembersForAccessListRequestSchema)` to create a new message.
 */
export const DeleteAllAccessListMembersForAccessListRequestSchema: GenMessage<DeleteAllAccessListMembersForAccessListRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 23);

/**
 * DeleteAllAccessListMembersRequest is the request for all access list members
 * in the backend.
 *
 * @generated from message teleport.accesslist.v1.DeleteAllAccessListMembersRequest
 */
export type DeleteAllAccessListMembersRequest = Message<"teleport.accesslist.v1.DeleteAllAccessListMembersRequest"> & {
};

/**
 * Describes the message teleport.accesslist.v1.DeleteAllAccessListMembersRequest.
 * Use `create(DeleteAllAccessListMembersRequestSchema)` to create a new message.
 */
export const DeleteAllAccessListMembersRequestSchema: GenMessage<DeleteAllAccessListMembersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 24);

/**
 * ListAccessListReviewsRequest is the request for getting paginated access list
 * reviews for a particular access list.
 *
 * @generated from message teleport.accesslist.v1.ListAccessListReviewsRequest
 */
export type ListAccessListReviewsRequest = Message<"teleport.accesslist.v1.ListAccessListReviewsRequest"> & {
  /**
   * access_list is the name of the access list that we're listing reviews for.
   *
   * @generated from field: string access_list = 1;
   */
  accessList: string;

  /**
   * page_size is the size of the page to request.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * next_token is the page token.
   *
   * @generated from field: string next_token = 3;
   */
  nextToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAccessListReviewsRequest.
 * Use `create(ListAccessListReviewsRequestSchema)` to create a new message.
 */
export const ListAccessListReviewsRequestSchema: GenMessage<ListAccessListReviewsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 25);

/**
 * ListAccessListReviewsResponse is the response for getting paginated access
 * list reviews for a particular access list.
 *
 * @generated from message teleport.accesslist.v1.ListAccessListReviewsResponse
 */
export type ListAccessListReviewsResponse = Message<"teleport.accesslist.v1.ListAccessListReviewsResponse"> & {
  /**
   * reviews is the list of access list reviews.
   *
   * @generated from field: repeated teleport.accesslist.v1.Review reviews = 1;
   */
  reviews: Review[];

  /**
   * next_token is the next page token.
   *
   * @generated from field: string next_token = 2;
   */
  nextToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAccessListReviewsResponse.
 * Use `create(ListAccessListReviewsResponseSchema)` to create a new message.
 */
export const ListAccessListReviewsResponseSchema: GenMessage<ListAccessListReviewsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 26);

/**
 * ListAllAccessListReviewsRequest is the request for getting paginated access
 * list reviews for all access lists.
 *
 * @generated from message teleport.accesslist.v1.ListAllAccessListReviewsRequest
 */
export type ListAllAccessListReviewsRequest = Message<"teleport.accesslist.v1.ListAllAccessListReviewsRequest"> & {
  /**
   * page_size is the size of the page to request.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * next_token is the page token.
   *
   * @generated from field: string next_token = 2;
   */
  nextToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAllAccessListReviewsRequest.
 * Use `create(ListAllAccessListReviewsRequestSchema)` to create a new message.
 */
export const ListAllAccessListReviewsRequestSchema: GenMessage<ListAllAccessListReviewsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 27);

/**
 * ListAllAccessListReviewsResponse is the response for getting paginated access
 * list reviews for all access lists.
 *
 * @generated from message teleport.accesslist.v1.ListAllAccessListReviewsResponse
 */
export type ListAllAccessListReviewsResponse = Message<"teleport.accesslist.v1.ListAllAccessListReviewsResponse"> & {
  /**
   * reviews is the list of access list reviews.
   *
   * @generated from field: repeated teleport.accesslist.v1.Review reviews = 1;
   */
  reviews: Review[];

  /**
   * next_token is the next page token.
   *
   * @generated from field: string next_token = 2;
   */
  nextToken: string;
};

/**
 * Describes the message teleport.accesslist.v1.ListAllAccessListReviewsResponse.
 * Use `create(ListAllAccessListReviewsResponseSchema)` to create a new message.
 */
export const ListAllAccessListReviewsResponseSchema: GenMessage<ListAllAccessListReviewsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 28);

/**
 * CreateAccessListReviewRequest is the request for creating an access list
 * review.
 *
 * @generated from message teleport.accesslist.v1.CreateAccessListReviewRequest
 */
export type CreateAccessListReviewRequest = Message<"teleport.accesslist.v1.CreateAccessListReviewRequest"> & {
  /**
   * review is the actual review to create.
   *
   * @generated from field: teleport.accesslist.v1.Review review = 1;
   */
  review?: Review;
};

/**
 * Describes the message teleport.accesslist.v1.CreateAccessListReviewRequest.
 * Use `create(CreateAccessListReviewRequestSchema)` to create a new message.
 */
export const CreateAccessListReviewRequestSchema: GenMessage<CreateAccessListReviewRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 29);

/**
 * CreateAccessListReviewResponse is the response for creating an access list
 * review.
 *
 * @generated from message teleport.accesslist.v1.CreateAccessListReviewResponse
 */
export type CreateAccessListReviewResponse = Message<"teleport.accesslist.v1.CreateAccessListReviewResponse"> & {
  /**
   * review_name is the name of the review that was just created.
   *
   * @generated from field: string review_name = 1;
   */
  reviewName: string;

  /**
   * next_audit_date is when the next audit should be done by.
   *
   * @generated from field: google.protobuf.Timestamp next_audit_date = 2;
   */
  nextAuditDate?: Timestamp;
};

/**
 * Describes the message teleport.accesslist.v1.CreateAccessListReviewResponse.
 * Use `create(CreateAccessListReviewResponseSchema)` to create a new message.
 */
export const CreateAccessListReviewResponseSchema: GenMessage<CreateAccessListReviewResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 30);

/**
 * DeleteAccessListReviewRequest is the request for deleting an access list
 * review.
 *
 * @generated from message teleport.accesslist.v1.DeleteAccessListReviewRequest
 */
export type DeleteAccessListReviewRequest = Message<"teleport.accesslist.v1.DeleteAccessListReviewRequest"> & {
  /**
   * review_name is the name of the review to delete.
   *
   * @generated from field: string review_name = 1;
   */
  reviewName: string;

  /**
   * access_list_name is the name of the access list to delete the review from.
   *
   * @generated from field: string access_list_name = 2;
   */
  accessListName: string;
};

/**
 * Describes the message teleport.accesslist.v1.DeleteAccessListReviewRequest.
 * Use `create(DeleteAccessListReviewRequestSchema)` to create a new message.
 */
export const DeleteAccessListReviewRequestSchema: GenMessage<DeleteAccessListReviewRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 31);

/**
 * AccessRequestPromoteRequest is the request for promoting an access request to
 * an access list.
 *
 * @generated from message teleport.accesslist.v1.AccessRequestPromoteRequest
 */
export type AccessRequestPromoteRequest = Message<"teleport.accesslist.v1.AccessRequestPromoteRequest"> & {
  /**
   * RequestID is the unique ID of the request to be promoted.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * AccessListName is the name of the access list to promote the request to.
   *
   * @generated from field: string access_list_name = 2;
   */
  accessListName: string;

  /**
   * Reason is the access request review reason.
   *
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message teleport.accesslist.v1.AccessRequestPromoteRequest.
 * Use `create(AccessRequestPromoteRequestSchema)` to create a new message.
 */
export const AccessRequestPromoteRequestSchema: GenMessage<AccessRequestPromoteRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 32);

/**
 * AccessRequestPromoteResponse is the response for promoting an access request
 * to an access list.
 *
 * @generated from message teleport.accesslist.v1.AccessRequestPromoteResponse
 */
export type AccessRequestPromoteResponse = Message<"teleport.accesslist.v1.AccessRequestPromoteResponse"> & {
  /**
   * AccessRequest is the updated access request.
   *
   * @generated from field: types.AccessRequestV3 access_request = 1;
   */
  accessRequest?: AccessRequestV3;
};

/**
 * Describes the message teleport.accesslist.v1.AccessRequestPromoteResponse.
 * Use `create(AccessRequestPromoteResponseSchema)` to create a new message.
 */
export const AccessRequestPromoteResponseSchema: GenMessage<AccessRequestPromoteResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 33);

/**
 * GetSuggestedAccessListsRequest is the request for suggested access lists for
 * an access request.
 *
 * @generated from message teleport.accesslist.v1.GetSuggestedAccessListsRequest
 */
export type GetSuggestedAccessListsRequest = Message<"teleport.accesslist.v1.GetSuggestedAccessListsRequest"> & {
  /**
   * access_request_id is the unique ID of the request.
   *
   * @generated from field: string access_request_id = 1;
   */
  accessRequestId: string;
};

/**
 * Describes the message teleport.accesslist.v1.GetSuggestedAccessListsRequest.
 * Use `create(GetSuggestedAccessListsRequestSchema)` to create a new message.
 */
export const GetSuggestedAccessListsRequestSchema: GenMessage<GetSuggestedAccessListsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 34);

/**
 * GetSuggestedAccessListsResponse is the response for suggested access lists
 * for an access request.
 *
 * @generated from message teleport.accesslist.v1.GetSuggestedAccessListsResponse
 */
export type GetSuggestedAccessListsResponse = Message<"teleport.accesslist.v1.GetSuggestedAccessListsResponse"> & {
  /**
   * access_lists is the list of suggested lists.
   *
   * @generated from field: repeated teleport.accesslist.v1.AccessList access_lists = 1;
   */
  accessLists: AccessList[];
};

/**
 * Describes the message teleport.accesslist.v1.GetSuggestedAccessListsResponse.
 * Use `create(GetSuggestedAccessListsResponseSchema)` to create a new message.
 */
export const GetSuggestedAccessListsResponseSchema: GenMessage<GetSuggestedAccessListsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_accesslist_v1_accesslist_service, 35);

/**
 * AccessListService provides CRUD methods for Access List resources.
 *
 * @generated from service teleport.accesslist.v1.AccessListService
 */
export const AccessListService: GenService<{
  /**
   * GetAccessLists returns a list of all access lists.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessLists
   */
  getAccessLists: {
    methodKind: "unary";
    input: typeof GetAccessListsRequestSchema;
    output: typeof GetAccessListsResponseSchema;
  },
  /**
   * ListAccessLists returns a paginated list of all access lists.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.ListAccessLists
   */
  listAccessLists: {
    methodKind: "unary";
    input: typeof ListAccessListsRequestSchema;
    output: typeof ListAccessListsResponseSchema;
  },
  /**
   * GetAccessList returns the specified access list resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessList
   */
  getAccessList: {
    methodKind: "unary";
    input: typeof GetAccessListRequestSchema;
    output: typeof AccessListSchema;
  },
  /**
   * UpsertAccessList creates or updates an access list resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.UpsertAccessList
   */
  upsertAccessList: {
    methodKind: "unary";
    input: typeof UpsertAccessListRequestSchema;
    output: typeof AccessListSchema;
  },
  /**
   * UpdateAccessList updates an access list resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.UpdateAccessList
   */
  updateAccessList: {
    methodKind: "unary";
    input: typeof UpdateAccessListRequestSchema;
    output: typeof AccessListSchema;
  },
  /**
   * DeleteAccessList hard deletes the specified access list resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAccessList
   */
  deleteAccessList: {
    methodKind: "unary";
    input: typeof DeleteAccessListRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * DeleteAllAccessLists hard deletes all access lists.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAllAccessLists
   */
  deleteAllAccessLists: {
    methodKind: "unary";
    input: typeof DeleteAllAccessListsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * GetAccessListsToReview will return access lists that need to be reviewed by
   * the current user.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessListsToReview
   */
  getAccessListsToReview: {
    methodKind: "unary";
    input: typeof GetAccessListsToReviewRequestSchema;
    output: typeof GetAccessListsToReviewResponseSchema;
  },
  /**
   * CountAccessListMembers returns the count of access list members in an
   * access list.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.CountAccessListMembers
   */
  countAccessListMembers: {
    methodKind: "unary";
    input: typeof CountAccessListMembersRequestSchema;
    output: typeof CountAccessListMembersResponseSchema;
  },
  /**
   * ListAccessListMembers returns a paginated list of all access list members.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.ListAccessListMembers
   */
  listAccessListMembers: {
    methodKind: "unary";
    input: typeof ListAccessListMembersRequestSchema;
    output: typeof ListAccessListMembersResponseSchema;
  },
  /**
   * ListAllAccessListMembers returns a paginated list of all access list
   * members for all access lists.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.ListAllAccessListMembers
   */
  listAllAccessListMembers: {
    methodKind: "unary";
    input: typeof ListAllAccessListMembersRequestSchema;
    output: typeof ListAllAccessListMembersResponseSchema;
  },
  /**
   * GetAccessListMember returns the specified access list member resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.GetAccessListMember
   */
  getAccessListMember: {
    methodKind: "unary";
    input: typeof GetAccessListMemberRequestSchema;
    output: typeof MemberSchema;
  },
  /**
   * UpsertAccessListMember creates or updates an access list member resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.UpsertAccessListMember
   */
  upsertAccessListMember: {
    methodKind: "unary";
    input: typeof UpsertAccessListMemberRequestSchema;
    output: typeof MemberSchema;
  },
  /**
   * UpdateAccessListMember conditionally updates an access list member resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.UpdateAccessListMember
   */
  updateAccessListMember: {
    methodKind: "unary";
    input: typeof UpdateAccessListMemberRequestSchema;
    output: typeof MemberSchema;
  },
  /**
   * DeleteAccessListMember hard deletes the specified access list member
   * resource.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAccessListMember
   */
  deleteAccessListMember: {
    methodKind: "unary";
    input: typeof DeleteAccessListMemberRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * DeleteAllAccessListMembers hard deletes all access list members for an
   * access list.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAllAccessListMembersForAccessList
   */
  deleteAllAccessListMembersForAccessList: {
    methodKind: "unary";
    input: typeof DeleteAllAccessListMembersForAccessListRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * DeleteAllAccessListMembers hard deletes all access list members for an
   * access list.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAllAccessListMembers
   */
  deleteAllAccessListMembers: {
    methodKind: "unary";
    input: typeof DeleteAllAccessListMembersRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * UpsertAccessListWithMembers creates or updates an access list with members.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.UpsertAccessListWithMembers
   */
  upsertAccessListWithMembers: {
    methodKind: "unary";
    input: typeof UpsertAccessListWithMembersRequestSchema;
    output: typeof UpsertAccessListWithMembersResponseSchema;
  },
  /**
   * ListAccessListReviews will list access list reviews for a particular access
   * list.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.ListAccessListReviews
   */
  listAccessListReviews: {
    methodKind: "unary";
    input: typeof ListAccessListReviewsRequestSchema;
    output: typeof ListAccessListReviewsResponseSchema;
  },
  /**
   * ListAllAccessListReviews will list access list reviews for all access
   * lists.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.ListAllAccessListReviews
   */
  listAllAccessListReviews: {
    methodKind: "unary";
    input: typeof ListAllAccessListReviewsRequestSchema;
    output: typeof ListAllAccessListReviewsResponseSchema;
  },
  /**
   * CreateAccessListReview will create a new review for an access list. It will
   * also modify the original access list and its members depending on the
   * details of the review.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.CreateAccessListReview
   */
  createAccessListReview: {
    methodKind: "unary";
    input: typeof CreateAccessListReviewRequestSchema;
    output: typeof CreateAccessListReviewResponseSchema;
  },
  /**
   * DeleteAccessListReview will delete an access list review from the backend.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.DeleteAccessListReview
   */
  deleteAccessListReview: {
    methodKind: "unary";
    input: typeof DeleteAccessListReviewRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * AccessRequestPromote promotes an access request to an access list.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.AccessRequestPromote
   */
  accessRequestPromote: {
    methodKind: "unary";
    input: typeof AccessRequestPromoteRequestSchema;
    output: typeof AccessRequestPromoteResponseSchema;
  },
  /**
   * GetSuggestedAccessLists returns suggested access lists for an access
   * request.
   *
   * @generated from rpc teleport.accesslist.v1.AccessListService.GetSuggestedAccessLists
   */
  getSuggestedAccessLists: {
    methodKind: "unary";
    input: typeof GetSuggestedAccessListsRequestSchema;
    output: typeof GetSuggestedAccessListsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_accesslist_v1_accesslist_service, 0);

