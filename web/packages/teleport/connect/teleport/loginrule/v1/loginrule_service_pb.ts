// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/loginrule/v1/loginrule_service.proto (package teleport.loginrule.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { StringValues } from "../../legacy/types/wrappers/wrappers_pb";
import { file_teleport_legacy_types_wrappers_wrappers } from "../../legacy/types/wrappers/wrappers_pb";
import type { LoginRule, LoginRuleSchema } from "./loginrule_pb";
import { file_teleport_loginrule_v1_loginrule } from "./loginrule_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/loginrule/v1/loginrule_service.proto.
 */
export const file_teleport_loginrule_v1_loginrule_service: GenFile = /*@__PURE__*/
  fileDesc("Ci10ZWxlcG9ydC9sb2dpbnJ1bGUvdjEvbG9naW5ydWxlX3NlcnZpY2UucHJvdG8SFXRlbGVwb3J0LmxvZ2lucnVsZS52MSJOChZDcmVhdGVMb2dpblJ1bGVSZXF1ZXN0EjQKCmxvZ2luX3J1bGUYASABKAsyIC50ZWxlcG9ydC5sb2dpbnJ1bGUudjEuTG9naW5SdWxlIk4KFlVwc2VydExvZ2luUnVsZVJlcXVlc3QSNAoKbG9naW5fcnVsZRgBIAEoCzIgLnRlbGVwb3J0LmxvZ2lucnVsZS52MS5Mb2dpblJ1bGUiIwoTR2V0TG9naW5SdWxlUmVxdWVzdBIMCgRuYW1lGAEgASgJIj4KFUxpc3RMb2dpblJ1bGVzUmVxdWVzdBIRCglwYWdlX3NpemUYASABKAUSEgoKcGFnZV90b2tlbhgCIAEoCSJoChZMaXN0TG9naW5SdWxlc1Jlc3BvbnNlEjUKC2xvZ2luX3J1bGVzGAEgAygLMiAudGVsZXBvcnQubG9naW5ydWxlLnYxLkxvZ2luUnVsZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiJgoWRGVsZXRlTG9naW5SdWxlUmVxdWVzdBIMCgRuYW1lGAEgASgJIvgBChRUZXN0TG9naW5SdWxlUmVxdWVzdBI1Cgtsb2dpbl9ydWxlcxgBIAMoCzIgLnRlbGVwb3J0LmxvZ2lucnVsZS52MS5Mb2dpblJ1bGUSRwoGdHJhaXRzGAQgAygLMjcudGVsZXBvcnQubG9naW5ydWxlLnYxLlRlc3RMb2dpblJ1bGVSZXF1ZXN0LlRyYWl0c0VudHJ5EhkKEWxvYWRfZnJvbV9jbHVzdGVyGAMgASgIGkUKC1RyYWl0c0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIWLndyYXBwZXJzLlN0cmluZ1ZhbHVlczoCOAEiqAEKFVRlc3RMb2dpblJ1bGVSZXNwb25zZRJICgZ0cmFpdHMYBCADKAsyOC50ZWxlcG9ydC5sb2dpbnJ1bGUudjEuVGVzdExvZ2luUnVsZVJlc3BvbnNlLlRyYWl0c0VudHJ5GkUKC1RyYWl0c0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIWLndyYXBwZXJzLlN0cmluZ1ZhbHVlczoCOAEy7QQKEExvZ2luUnVsZVNlcnZpY2USYgoPQ3JlYXRlTG9naW5SdWxlEi0udGVsZXBvcnQubG9naW5ydWxlLnYxLkNyZWF0ZUxvZ2luUnVsZVJlcXVlc3QaIC50ZWxlcG9ydC5sb2dpbnJ1bGUudjEuTG9naW5SdWxlEmIKD1Vwc2VydExvZ2luUnVsZRItLnRlbGVwb3J0LmxvZ2lucnVsZS52MS5VcHNlcnRMb2dpblJ1bGVSZXF1ZXN0GiAudGVsZXBvcnQubG9naW5ydWxlLnYxLkxvZ2luUnVsZRJcCgxHZXRMb2dpblJ1bGUSKi50ZWxlcG9ydC5sb2dpbnJ1bGUudjEuR2V0TG9naW5SdWxlUmVxdWVzdBogLnRlbGVwb3J0LmxvZ2lucnVsZS52MS5Mb2dpblJ1bGUSbQoOTGlzdExvZ2luUnVsZXMSLC50ZWxlcG9ydC5sb2dpbnJ1bGUudjEuTGlzdExvZ2luUnVsZXNSZXF1ZXN0Gi0udGVsZXBvcnQubG9naW5ydWxlLnYxLkxpc3RMb2dpblJ1bGVzUmVzcG9uc2USWAoPRGVsZXRlTG9naW5SdWxlEi0udGVsZXBvcnQubG9naW5ydWxlLnYxLkRlbGV0ZUxvZ2luUnVsZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSagoNVGVzdExvZ2luUnVsZRIrLnRlbGVwb3J0LmxvZ2lucnVsZS52MS5UZXN0TG9naW5SdWxlUmVxdWVzdBosLnRlbGVwb3J0LmxvZ2lucnVsZS52MS5UZXN0TG9naW5SdWxlUmVzcG9uc2VCVlpUZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvbG9naW5ydWxlL3YxO2xvZ2lucnVsZXYxYgZwcm90bzM", [file_google_protobuf_empty, file_teleport_legacy_types_wrappers_wrappers, file_teleport_loginrule_v1_loginrule]);

/**
 * CreateLoginRuleRequest is a request to create a login rule.
 *
 * @generated from message teleport.loginrule.v1.CreateLoginRuleRequest
 */
export type CreateLoginRuleRequest = Message<"teleport.loginrule.v1.CreateLoginRuleRequest"> & {
  /**
   * LoginRule is the login rule to be created.
   *
   * @generated from field: teleport.loginrule.v1.LoginRule login_rule = 1;
   */
  loginRule?: LoginRule;
};

/**
 * Describes the message teleport.loginrule.v1.CreateLoginRuleRequest.
 * Use `create(CreateLoginRuleRequestSchema)` to create a new message.
 */
export const CreateLoginRuleRequestSchema: GenMessage<CreateLoginRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 0);

/**
 * UpsertLoginRuleRequest is a request to upsert a login rule.
 *
 * @generated from message teleport.loginrule.v1.UpsertLoginRuleRequest
 */
export type UpsertLoginRuleRequest = Message<"teleport.loginrule.v1.UpsertLoginRuleRequest"> & {
  /**
   * LoginRule is the login rule to be created.
   *
   * @generated from field: teleport.loginrule.v1.LoginRule login_rule = 1;
   */
  loginRule?: LoginRule;
};

/**
 * Describes the message teleport.loginrule.v1.UpsertLoginRuleRequest.
 * Use `create(UpsertLoginRuleRequestSchema)` to create a new message.
 */
export const UpsertLoginRuleRequestSchema: GenMessage<UpsertLoginRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 1);

/**
 * GetLoginRuleRequest is a request to get a single login rule.
 *
 * @generated from message teleport.loginrule.v1.GetLoginRuleRequest
 */
export type GetLoginRuleRequest = Message<"teleport.loginrule.v1.GetLoginRuleRequest"> & {
  /**
   * Name is the name of the login rule to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.loginrule.v1.GetLoginRuleRequest.
 * Use `create(GetLoginRuleRequestSchema)` to create a new message.
 */
export const GetLoginRuleRequestSchema: GenMessage<GetLoginRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 2);

/**
 * ListLoginRulesRequest is a paginated request to list all login rules.
 *
 * @generated from message teleport.loginrule.v1.ListLoginRulesRequest
 */
export type ListLoginRulesRequest = Message<"teleport.loginrule.v1.ListLoginRulesRequest"> & {
  /**
   * PageSize is The maximum number of login rules to return in a single
   * reponse.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * PageToken is the NextPageToken value returned from a previous
   * ListLoginRules request, if any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.loginrule.v1.ListLoginRulesRequest.
 * Use `create(ListLoginRulesRequestSchema)` to create a new message.
 */
export const ListLoginRulesRequestSchema: GenMessage<ListLoginRulesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 3);

/**
 * ListLoginRulesResponse is a paginated response to a ListLoginRulesRequest.
 *
 * @generated from message teleport.loginrule.v1.ListLoginRulesResponse
 */
export type ListLoginRulesResponse = Message<"teleport.loginrule.v1.ListLoginRulesResponse"> & {
  /**
   * LoginRules is the list of login rules.
   *
   * @generated from field: repeated teleport.loginrule.v1.LoginRule login_rules = 1;
   */
  loginRules: LoginRule[];

  /**
   * NextPageToken is a token to retrieve the next page of results, or empty
   * if there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.loginrule.v1.ListLoginRulesResponse.
 * Use `create(ListLoginRulesResponseSchema)` to create a new message.
 */
export const ListLoginRulesResponseSchema: GenMessage<ListLoginRulesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 4);

/**
 * DeleteLoginRuleRequest is a request to delete a login rule.
 *
 * @generated from message teleport.loginrule.v1.DeleteLoginRuleRequest
 */
export type DeleteLoginRuleRequest = Message<"teleport.loginrule.v1.DeleteLoginRuleRequest"> & {
  /**
   * Name is the name of the login rule to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.loginrule.v1.DeleteLoginRuleRequest.
 * Use `create(DeleteLoginRuleRequestSchema)` to create a new message.
 */
export const DeleteLoginRuleRequestSchema: GenMessage<DeleteLoginRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 5);

/**
 * TestLoginRuleRequest is a request to test a login rule against traits.
 *
 * @generated from message teleport.loginrule.v1.TestLoginRuleRequest
 */
export type TestLoginRuleRequest = Message<"teleport.loginrule.v1.TestLoginRuleRequest"> & {
  /**
   * LoginRules is the list of the rules to evaluate.
   *
   * @generated from field: repeated teleport.loginrule.v1.LoginRule login_rules = 1;
   */
  loginRules: LoginRule[];

  /**
   * Traits are the user traits to test the login rule against.
   *
   * @generated from field: map<string, wrappers.StringValues> traits = 4;
   */
  traits: { [key: string]: StringValues };

  /**
   * LoadFromCluster indicates if existing login rules should be included
   * when evaluating rules.
   *
   * @generated from field: bool load_from_cluster = 3;
   */
  loadFromCluster: boolean;
};

/**
 * Describes the message teleport.loginrule.v1.TestLoginRuleRequest.
 * Use `create(TestLoginRuleRequestSchema)` to create a new message.
 */
export const TestLoginRuleRequestSchema: GenMessage<TestLoginRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 6);

/**
 * TestLoginRuleResponse is a response to a login rule test.
 *
 * @generated from message teleport.loginrule.v1.TestLoginRuleResponse
 */
export type TestLoginRuleResponse = Message<"teleport.loginrule.v1.TestLoginRuleResponse"> & {
  /**
   * Traits contain the output from evaluating the login rules.
   *
   * @generated from field: map<string, wrappers.StringValues> traits = 4;
   */
  traits: { [key: string]: StringValues };
};

/**
 * Describes the message teleport.loginrule.v1.TestLoginRuleResponse.
 * Use `create(TestLoginRuleResponseSchema)` to create a new message.
 */
export const TestLoginRuleResponseSchema: GenMessage<TestLoginRuleResponse> = /*@__PURE__*/
  messageDesc(file_teleport_loginrule_v1_loginrule_service, 7);

/**
 * LoginRuleService provides CRUD methods for the LoginRule resource.
 *
 * @generated from service teleport.loginrule.v1.LoginRuleService
 */
export const LoginRuleService: GenService<{
  /**
   * CreateLoginRule creates a login rule if one with the same name does not
   * already exist, else it returns an error.
   *
   * @generated from rpc teleport.loginrule.v1.LoginRuleService.CreateLoginRule
   */
  createLoginRule: {
    methodKind: "unary";
    input: typeof CreateLoginRuleRequestSchema;
    output: typeof LoginRuleSchema;
  },
  /**
   * UpsertLoginRule creates a login rule if one with the same name does not
   * already exist, else it replaces the existing login rule.
   *
   * @generated from rpc teleport.loginrule.v1.LoginRuleService.UpsertLoginRule
   */
  upsertLoginRule: {
    methodKind: "unary";
    input: typeof UpsertLoginRuleRequestSchema;
    output: typeof LoginRuleSchema;
  },
  /**
   * GetLoginRule retrieves a login rule described by the given request.
   *
   * @generated from rpc teleport.loginrule.v1.LoginRuleService.GetLoginRule
   */
  getLoginRule: {
    methodKind: "unary";
    input: typeof GetLoginRuleRequestSchema;
    output: typeof LoginRuleSchema;
  },
  /**
   * ListLoginRules lists all login rules.
   *
   * @generated from rpc teleport.loginrule.v1.LoginRuleService.ListLoginRules
   */
  listLoginRules: {
    methodKind: "unary";
    input: typeof ListLoginRulesRequestSchema;
    output: typeof ListLoginRulesResponseSchema;
  },
  /**
   * DeleteLoginRule deletes an existing login rule.
   *
   * @generated from rpc teleport.loginrule.v1.LoginRuleService.DeleteLoginRule
   */
  deleteLoginRule: {
    methodKind: "unary";
    input: typeof DeleteLoginRuleRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * TestLoginRule evaluates login rules against provided user traits
   * to test that the output matches expectations prior to them being enforced and
   * potentially locking out users.
   *
   * @generated from rpc teleport.loginrule.v1.LoginRuleService.TestLoginRule
   */
  testLoginRule: {
    methodKind: "unary";
    input: typeof TestLoginRuleRequestSchema;
    output: typeof TestLoginRuleResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_loginrule_v1_loginrule_service, 0);

