// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/loginrule/v1/loginrule_service.proto (package teleport.loginrule.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateLoginRuleRequest, DeleteLoginRuleRequest, GetLoginRuleRequest, ListLoginRulesRequest, ListLoginRulesResponse, TestLoginRuleRequest, TestLoginRuleResponse, UpsertLoginRuleRequest } from "./loginrule_service_pb.js";
import { LoginRule } from "./loginrule_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * LoginRuleService provides CRUD methods for the LoginRule resource.
 *
 * @generated from service teleport.loginrule.v1.LoginRuleService
 */
export const LoginRuleService = {
  typeName: "teleport.loginrule.v1.LoginRuleService",
  methods: {
    /**
     * CreateLoginRule creates a login rule if one with the same name does not
     * already exist, else it returns an error.
     *
     * @generated from rpc teleport.loginrule.v1.LoginRuleService.CreateLoginRule
     */
    createLoginRule: {
      name: "CreateLoginRule",
      I: CreateLoginRuleRequest,
      O: LoginRule,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertLoginRule creates a login rule if one with the same name does not
     * already exist, else it replaces the existing login rule.
     *
     * @generated from rpc teleport.loginrule.v1.LoginRuleService.UpsertLoginRule
     */
    upsertLoginRule: {
      name: "UpsertLoginRule",
      I: UpsertLoginRuleRequest,
      O: LoginRule,
      kind: MethodKind.Unary,
    },
    /**
     * GetLoginRule retrieves a login rule described by the given request.
     *
     * @generated from rpc teleport.loginrule.v1.LoginRuleService.GetLoginRule
     */
    getLoginRule: {
      name: "GetLoginRule",
      I: GetLoginRuleRequest,
      O: LoginRule,
      kind: MethodKind.Unary,
    },
    /**
     * ListLoginRules lists all login rules.
     *
     * @generated from rpc teleport.loginrule.v1.LoginRuleService.ListLoginRules
     */
    listLoginRules: {
      name: "ListLoginRules",
      I: ListLoginRulesRequest,
      O: ListLoginRulesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteLoginRule deletes an existing login rule.
     *
     * @generated from rpc teleport.loginrule.v1.LoginRuleService.DeleteLoginRule
     */
    deleteLoginRule: {
      name: "DeleteLoginRule",
      I: DeleteLoginRuleRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * TestLoginRule evaluates login rules against provided user traits
     * to test that the output matches expectations prior to them being enforced and
     * potentially locking out users.
     *
     * @generated from rpc teleport.loginrule.v1.LoginRuleService.TestLoginRule
     */
    testLoginRule: {
      name: "TestLoginRule",
      I: TestLoginRuleRequest,
      O: TestLoginRuleResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

