// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/machineid/v1/federation.proto (package teleport.machineid.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Metadata } from "../../header/v1/metadata_pb";
import { file_teleport_header_v1_metadata } from "../../header/v1/metadata_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/machineid/v1/federation.proto.
 */
export const file_teleport_machineid_v1_federation: GenFile = /*@__PURE__*/
  fileDesc("CiZ0ZWxlcG9ydC9tYWNoaW5laWQvdjEvZmVkZXJhdGlvbi5wcm90bxIVdGVsZXBvcnQubWFjaGluZWlkLnYxIu0BChBTUElGRkVGZWRlcmF0aW9uEgwKBGtpbmQYASABKAkSEAoIc3ViX2tpbmQYAiABKAkSDwoHdmVyc2lvbhgDIAEoCRIuCghtZXRhZGF0YRgEIAEoCzIcLnRlbGVwb3J0LmhlYWRlci52MS5NZXRhZGF0YRI5CgRzcGVjGAUgASgLMisudGVsZXBvcnQubWFjaGluZWlkLnYxLlNQSUZGRUZlZGVyYXRpb25TcGVjEj0KBnN0YXR1cxgGIAEoCzItLnRlbGVwb3J0Lm1hY2hpbmVpZC52MS5TUElGRkVGZWRlcmF0aW9uU3RhdHVzIjQKIlNQSUZGRUZlZGVyYXRpb25CdW5kbGVTb3VyY2VTdGF0aWMSDgoGYnVuZGxlGAEgASgJIkMKJFNQSUZGRUZlZGVyYXRpb25CdW5kbGVTb3VyY2VIVFRQU1dlYhIbChNidW5kbGVfZW5kcG9pbnRfdXJsGAEgASgJIrkBChxTUElGRkVGZWRlcmF0aW9uQnVuZGxlU291cmNlEkkKBnN0YXRpYxgBIAEoCzI5LnRlbGVwb3J0Lm1hY2hpbmVpZC52MS5TUElGRkVGZWRlcmF0aW9uQnVuZGxlU291cmNlU3RhdGljEk4KCWh0dHBzX3dlYhgCIAEoCzI7LnRlbGVwb3J0Lm1hY2hpbmVpZC52MS5TUElGRkVGZWRlcmF0aW9uQnVuZGxlU291cmNlSFRUUFNXZWIiYgoUU1BJRkZFRmVkZXJhdGlvblNwZWMSSgoNYnVuZGxlX3NvdXJjZRgBIAEoCzIzLnRlbGVwb3J0Lm1hY2hpbmVpZC52MS5TUElGRkVGZWRlcmF0aW9uQnVuZGxlU291cmNlIpwCChZTUElGRkVGZWRlcmF0aW9uU3RhdHVzEhYKDmN1cnJlbnRfYnVuZGxlGAEgASgJEjwKGGN1cnJlbnRfYnVuZGxlX3N5bmNlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMAoMbmV4dF9zeW5jX2F0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJXChpjdXJyZW50X2J1bmRsZV9zeW5jZWRfZnJvbRgFIAEoCzIzLnRlbGVwb3J0Lm1hY2hpbmVpZC52MS5TUElGRkVGZWRlcmF0aW9uQnVuZGxlU291cmNlSgQIAxAEUhtjdXJyZW50X2J1bmRsZV9yZWZyZXNoX2hpbnRCVlpUZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvbWFjaGluZWlkL3YxO21hY2hpbmVpZHYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_teleport_header_v1_metadata]);

/**
 * SPIFFEFederation is a resource that represents the configuration of a trust
 * domain federation.
 *
 * @generated from message teleport.machineid.v1.SPIFFEFederation
 */
export type SPIFFEFederation = Message<"teleport.machineid.v1.SPIFFEFederation"> & {
  /**
   * The kind of resource represented.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Differentiates variations of the same kind. All resources should
   * contain one, even if it is never populated.
   *
   * @generated from field: string sub_kind = 2;
   */
  subKind: string;

  /**
   * The version of the resource being represented.
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Common metadata that all resources share.
   * Importantly, the name MUST match the name of the trust domain you federate
   * with.
   *
   * @generated from field: teleport.header.v1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  /**
   * The configured properties of the trust domain federation
   *
   * @generated from field: teleport.machineid.v1.SPIFFEFederationSpec spec = 5;
   */
  spec?: SPIFFEFederationSpec;

  /**
   * Fields that are set by the server as results of operations. These should
   * not be modified by users.
   *
   * @generated from field: teleport.machineid.v1.SPIFFEFederationStatus status = 6;
   */
  status?: SPIFFEFederationStatus;
};

/**
 * Describes the message teleport.machineid.v1.SPIFFEFederation.
 * Use `create(SPIFFEFederationSchema)` to create a new message.
 */
export const SPIFFEFederationSchema: GenMessage<SPIFFEFederation> = /*@__PURE__*/
  messageDesc(file_teleport_machineid_v1_federation, 0);

/**
 * SPIFFEFederationBundleSourceStatic is a static bundle source. It should be an
 * option of last resort, as it requires manual updates.
 *
 * @generated from message teleport.machineid.v1.SPIFFEFederationBundleSourceStatic
 */
export type SPIFFEFederationBundleSourceStatic = Message<"teleport.machineid.v1.SPIFFEFederationBundleSourceStatic"> & {
  /**
   * The SPIFFE JWKS bundle.
   *
   * @generated from field: string bundle = 1;
   */
  bundle: string;
};

/**
 * Describes the message teleport.machineid.v1.SPIFFEFederationBundleSourceStatic.
 * Use `create(SPIFFEFederationBundleSourceStaticSchema)` to create a new message.
 */
export const SPIFFEFederationBundleSourceStaticSchema: GenMessage<SPIFFEFederationBundleSourceStatic> = /*@__PURE__*/
  messageDesc(file_teleport_machineid_v1_federation, 1);

/**
 * SPIFFEFederationBundleSourceHTTPSWeb is a bundle source that fetches the bundle
 * from a HTTPS endpoint that is protected by a Web PKI certificate.
 *
 * @generated from message teleport.machineid.v1.SPIFFEFederationBundleSourceHTTPSWeb
 */
export type SPIFFEFederationBundleSourceHTTPSWeb = Message<"teleport.machineid.v1.SPIFFEFederationBundleSourceHTTPSWeb"> & {
  /**
   * The URL of the SPIFFE Bundle Endpoint.
   *
   * @generated from field: string bundle_endpoint_url = 1;
   */
  bundleEndpointUrl: string;
};

/**
 * Describes the message teleport.machineid.v1.SPIFFEFederationBundleSourceHTTPSWeb.
 * Use `create(SPIFFEFederationBundleSourceHTTPSWebSchema)` to create a new message.
 */
export const SPIFFEFederationBundleSourceHTTPSWebSchema: GenMessage<SPIFFEFederationBundleSourceHTTPSWeb> = /*@__PURE__*/
  messageDesc(file_teleport_machineid_v1_federation, 2);

/**
 * SPIFFEFederationBundleSource configures how the federation bundle is sourced.
 * Only one field can be set.
 *
 * @generated from message teleport.machineid.v1.SPIFFEFederationBundleSource
 */
export type SPIFFEFederationBundleSource = Message<"teleport.machineid.v1.SPIFFEFederationBundleSource"> & {
  /**
   * @generated from field: teleport.machineid.v1.SPIFFEFederationBundleSourceStatic static = 1;
   */
  static?: SPIFFEFederationBundleSourceStatic;

  /**
   * @generated from field: teleport.machineid.v1.SPIFFEFederationBundleSourceHTTPSWeb https_web = 2;
   */
  httpsWeb?: SPIFFEFederationBundleSourceHTTPSWeb;
};

/**
 * Describes the message teleport.machineid.v1.SPIFFEFederationBundleSource.
 * Use `create(SPIFFEFederationBundleSourceSchema)` to create a new message.
 */
export const SPIFFEFederationBundleSourceSchema: GenMessage<SPIFFEFederationBundleSource> = /*@__PURE__*/
  messageDesc(file_teleport_machineid_v1_federation, 3);

/**
 * SPIFFEFederationSpec is the configuration of a trust domain federation.
 *
 * @generated from message teleport.machineid.v1.SPIFFEFederationSpec
 */
export type SPIFFEFederationSpec = Message<"teleport.machineid.v1.SPIFFEFederationSpec"> & {
  /**
   * The source of the federation bundle.
   *
   * @generated from field: teleport.machineid.v1.SPIFFEFederationBundleSource bundle_source = 1;
   */
  bundleSource?: SPIFFEFederationBundleSource;
};

/**
 * Describes the message teleport.machineid.v1.SPIFFEFederationSpec.
 * Use `create(SPIFFEFederationSpecSchema)` to create a new message.
 */
export const SPIFFEFederationSpecSchema: GenMessage<SPIFFEFederationSpec> = /*@__PURE__*/
  messageDesc(file_teleport_machineid_v1_federation, 4);

/**
 * FederationStatus is the status of a trust domain federation.
 *
 * @generated from message teleport.machineid.v1.SPIFFEFederationStatus
 */
export type SPIFFEFederationStatus = Message<"teleport.machineid.v1.SPIFFEFederationStatus"> & {
  /**
   * The most recently fetched bundle from the federated trust domain.
   *
   * @generated from field: string current_bundle = 1;
   */
  currentBundle: string;

  /**
   * The time that the most recently fetched bundle was obtained.
   *
   * @generated from field: google.protobuf.Timestamp current_bundle_synced_at = 2;
   */
  currentBundleSyncedAt?: Timestamp;

  /**
   * The time that this SPIFFE federation should be synced again. This is
   * usually determined by the refresh hint provided within the current bundle
   * but this can be overridden by the server where the provided refresh hint
   * is not appropriate.
   *
   * A value of zero indicates that an automatic sync is not scheduled (e.g.
   * because the bundle source is static).
   *
   * @generated from field: google.protobuf.Timestamp next_sync_at = 4;
   */
  nextSyncAt?: Timestamp;

  /**
   * The SPIFFEFederationBundleSource that was used for the currently synced
   * bundle. This allows the bundle to be resynced if the source changes.
   *
   * @generated from field: teleport.machineid.v1.SPIFFEFederationBundleSource current_bundle_synced_from = 5;
   */
  currentBundleSyncedFrom?: SPIFFEFederationBundleSource;
};

/**
 * Describes the message teleport.machineid.v1.SPIFFEFederationStatus.
 * Use `create(SPIFFEFederationStatusSchema)` to create a new message.
 */
export const SPIFFEFederationStatusSchema: GenMessage<SPIFFEFederationStatus> = /*@__PURE__*/
  messageDesc(file_teleport_machineid_v1_federation, 5);

