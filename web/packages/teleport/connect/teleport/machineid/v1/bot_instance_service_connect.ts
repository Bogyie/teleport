// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/machineid/v1/bot_instance_service.proto (package teleport.machineid.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DeleteBotInstanceRequest, GetBotInstanceRequest, ListBotInstancesRequest, ListBotInstancesResponse, SubmitHeartbeatRequest, SubmitHeartbeatResponse } from "./bot_instance_service_pb.js";
import { BotInstance } from "./bot_instance_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * BotInstanceService provides functions to record and manage bot instances.
 *
 * @generated from service teleport.machineid.v1.BotInstanceService
 */
export const BotInstanceService = {
  typeName: "teleport.machineid.v1.BotInstanceService",
  methods: {
    /**
     * GetBotInstance returns the specified BotInstance resource.
     *
     * @generated from rpc teleport.machineid.v1.BotInstanceService.GetBotInstance
     */
    getBotInstance: {
      name: "GetBotInstance",
      I: GetBotInstanceRequest,
      O: BotInstance,
      kind: MethodKind.Unary,
    },
    /**
     * ListBotInstances returns a page of BotInstance resources.
     *
     * @generated from rpc teleport.machineid.v1.BotInstanceService.ListBotInstances
     */
    listBotInstances: {
      name: "ListBotInstances",
      I: ListBotInstancesRequest,
      O: ListBotInstancesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteBotInstance hard deletes the specified BotInstance resource.
     *
     * @generated from rpc teleport.machineid.v1.BotInstanceService.DeleteBotInstance
     */
    deleteBotInstance: {
      name: "DeleteBotInstance",
      I: DeleteBotInstanceRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * SubmitHeartbeat submits a heartbeat for a BotInstance.
     *
     * @generated from rpc teleport.machineid.v1.BotInstanceService.SubmitHeartbeat
     */
    submitHeartbeat: {
      name: "SubmitHeartbeat",
      I: SubmitHeartbeatRequest,
      O: SubmitHeartbeatResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

