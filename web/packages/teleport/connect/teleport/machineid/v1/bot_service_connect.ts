// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/machineid/v1/bot_service.proto (package teleport.machineid.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateBotRequest, DeleteBotRequest, GetBotRequest, ListBotsRequest, ListBotsResponse, UpdateBotRequest, UpsertBotRequest } from "./bot_service_pb.js";
import { Bot } from "./bot_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * BotService provides methods to manage Teleport Bots
 *
 * @generated from service teleport.machineid.v1.BotService
 */
export const BotService = {
  typeName: "teleport.machineid.v1.BotService",
  methods: {
    /**
     * GetBot is used to query a Bot resource by its name.
     *
     * This will return a NotFound error if the specified Bot does not exist.
     *
     * @generated from rpc teleport.machineid.v1.BotService.GetBot
     */
    getBot: {
      name: "GetBot",
      I: GetBotRequest,
      O: Bot,
      kind: MethodKind.Unary,
    },
    /**
     * ListBots is used to query Bots.
     *
     * Follows the pagination semantics of
     * https://cloud.google.com/apis/design/standard_methods#list.
     *
     * @generated from rpc teleport.machineid.v1.BotService.ListBots
     */
    listBots: {
      name: "ListBots",
      I: ListBotsRequest,
      O: ListBotsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateBot is used to create a Bot.
     *
     * This will return an error if a Bot by that name already exists.
     *
     * @generated from rpc teleport.machineid.v1.BotService.CreateBot
     */
    createBot: {
      name: "CreateBot",
      I: CreateBotRequest,
      O: Bot,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateBot is used to modify an existing Bot.
     *
     * @generated from rpc teleport.machineid.v1.BotService.UpdateBot
     */
    updateBot: {
      name: "UpdateBot",
      I: UpdateBotRequest,
      O: Bot,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertBot is used to create or replace an existing Bot.
     *
     * Prefer using CreateBot and UpdateBot.
     *
     * @generated from rpc teleport.machineid.v1.BotService.UpsertBot
     */
    upsertBot: {
      name: "UpsertBot",
      I: UpsertBotRequest,
      O: Bot,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteBot is used to delete a specific Bot.
     *
     * This will return a NotFound error if the specified Bot does not exist.
     *
     * @generated from rpc teleport.machineid.v1.BotService.DeleteBot
     */
    deleteBot: {
      name: "DeleteBot",
      I: DeleteBotRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

