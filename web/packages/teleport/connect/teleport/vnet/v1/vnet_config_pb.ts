// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/vnet/v1/vnet_config.proto (package teleport.vnet.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Metadata } from "../../header/v1/metadata_pb";
import { file_teleport_header_v1_metadata } from "../../header/v1/metadata_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/vnet/v1/vnet_config.proto.
 */
export const file_teleport_vnet_v1_vnet_config: GenFile = /*@__PURE__*/
  fileDesc("CiJ0ZWxlcG9ydC92bmV0L3YxL3ZuZXRfY29uZmlnLnByb3RvEhB0ZWxlcG9ydC52bmV0LnYxIp0BCgpWbmV0Q29uZmlnEgwKBGtpbmQYASABKAkSEAoIc3ViX2tpbmQYAiABKAkSDwoHdmVyc2lvbhgDIAEoCRIuCghtZXRhZGF0YRgEIAEoCzIcLnRlbGVwb3J0LmhlYWRlci52MS5NZXRhZGF0YRIuCgRzcGVjGAUgASgLMiAudGVsZXBvcnQudm5ldC52MS5WbmV0Q29uZmlnU3BlYyJkCg5WbmV0Q29uZmlnU3BlYxIXCg9pcHY0X2NpZHJfcmFuZ2UYASABKAkSOQoQY3VzdG9tX2Ruc196b25lcxgCIAMoCzIfLnRlbGVwb3J0LnZuZXQudjEuQ3VzdG9tRE5TWm9uZSIfCg1DdXN0b21ETlNab25lEg4KBnN1ZmZpeBgBIAEoCUJKWkhnaXRodWIuY29tL2dyYXZpdGF0aW9uYWwvdGVsZXBvcnQvYXBpL2dlbi9wcm90by9nby90ZWxlcG9ydC92bmV0L3YxO3ZuZXRiBnByb3RvMw", [file_teleport_header_v1_metadata]);

/**
 * VnetConfig is a resource that holds configuration parameters for Teleport VNet.
 *
 * @generated from message teleport.vnet.v1.VnetConfig
 */
export type VnetConfig = Message<"teleport.vnet.v1.VnetConfig"> & {
  /**
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: string sub_kind = 2;
   */
  subKind: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: teleport.header.v1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  /**
   * @generated from field: teleport.vnet.v1.VnetConfigSpec spec = 5;
   */
  spec?: VnetConfigSpec;
};

/**
 * Describes the message teleport.vnet.v1.VnetConfig.
 * Use `create(VnetConfigSchema)` to create a new message.
 */
export const VnetConfigSchema: GenMessage<VnetConfig> = /*@__PURE__*/
  messageDesc(file_teleport_vnet_v1_vnet_config, 0);

/**
 * VnetConfigSpec defines configuration parameters for VNet.
 *
 * @generated from message teleport.vnet.v1.VnetConfigSpec
 */
export type VnetConfigSpec = Message<"teleport.vnet.v1.VnetConfigSpec"> & {
  /**
   * Ipv4CidrRange defines the IPv4 CIDR range that all IPv4 addresses for VNet
   * apps in this cluster will be assigned from. The default is "100.64.0.0/10".
   *
   * @generated from field: string ipv4_cidr_range = 1;
   */
  ipv4CidrRange: string;

  /**
   * CustomDnsZones defines a list of DNS zones that VNet should resolve requests for in addition to the
   * cluster's public proxy address.
   *
   * @generated from field: repeated teleport.vnet.v1.CustomDNSZone custom_dns_zones = 2;
   */
  customDnsZones: CustomDNSZone[];
};

/**
 * Describes the message teleport.vnet.v1.VnetConfigSpec.
 * Use `create(VnetConfigSpecSchema)` to create a new message.
 */
export const VnetConfigSpecSchema: GenMessage<VnetConfigSpec> = /*@__PURE__*/
  messageDesc(file_teleport_vnet_v1_vnet_config, 1);

/**
 * CustomDNSZone defines parameters for custom DNS zones.
 *
 * @generated from message teleport.vnet.v1.CustomDNSZone
 */
export type CustomDNSZone = Message<"teleport.vnet.v1.CustomDNSZone"> & {
  /**
   * Suffix is the hostname suffix that defines this zone.
   *
   * @generated from field: string suffix = 1;
   */
  suffix: string;
};

/**
 * Describes the message teleport.vnet.v1.CustomDNSZone.
 * Use `create(CustomDNSZoneSchema)` to create a new message.
 */
export const CustomDNSZoneSchema: GenMessage<CustomDNSZone> = /*@__PURE__*/
  messageDesc(file_teleport_vnet_v1_vnet_config, 2);

