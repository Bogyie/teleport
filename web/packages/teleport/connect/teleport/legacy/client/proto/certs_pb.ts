// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/legacy/client/proto/certs.proto (package proto, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/legacy/client/proto/certs.proto.
 */
export const file_teleport_legacy_client_proto_certs: GenFile = /*@__PURE__*/
  fileDesc("Cih0ZWxlcG9ydC9sZWdhY3kvY2xpZW50L3Byb3RvL2NlcnRzLnByb3RvEgVwcm90byKnAQoFQ2VydHMSHgoDU1NIGAEgASgMQhHq3h8Nc3NoLG9taXRlbXB0eRIeCgNUTFMYAiABKAxCEereHw10bHMsb21pdGVtcHR5Ei4KClRMU0NBQ2VydHMYAyADKAxCGureHxZ0bHNfY2FfY2VydHMsb21pdGVtcHR5Ei4KClNTSENBQ2VydHMYBCADKAxCGureHxZzc2hfY2FfY2VydHMsb21pdGVtcHR5QkBaMmdpdGh1Yi5jb20vZ3Jhdml0YXRpb25hbC90ZWxlcG9ydC9hcGkvY2xpZW50L3Byb3RvyOEeAMjiHgHQ4h4BYgZwcm90bzM", [file_gogoproto_gogo]);

/**
 * Set of certificates corresponding to a single public key.
 *
 * @generated from message proto.Certs
 */
export type Certs = Message<"proto.Certs"> & {
  /**
   * SSH certificate marshaled in the authorized key format.
   *
   * @generated from field: bytes SSH = 1;
   */
  SSH: Uint8Array;

  /**
   * TLS X.509 certificate (PEM-encoded).
   *
   * @generated from field: bytes TLS = 2;
   */
  TLS: Uint8Array;

  /**
   * TLSCACerts is a list of TLS certificate authorities.
   *
   * @generated from field: repeated bytes TLSCACerts = 3;
   */
  TLSCACerts: Uint8Array[];

  /**
   * SSHCACerts is a list of SSH certificate authorities.
   *
   * @generated from field: repeated bytes SSHCACerts = 4;
   */
  SSHCACerts: Uint8Array[];
};

/**
 * Describes the message proto.Certs.
 * Use `create(CertsSchema)` to create a new message.
 */
export const CertsSchema: GenMessage<Certs> = /*@__PURE__*/
  messageDesc(file_teleport_legacy_client_proto_certs, 0);

