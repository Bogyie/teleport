// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/mfa/v1/mfa.proto (package teleport.mfa.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/mfa/v1/mfa.proto.
 */
export const file_teleport_mfa_v1_mfa: GenFile = /*@__PURE__*/
  fileDesc("Chl0ZWxlcG9ydC9tZmEvdjEvbWZhLnByb3RvEg90ZWxlcG9ydC5tZmEudjEipwEKE0NoYWxsZW5nZUV4dGVuc2lvbnMSLgoFc2NvcGUYASABKA4yHy50ZWxlcG9ydC5tZmEudjEuQ2hhbGxlbmdlU2NvcGUSOQoLYWxsb3dfcmV1c2UYAiABKA4yJC50ZWxlcG9ydC5tZmEudjEuQ2hhbGxlbmdlQWxsb3dSZXVzZRIlCh11c2VyX3ZlcmlmaWNhdGlvbl9yZXF1aXJlbWVudBgDIAEoCSrLAgoOQ2hhbGxlbmdlU2NvcGUSHwobQ0hBTExFTkdFX1NDT1BFX1VOU1BFQ0lGSUVEEAASGQoVQ0hBTExFTkdFX1NDT1BFX0xPR0lOEAESJgoiQ0hBTExFTkdFX1NDT1BFX1BBU1NXT1JETEVTU19MT0dJThACEiIKHkNIQUxMRU5HRV9TQ09QRV9IRUFETEVTU19MT0dJThADEiIKHkNIQUxMRU5HRV9TQ09QRV9NQU5BR0VfREVWSUNFUxAEEiQKIENIQUxMRU5HRV9TQ09QRV9BQ0NPVU5UX1JFQ09WRVJZEAUSIAocQ0hBTExFTkdFX1NDT1BFX1VTRVJfU0VTU0lPThAGEiAKHENIQUxMRU5HRV9TQ09QRV9BRE1JTl9BQ1RJT04QBxIjCh9DSEFMTEVOR0VfU0NPUEVfQ0hBTkdFX1BBU1NXT1JEEAgqeQoTQ2hhbGxlbmdlQWxsb3dSZXVzZRIlCiFDSEFMTEVOR0VfQUxMT1dfUkVVU0VfVU5TUEVDSUZJRUQQABIdChlDSEFMTEVOR0VfQUxMT1dfUkVVU0VfWUVTEAESHAoYQ0hBTExFTkdFX0FMTE9XX1JFVVNFX05PEAJCUlpIZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvbWZhL3YxO21mYXYxyOIeAdDiHgFiBnByb3RvMw", [file_gogoproto_gogo]);

/**
 * ChallengeExtensions contains MFA challenge extensions used by Teleport
 * during MFA authentication.
 *
 * @generated from message teleport.mfa.v1.ChallengeExtensions
 */
export type ChallengeExtensions = Message<"teleport.mfa.v1.ChallengeExtensions"> & {
  /**
   * Scope is an authorization scope for this MFA challenge.
   * Required.
   *
   * @generated from field: teleport.mfa.v1.ChallengeScope scope = 1;
   */
  scope: ChallengeScope;

  /**
   * AllowReuse determines whether the MFA challenge allows reuse.
   * Defaults to CHALLENGE_ALLOW_REUSE_NO.
   *
   * Note that reuse is only permitted for specific actions by the discretion
   * of the server. See the server implementation for details.
   *
   * @generated from field: teleport.mfa.v1.ChallengeAllowReuse allow_reuse = 2;
   */
  allowReuse: ChallengeAllowReuse;

  /**
   * User verification requirement for the challenge.
   *
   * * https://www.w3.org/TR/webauthn-2/#enum-userVerificationRequirement.
   * * https://pkg.go.dev/github.com/go-webauthn/webauthn/protocol#UserVerificationRequirement.
   *
   * Optional. Empty is equivalent to "discouraged".
   *
   * @generated from field: string user_verification_requirement = 3;
   */
  userVerificationRequirement: string;
};

/**
 * Describes the message teleport.mfa.v1.ChallengeExtensions.
 * Use `create(ChallengeExtensionsSchema)` to create a new message.
 */
export const ChallengeExtensionsSchema: GenMessage<ChallengeExtensions> = /*@__PURE__*/
  messageDesc(file_teleport_mfa_v1_mfa, 0);

/**
 * ChallengeScope is a scope authorized by an MFA challenge resolution.
 *
 * @generated from enum teleport.mfa.v1.ChallengeScope
 */
export enum ChallengeScope {
  /**
   * Scope unknown or not specified.
   *
   * @generated from enum value: CHALLENGE_SCOPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Standard webauthn login.
   *
   * @generated from enum value: CHALLENGE_SCOPE_LOGIN = 1;
   */
  LOGIN = 1,

  /**
   * Passwordless webauthn login.
   *
   * @generated from enum value: CHALLENGE_SCOPE_PASSWORDLESS_LOGIN = 2;
   */
  PASSWORDLESS_LOGIN = 2,

  /**
   * Headless login.
   *
   * @generated from enum value: CHALLENGE_SCOPE_HEADLESS_LOGIN = 3;
   */
  HEADLESS_LOGIN = 3,

  /**
   * MFA device management.
   *
   * @generated from enum value: CHALLENGE_SCOPE_MANAGE_DEVICES = 4;
   */
  MANAGE_DEVICES = 4,

  /**
   * Account recovery.
   *
   * @generated from enum value: CHALLENGE_SCOPE_ACCOUNT_RECOVERY = 5;
   */
  ACCOUNT_RECOVERY = 5,

  /**
   * Used for per-session MFA and moderated session presence checks.
   *
   * @generated from enum value: CHALLENGE_SCOPE_USER_SESSION = 6;
   */
  USER_SESSION = 6,

  /**
   * Used for various administrative actions, such as adding, updating, or
   * deleting administrative resources (users, roles, etc.).
   *
   * Note: this scope should not be used for new MFA capabilities that have
   * more precise scope. Instead, new scopes should be added. This scope may
   * also be split into multiple smaller scopes in the future.
   *
   * @generated from enum value: CHALLENGE_SCOPE_ADMIN_ACTION = 7;
   */
  ADMIN_ACTION = 7,

  /**
   * Used for changing user's password.
   *
   * @generated from enum value: CHALLENGE_SCOPE_CHANGE_PASSWORD = 8;
   */
  CHANGE_PASSWORD = 8,
}

/**
 * Describes the enum teleport.mfa.v1.ChallengeScope.
 */
export const ChallengeScopeSchema: GenEnum<ChallengeScope> = /*@__PURE__*/
  enumDesc(file_teleport_mfa_v1_mfa, 0);

/**
 * ChallengeAllowReuse determines whether an MFA challenge response can be used
 * to authenticate the user more than once until the challenge expires.
 *
 * Reuse is only permitted for specific actions by the discretion of the server.
 * See the server implementation for details.
 *
 * @generated from enum teleport.mfa.v1.ChallengeAllowReuse
 */
export enum ChallengeAllowReuse {
  /**
   * Reuse unspecified, treated as CHALLENGE_ALLOW_REUSE_NO.
   *
   * @generated from enum value: CHALLENGE_ALLOW_REUSE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Reuse is permitted.
   *
   * @generated from enum value: CHALLENGE_ALLOW_REUSE_YES = 1;
   */
  YES = 1,

  /**
   * Reuse is not permitted.
   *
   * @generated from enum value: CHALLENGE_ALLOW_REUSE_NO = 2;
   */
  NO = 2,
}

/**
 * Describes the enum teleport.mfa.v1.ChallengeAllowReuse.
 */
export const ChallengeAllowReuseSchema: GenEnum<ChallengeAllowReuse> = /*@__PURE__*/
  enumDesc(file_teleport_mfa_v1_mfa, 1);

