// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/okta/v1/okta_service.proto (package teleport.okta.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration, EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { OktaAssignmentSpecV1_OktaAssignmentStatus, OktaAssignmentV1, OktaAssignmentV1Schema, OktaImportRuleV1, OktaImportRuleV1Schema, PluginV1 } from "../../legacy/types/types_pb";
import { file_teleport_legacy_types_types } from "../../legacy/types/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/okta/v1/okta_service.proto.
 */
export const file_teleport_okta_v1_okta_service: GenFile = /*@__PURE__*/
  fileDesc("CiN0ZWxlcG9ydC9va3RhL3YxL29rdGFfc2VydmljZS5wcm90bxIQdGVsZXBvcnQub2t0YS52MSJ/Cg5HZXRBcHBzUmVxdWVzdBIdChVva3RhX29yZ2FuaXphdGlvbl91cmwYASABKAkSPQoPYXBpX2NyZWRlbnRpYWxzGAIgASgLMiQudGVsZXBvcnQub2t0YS52MS5Pa3RhQVBJQ3JlZGVudGlhbHMSDwoHZmlsdGVycxgDIAMoCSJwCg9HZXRBcHBzUmVzcG9uc2USMwoEYXBwcxgBIAMoCzIlLnRlbGVwb3J0Lm9rdGEudjEuR2V0QXBwc1Jlc3BvbnNlLkFwcBooCgNBcHASDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCSKBAQoQR2V0R3JvdXBzUmVxdWVzdBIdChVva3RhX29yZ2FuaXphdGlvbl91cmwYASABKAkSPQoPYXBpX2NyZWRlbnRpYWxzGAIgASgLMiQudGVsZXBvcnQub2t0YS52MS5Pa3RhQVBJQ3JlZGVudGlhbHMSDwoHZmlsdGVycxgDIAMoCSJ6ChFHZXRHcm91cHNSZXNwb25zZRI5CgZncm91cHMYASADKAsyKS50ZWxlcG9ydC5va3RhLnYxLkdldEdyb3Vwc1Jlc3BvbnNlLkdyb3VwGioKBUdyb3VwEgwKBG5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAki3QIKGENyZWF0ZUludGVncmF0aW9uUmVxdWVzdBIdChVva3RhX29yZ2FuaXphdGlvbl91cmwYASABKAkSPQoPYXBpX2NyZWRlbnRpYWxzGAIgASgLMiQudGVsZXBvcnQub2t0YS52MS5Pa3RhQVBJQ3JlZGVudGlhbHMSEgoKc2NpbV90b2tlbhgDIAEoCRIfChdlbmFibGVfYWNjZXNzX2xpc3Rfc3luYxgEIAEoCBIYChBlbmFibGVfdXNlcl9zeW5jGAUgASgIEh0KFWVuYWJsZV9hcHBfZ3JvdXBfc3luYxgGIAEoCBJCChRhY2Nlc3NfbGlzdF9zZXR0aW5ncxgHIAEoCzIkLnRlbGVwb3J0Lm9rdGEudjEuQWNjZXNzTGlzdFNldHRpbmdzEhcKD3JldXNlX2Nvbm5lY3RvchgIIAEoCRIYChBzc29fbWV0YWRhdGFfdXJsGAkgASgJIr4CChhVcGRhdGVJbnRlZ3JhdGlvblJlcXVlc3QSPQoPYXBpX2NyZWRlbnRpYWxzGAIgASgLMiQudGVsZXBvcnQub2t0YS52MS5Pa3RhQVBJQ3JlZGVudGlhbHMSEgoKc2NpbV90b2tlbhgDIAEoCRIfChdlbmFibGVfYWNjZXNzX2xpc3Rfc3luYxgEIAEoCBIYChBlbmFibGVfdXNlcl9zeW5jGAUgASgIEh0KFWVuYWJsZV9hcHBfZ3JvdXBfc3luYxgGIAEoCBJCChRhY2Nlc3NfbGlzdF9zZXR0aW5ncxgHIAEoCzIkLnRlbGVwb3J0Lm9rdGEudjEuQWNjZXNzTGlzdFNldHRpbmdzEhcKD3JldXNlX2Nvbm5lY3RvchgIIAEoCRIYChBzc29fbWV0YWRhdGFfdXJsGAkgASgJIlcKEkFjY2Vzc0xpc3RTZXR0aW5ncxIVCg1ncm91cF9maWx0ZXJzGAIgAygJEhMKC2FwcF9maWx0ZXJzGAMgAygJEhUKDWRlZmF1bHRfb3duZXIYBCADKAkiTQoST2t0YUFQSUNyZWRlbnRpYWxzEhIKCG9hdXRoX2lkGAEgASgJSAASGwoRc3N3c19iZWFyZXJfdG9rZW4YAiABKAlIAEIGCgRhdXRoInUKGUNyZWF0ZUludGVncmF0aW9uUmVzcG9uc2USHwoGcGx1Z2luGAEgASgLMg8udHlwZXMuUGx1Z2luVjESNwoOY29ubmVjdG9yX2luZm8YAiABKAsyHy50ZWxlcG9ydC5va3RhLnYxLkNvbm5lY3RvckluZm8idQoZVXBkYXRlSW50ZWdyYXRpb25SZXNwb25zZRIfCgZwbHVnaW4YASABKAsyDy50eXBlcy5QbHVnaW5WMRI3Cg5jb25uZWN0b3JfaW5mbxgCIAEoCzIfLnRlbGVwb3J0Lm9rdGEudjEuQ29ubmVjdG9ySW5mbyJ1Cg1Db25uZWN0b3JJbmZvEhMKC29rdGFfYXBwX2lkGAEgASgJEhUKDW9rdGFfYXBwX25hbWUYAiABKAkSFwoPb2t0YV9hcHBfbGFiZWxzGAMgASgJEh8KF3RlbGVwb3J0X2Nvbm5lY3Rvcl9uYW1lGAQgASgJIoABCiBWYWxpZGF0ZUNsaWVudENyZWRlbnRpYWxzUmVxdWVzdBIdChVva3RhX29yZ2FuaXphdGlvbl91cmwYASABKAkSPQoPYXBpX2NyZWRlbnRpYWxzGAIgASgLMiQudGVsZXBvcnQub2t0YS52MS5Pa3RhQVBJQ3JlZGVudGlhbHMiIwohVmFsaWRhdGVDbGllbnRDcmVkZW50aWFsc1Jlc3BvbnNlIkMKGkxpc3RPa3RhSW1wb3J0UnVsZXNSZXF1ZXN0EhEKCXBhZ2Vfc2l6ZRgBIAEoBRISCgpwYWdlX3Rva2VuGAIgASgJImUKG0xpc3RPa3RhSW1wb3J0UnVsZXNSZXNwb25zZRItCgxpbXBvcnRfcnVsZXMYASADKAsyFy50eXBlcy5Pa3RhSW1wb3J0UnVsZVYxEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSIoChhHZXRPa3RhSW1wb3J0UnVsZVJlcXVlc3QSDAoEbmFtZRgBIAEoCSJLChtDcmVhdGVPa3RhSW1wb3J0UnVsZVJlcXVlc3QSLAoLaW1wb3J0X3J1bGUYASABKAsyFy50eXBlcy5Pa3RhSW1wb3J0UnVsZVYxIksKG1VwZGF0ZU9rdGFJbXBvcnRSdWxlUmVxdWVzdBIsCgtpbXBvcnRfcnVsZRgBIAEoCzIXLnR5cGVzLk9rdGFJbXBvcnRSdWxlVjEiKwobRGVsZXRlT2t0YUltcG9ydFJ1bGVSZXF1ZXN0EgwKBG5hbWUYASABKAkiIQofRGVsZXRlQWxsT2t0YUltcG9ydFJ1bGVzUmVxdWVzdCJDChpMaXN0T2t0YUFzc2lnbm1lbnRzUmVxdWVzdBIRCglwYWdlX3NpemUYASABKAUSEgoKcGFnZV90b2tlbhgCIAEoCSJkChtMaXN0T2t0YUFzc2lnbm1lbnRzUmVzcG9uc2USLAoLYXNzaWdubWVudHMYASADKAsyFy50eXBlcy5Pa3RhQXNzaWdubWVudFYxEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSIoChhHZXRPa3RhQXNzaWdubWVudFJlcXVlc3QSDAoEbmFtZRgBIAEoCSJKChtDcmVhdGVPa3RhQXNzaWdubWVudFJlcXVlc3QSKwoKYXNzaWdubWVudBgBIAEoCzIXLnR5cGVzLk9rdGFBc3NpZ25tZW50VjEiSgobVXBkYXRlT2t0YUFzc2lnbm1lbnRSZXF1ZXN0EisKCmFzc2lnbm1lbnQYASABKAsyFy50eXBlcy5Pa3RhQXNzaWdubWVudFYxIqcBCiFVcGRhdGVPa3RhQXNzaWdubWVudFN0YXR1c1JlcXVlc3QSDAoEbmFtZRgBIAEoCRJACgZzdGF0dXMYAiABKA4yMC50eXBlcy5Pa3RhQXNzaWdubWVudFNwZWNWMS5Pa3RhQXNzaWdubWVudFN0YXR1cxIyCg90aW1lX2hhc19wYXNzZWQYAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24iKwobRGVsZXRlT2t0YUFzc2lnbm1lbnRSZXF1ZXN0EgwKBG5hbWUYASABKAkiIQofRGVsZXRlQWxsT2t0YUFzc2lnbm1lbnRzUmVxdWVzdDKpDgoLT2t0YVNlcnZpY2UScgoTTGlzdE9rdGFJbXBvcnRSdWxlcxIsLnRlbGVwb3J0Lm9rdGEudjEuTGlzdE9rdGFJbXBvcnRSdWxlc1JlcXVlc3QaLS50ZWxlcG9ydC5va3RhLnYxLkxpc3RPa3RhSW1wb3J0UnVsZXNSZXNwb25zZRJYChFHZXRPa3RhSW1wb3J0UnVsZRIqLnRlbGVwb3J0Lm9rdGEudjEuR2V0T2t0YUltcG9ydFJ1bGVSZXF1ZXN0GhcudHlwZXMuT2t0YUltcG9ydFJ1bGVWMRJeChRDcmVhdGVPa3RhSW1wb3J0UnVsZRItLnRlbGVwb3J0Lm9rdGEudjEuQ3JlYXRlT2t0YUltcG9ydFJ1bGVSZXF1ZXN0GhcudHlwZXMuT2t0YUltcG9ydFJ1bGVWMRJeChRVcGRhdGVPa3RhSW1wb3J0UnVsZRItLnRlbGVwb3J0Lm9rdGEudjEuVXBkYXRlT2t0YUltcG9ydFJ1bGVSZXF1ZXN0GhcudHlwZXMuT2t0YUltcG9ydFJ1bGVWMRJdChREZWxldGVPa3RhSW1wb3J0UnVsZRItLnRlbGVwb3J0Lm9rdGEudjEuRGVsZXRlT2t0YUltcG9ydFJ1bGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EmUKGERlbGV0ZUFsbE9rdGFJbXBvcnRSdWxlcxIxLnRlbGVwb3J0Lm9rdGEudjEuRGVsZXRlQWxsT2t0YUltcG9ydFJ1bGVzUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJyChNMaXN0T2t0YUFzc2lnbm1lbnRzEiwudGVsZXBvcnQub2t0YS52MS5MaXN0T2t0YUFzc2lnbm1lbnRzUmVxdWVzdBotLnRlbGVwb3J0Lm9rdGEudjEuTGlzdE9rdGFBc3NpZ25tZW50c1Jlc3BvbnNlElgKEUdldE9rdGFBc3NpZ25tZW50EioudGVsZXBvcnQub2t0YS52MS5HZXRPa3RhQXNzaWdubWVudFJlcXVlc3QaFy50eXBlcy5Pa3RhQXNzaWdubWVudFYxEl4KFENyZWF0ZU9rdGFBc3NpZ25tZW50Ei0udGVsZXBvcnQub2t0YS52MS5DcmVhdGVPa3RhQXNzaWdubWVudFJlcXVlc3QaFy50eXBlcy5Pa3RhQXNzaWdubWVudFYxEl4KFFVwZGF0ZU9rdGFBc3NpZ25tZW50Ei0udGVsZXBvcnQub2t0YS52MS5VcGRhdGVPa3RhQXNzaWdubWVudFJlcXVlc3QaFy50eXBlcy5Pa3RhQXNzaWdubWVudFYxEmkKGlVwZGF0ZU9rdGFBc3NpZ25tZW50U3RhdHVzEjMudGVsZXBvcnQub2t0YS52MS5VcGRhdGVPa3RhQXNzaWdubWVudFN0YXR1c1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSXQoURGVsZXRlT2t0YUFzc2lnbm1lbnQSLS50ZWxlcG9ydC5va3RhLnYxLkRlbGV0ZU9rdGFBc3NpZ25tZW50UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJlChhEZWxldGVBbGxPa3RhQXNzaWdubWVudHMSMS50ZWxlcG9ydC5va3RhLnYxLkRlbGV0ZUFsbE9rdGFBc3NpZ25tZW50c1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkShAEKGVZhbGlkYXRlQ2xpZW50Q3JlZGVudGlhbHMSMi50ZWxlcG9ydC5va3RhLnYxLlZhbGlkYXRlQ2xpZW50Q3JlZGVudGlhbHNSZXF1ZXN0GjMudGVsZXBvcnQub2t0YS52MS5WYWxpZGF0ZUNsaWVudENyZWRlbnRpYWxzUmVzcG9uc2USbAoRQ3JlYXRlSW50ZWdyYXRpb24SKi50ZWxlcG9ydC5va3RhLnYxLkNyZWF0ZUludGVncmF0aW9uUmVxdWVzdBorLnRlbGVwb3J0Lm9rdGEudjEuQ3JlYXRlSW50ZWdyYXRpb25SZXNwb25zZRJsChFVcGRhdGVJbnRlZ3JhdGlvbhIqLnRlbGVwb3J0Lm9rdGEudjEuVXBkYXRlSW50ZWdyYXRpb25SZXF1ZXN0GisudGVsZXBvcnQub2t0YS52MS5VcGRhdGVJbnRlZ3JhdGlvblJlc3BvbnNlEk4KB0dldEFwcHMSIC50ZWxlcG9ydC5va3RhLnYxLkdldEFwcHNSZXF1ZXN0GiEudGVsZXBvcnQub2t0YS52MS5HZXRBcHBzUmVzcG9uc2USVAoJR2V0R3JvdXBzEiIudGVsZXBvcnQub2t0YS52MS5HZXRHcm91cHNSZXF1ZXN0GiMudGVsZXBvcnQub2t0YS52MS5HZXRHcm91cHNSZXNwb25zZUJMWkpnaXRodWIuY29tL2dyYXZpdGF0aW9uYWwvdGVsZXBvcnQvYXBpL2dlbi9wcm90by9nby90ZWxlcG9ydC9va3RhL3YxO29rdGF2MWIGcHJvdG8z", [file_google_protobuf_duration, file_google_protobuf_empty, file_teleport_legacy_types_types]);

/**
 * GetAppsRequest is the request message for filtering apps.
 *
 * @generated from message teleport.okta.v1.GetAppsRequest
 */
export type GetAppsRequest = Message<"teleport.okta.v1.GetAppsRequest"> & {
  /**
   * URL of the Okta organization.
   *
   * @generated from field: string okta_organization_url = 1;
   */
  oktaOrganizationUrl: string;

  /**
   * Credentials to access the Okta API.
   *
   * @generated from field: teleport.okta.v1.OktaAPICredentials api_credentials = 2;
   */
  apiCredentials?: OktaAPICredentials;

  /**
   * List of filters to apply when fetching apps.
   *
   * @generated from field: repeated string filters = 3;
   */
  filters: string[];
};

/**
 * Describes the message teleport.okta.v1.GetAppsRequest.
 * Use `create(GetAppsRequestSchema)` to create a new message.
 */
export const GetAppsRequestSchema: GenMessage<GetAppsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 0);

/**
 * GetAppsResponse is the response message for filtering apps.
 *
 * @generated from message teleport.okta.v1.GetAppsResponse
 */
export type GetAppsResponse = Message<"teleport.okta.v1.GetAppsResponse"> & {
  /**
   * List of apps that match the filter criteria.
   *
   * @generated from field: repeated teleport.okta.v1.GetAppsResponse.App apps = 1;
   */
  apps: GetAppsResponse_App[];
};

/**
 * Describes the message teleport.okta.v1.GetAppsResponse.
 * Use `create(GetAppsResponseSchema)` to create a new message.
 */
export const GetAppsResponseSchema: GenMessage<GetAppsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 1);

/**
 * App contains details of an individual Okta app.
 *
 * @generated from message teleport.okta.v1.GetAppsResponse.App
 */
export type GetAppsResponse_App = Message<"teleport.okta.v1.GetAppsResponse.App"> & {
  /**
   * Name of the app.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Description of the app.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message teleport.okta.v1.GetAppsResponse.App.
 * Use `create(GetAppsResponse_AppSchema)` to create a new message.
 */
export const GetAppsResponse_AppSchema: GenMessage<GetAppsResponse_App> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 1, 0);

/**
 * GetGroupsRequest is the request message.
 *
 * @generated from message teleport.okta.v1.GetGroupsRequest
 */
export type GetGroupsRequest = Message<"teleport.okta.v1.GetGroupsRequest"> & {
  /**
   * URL of the Okta organization.
   *
   * @generated from field: string okta_organization_url = 1;
   */
  oktaOrganizationUrl: string;

  /**
   * Credentials to access the Okta API.
   *
   * @generated from field: teleport.okta.v1.OktaAPICredentials api_credentials = 2;
   */
  apiCredentials?: OktaAPICredentials;

  /**
   * List of filters to apply when fetching groups.
   *
   * @generated from field: repeated string filters = 3;
   */
  filters: string[];
};

/**
 * Describes the message teleport.okta.v1.GetGroupsRequest.
 * Use `create(GetGroupsRequestSchema)` to create a new message.
 */
export const GetGroupsRequestSchema: GenMessage<GetGroupsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 2);

/**
 * GetGroupsResponse is the response message for filtering groups.
 *
 * @generated from message teleport.okta.v1.GetGroupsResponse
 */
export type GetGroupsResponse = Message<"teleport.okta.v1.GetGroupsResponse"> & {
  /**
   * List of groups that match the filter criteria.
   *
   * @generated from field: repeated teleport.okta.v1.GetGroupsResponse.Group groups = 1;
   */
  groups: GetGroupsResponse_Group[];
};

/**
 * Describes the message teleport.okta.v1.GetGroupsResponse.
 * Use `create(GetGroupsResponseSchema)` to create a new message.
 */
export const GetGroupsResponseSchema: GenMessage<GetGroupsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 3);

/**
 * Group contains details of an individual Okta group.
 *
 * @generated from message teleport.okta.v1.GetGroupsResponse.Group
 */
export type GetGroupsResponse_Group = Message<"teleport.okta.v1.GetGroupsResponse.Group"> & {
  /**
   * Name of the group.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Description of the group.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message teleport.okta.v1.GetGroupsResponse.Group.
 * Use `create(GetGroupsResponse_GroupSchema)` to create a new message.
 */
export const GetGroupsResponse_GroupSchema: GenMessage<GetGroupsResponse_Group> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 3, 0);

/**
 * CreateIntegrationRequest is the request message for enrolling a new Okta integration.
 *
 * @generated from message teleport.okta.v1.CreateIntegrationRequest
 */
export type CreateIntegrationRequest = Message<"teleport.okta.v1.CreateIntegrationRequest"> & {
  /**
   * URL of the Okta organization.
   *
   * @generated from field: string okta_organization_url = 1;
   */
  oktaOrganizationUrl: string;

  /**
   * Credentials to access the Okta API.
   *
   * @generated from field: teleport.okta.v1.OktaAPICredentials api_credentials = 2;
   */
  apiCredentials?: OktaAPICredentials;

  /**
   * SCIM token for integration.
   *
   * @generated from field: string scim_token = 3;
   */
  scimToken: string;

  /**
   * Enable synchronization of access lists.
   *
   * @generated from field: bool enable_access_list_sync = 4;
   */
  enableAccessListSync: boolean;

  /**
   * Enable user synchronization.
   *
   * @generated from field: bool enable_user_sync = 5;
   */
  enableUserSync: boolean;

  /**
   * Enable synchronization of app groups.
   *
   * @generated from field: bool enable_app_group_sync = 6;
   */
  enableAppGroupSync: boolean;

  /**
   * Settings related to access list synchronization.
   *
   * @generated from field: teleport.okta.v1.AccessListSettings access_list_settings = 7;
   */
  accessListSettings?: AccessListSettings;

  /**
   * Option to reuse an existing connector.
   *
   * @generated from field: string reuse_connector = 8;
   */
  reuseConnector: string;

  /**
   * SSO metadata URL for integration.
   *
   * @generated from field: string sso_metadata_url = 9;
   */
  ssoMetadataUrl: string;
};

/**
 * Describes the message teleport.okta.v1.CreateIntegrationRequest.
 * Use `create(CreateIntegrationRequestSchema)` to create a new message.
 */
export const CreateIntegrationRequestSchema: GenMessage<CreateIntegrationRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 4);

/**
 * UpdateIntegrationRequest is the request message for updating an existing Okta integration.
 *
 * @generated from message teleport.okta.v1.UpdateIntegrationRequest
 */
export type UpdateIntegrationRequest = Message<"teleport.okta.v1.UpdateIntegrationRequest"> & {
  /**
   * Credentials to access the Okta API.
   *
   * @generated from field: teleport.okta.v1.OktaAPICredentials api_credentials = 2;
   */
  apiCredentials?: OktaAPICredentials;

  /**
   * SCIM token for integration.
   *
   * @generated from field: string scim_token = 3;
   */
  scimToken: string;

  /**
   * Enable synchronization of access lists.
   *
   * @generated from field: bool enable_access_list_sync = 4;
   */
  enableAccessListSync: boolean;

  /**
   * Enable user synchronization.
   *
   * @generated from field: bool enable_user_sync = 5;
   */
  enableUserSync: boolean;

  /**
   * Enable synchronization of app groups.
   *
   * @generated from field: bool enable_app_group_sync = 6;
   */
  enableAppGroupSync: boolean;

  /**
   * Settings related to access list synchronization.
   *
   * @generated from field: teleport.okta.v1.AccessListSettings access_list_settings = 7;
   */
  accessListSettings?: AccessListSettings;

  /**
   * Option to reuse an existing connector.
   *
   * @generated from field: string reuse_connector = 8;
   */
  reuseConnector: string;

  /**
   * SSO metadata URL for integration.
   *
   * @generated from field: string sso_metadata_url = 9;
   */
  ssoMetadataUrl: string;
};

/**
 * Describes the message teleport.okta.v1.UpdateIntegrationRequest.
 * Use `create(UpdateIntegrationRequestSchema)` to create a new message.
 */
export const UpdateIntegrationRequestSchema: GenMessage<UpdateIntegrationRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 5);

/**
 * AccessListSettings contains the settings for access list synchronization.
 *
 * @generated from message teleport.okta.v1.AccessListSettings
 */
export type AccessListSettings = Message<"teleport.okta.v1.AccessListSettings"> & {
  /**
   * Filters for groups to include in the access list.
   *
   * @generated from field: repeated string group_filters = 2;
   */
  groupFilters: string[];

  /**
   * Filters for apps to include in the access list.
   *
   * @generated from field: repeated string app_filters = 3;
   */
  appFilters: string[];

  /**
   * Default owner for access list items.
   *
   * @generated from field: repeated string default_owner = 4;
   */
  defaultOwner: string[];
};

/**
 * Describes the message teleport.okta.v1.AccessListSettings.
 * Use `create(AccessListSettingsSchema)` to create a new message.
 */
export const AccessListSettingsSchema: GenMessage<AccessListSettings> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 6);

/**
 * OktaAPICredentials provides the authentication details for accessing Okta API.
 *
 * @generated from message teleport.okta.v1.OktaAPICredentials
 */
export type OktaAPICredentials = Message<"teleport.okta.v1.OktaAPICredentials"> & {
  /**
   * @generated from oneof teleport.okta.v1.OktaAPICredentials.auth
   */
  auth: {
    /**
     * OAuth ClientID for authentication.
     *
     * @generated from field: string oauth_id = 1;
     */
    value: string;
    case: "oauthId";
  } | {
    /**
     * SSWS Bearer token for authentication.
     *
     * @generated from field: string ssws_bearer_token = 2;
     */
    value: string;
    case: "sswsBearerToken";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message teleport.okta.v1.OktaAPICredentials.
 * Use `create(OktaAPICredentialsSchema)` to create a new message.
 */
export const OktaAPICredentialsSchema: GenMessage<OktaAPICredentials> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 7);

/**
 * CreateIntegrationResponse is the response message for enrolling a new Okta integration.
 *
 * @generated from message teleport.okta.v1.CreateIntegrationResponse
 */
export type CreateIntegrationResponse = Message<"teleport.okta.v1.CreateIntegrationResponse"> & {
  /**
   * Plugin information.
   *
   * @generated from field: types.PluginV1 plugin = 1;
   */
  plugin?: PluginV1;

  /**
   * Details of the connector.
   *
   * @generated from field: teleport.okta.v1.ConnectorInfo connector_info = 2;
   */
  connectorInfo?: ConnectorInfo;
};

/**
 * Describes the message teleport.okta.v1.CreateIntegrationResponse.
 * Use `create(CreateIntegrationResponseSchema)` to create a new message.
 */
export const CreateIntegrationResponseSchema: GenMessage<CreateIntegrationResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 8);

/**
 * UpdateIntegrationResponse is the request for listing paginated Okta import rules.
 *
 * @generated from message teleport.okta.v1.UpdateIntegrationResponse
 */
export type UpdateIntegrationResponse = Message<"teleport.okta.v1.UpdateIntegrationResponse"> & {
  /**
   * Plugin information.
   *
   * @generated from field: types.PluginV1 plugin = 1;
   */
  plugin?: PluginV1;

  /**
   * Details of the connector.
   *
   * @generated from field: teleport.okta.v1.ConnectorInfo connector_info = 2;
   */
  connectorInfo?: ConnectorInfo;
};

/**
 * Describes the message teleport.okta.v1.UpdateIntegrationResponse.
 * Use `create(UpdateIntegrationResponseSchema)` to create a new message.
 */
export const UpdateIntegrationResponseSchema: GenMessage<UpdateIntegrationResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 9);

/**
 * ConnectorInfo contains information about the connector.
 *
 * @generated from message teleport.okta.v1.ConnectorInfo
 */
export type ConnectorInfo = Message<"teleport.okta.v1.ConnectorInfo"> & {
  /**
   * Okta application ID.
   *
   * @generated from field: string okta_app_id = 1;
   */
  oktaAppId: string;

  /**
   * Name of the Okta application.
   *
   * @generated from field: string okta_app_name = 2;
   */
  oktaAppName: string;

  /**
   * Labels associated with the Okta application.
   *
   * @generated from field: string okta_app_labels = 3;
   */
  oktaAppLabels: string;

  /**
   * Name of the Teleport connector.
   *
   * @generated from field: string teleport_connector_name = 4;
   */
  teleportConnectorName: string;
};

/**
 * Describes the message teleport.okta.v1.ConnectorInfo.
 * Use `create(ConnectorInfoSchema)` to create a new message.
 */
export const ConnectorInfoSchema: GenMessage<ConnectorInfo> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 10);

/**
 * ValidateClientCredentialsRequest is the request message for validating client credentials.
 *
 * @generated from message teleport.okta.v1.ValidateClientCredentialsRequest
 */
export type ValidateClientCredentialsRequest = Message<"teleport.okta.v1.ValidateClientCredentialsRequest"> & {
  /**
   * URL of the Okta organization.
   *
   * @generated from field: string okta_organization_url = 1;
   */
  oktaOrganizationUrl: string;

  /**
   * Credentials to access the Okta API.
   *
   * @generated from field: teleport.okta.v1.OktaAPICredentials api_credentials = 2;
   */
  apiCredentials?: OktaAPICredentials;
};

/**
 * Describes the message teleport.okta.v1.ValidateClientCredentialsRequest.
 * Use `create(ValidateClientCredentialsRequestSchema)` to create a new message.
 */
export const ValidateClientCredentialsRequestSchema: GenMessage<ValidateClientCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 11);

/**
 * ValidateClientCredentialsResponse is the response message for validating client credentials.
 *
 * @generated from message teleport.okta.v1.ValidateClientCredentialsResponse
 */
export type ValidateClientCredentialsResponse = Message<"teleport.okta.v1.ValidateClientCredentialsResponse"> & {
};

/**
 * Describes the message teleport.okta.v1.ValidateClientCredentialsResponse.
 * Use `create(ValidateClientCredentialsResponseSchema)` to create a new message.
 */
export const ValidateClientCredentialsResponseSchema: GenMessage<ValidateClientCredentialsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 12);

/**
 * ListOktaImportRulesRequest is the request for listing paginated Okta import rules.
 *
 * @generated from message teleport.okta.v1.ListOktaImportRulesRequest
 */
export type ListOktaImportRulesRequest = Message<"teleport.okta.v1.ListOktaImportRulesRequest"> & {
  /**
   * page_size is the number of results to return. If page_size is 0, a default page size of 200 will be chosen.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * page_token is the next_token value returned from a previous List request if any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.okta.v1.ListOktaImportRulesRequest.
 * Use `create(ListOktaImportRulesRequestSchema)` to create a new message.
 */
export const ListOktaImportRulesRequestSchema: GenMessage<ListOktaImportRulesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 13);

/**
 * ListOktaImportRulesResponse is the response for listing paginated Okta import rules.
 *
 * @generated from message teleport.okta.v1.ListOktaImportRulesResponse
 */
export type ListOktaImportRulesResponse = Message<"teleport.okta.v1.ListOktaImportRulesResponse"> & {
  /**
   * import_rules is the list of import rules.
   *
   * @generated from field: repeated types.OktaImportRuleV1 import_rules = 1;
   */
  importRules: OktaImportRuleV1[];

  /**
   * next_page_token is the next page token. If there are no more results, it will be empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.okta.v1.ListOktaImportRulesResponse.
 * Use `create(ListOktaImportRulesResponseSchema)` to create a new message.
 */
export const ListOktaImportRulesResponseSchema: GenMessage<ListOktaImportRulesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 14);

/**
 * GetOktaImportRuleRequest is the request for retrieving an Okta import rule.
 *
 * @generated from message teleport.okta.v1.GetOktaImportRuleRequest
 */
export type GetOktaImportRuleRequest = Message<"teleport.okta.v1.GetOktaImportRuleRequest"> & {
  /**
   * name is the name of the Okta import rule.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.okta.v1.GetOktaImportRuleRequest.
 * Use `create(GetOktaImportRuleRequestSchema)` to create a new message.
 */
export const GetOktaImportRuleRequestSchema: GenMessage<GetOktaImportRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 15);

/**
 * CreateOktaImportRuleRequest is a request for creating an Okta import rule.
 *
 * @generated from message teleport.okta.v1.CreateOktaImportRuleRequest
 */
export type CreateOktaImportRuleRequest = Message<"teleport.okta.v1.CreateOktaImportRuleRequest"> & {
  /**
   * import_rule is the Okta import rule to create.
   *
   * @generated from field: types.OktaImportRuleV1 import_rule = 1;
   */
  importRule?: OktaImportRuleV1;
};

/**
 * Describes the message teleport.okta.v1.CreateOktaImportRuleRequest.
 * Use `create(CreateOktaImportRuleRequestSchema)` to create a new message.
 */
export const CreateOktaImportRuleRequestSchema: GenMessage<CreateOktaImportRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 16);

/**
 * UpdateOktaImportRuleRequest is a request for updating an Okta import rule.
 *
 * @generated from message teleport.okta.v1.UpdateOktaImportRuleRequest
 */
export type UpdateOktaImportRuleRequest = Message<"teleport.okta.v1.UpdateOktaImportRuleRequest"> & {
  /**
   * import_rule is the Okta import rule to update.
   *
   * @generated from field: types.OktaImportRuleV1 import_rule = 1;
   */
  importRule?: OktaImportRuleV1;
};

/**
 * Describes the message teleport.okta.v1.UpdateOktaImportRuleRequest.
 * Use `create(UpdateOktaImportRuleRequestSchema)` to create a new message.
 */
export const UpdateOktaImportRuleRequestSchema: GenMessage<UpdateOktaImportRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 17);

/**
 * DeleteOktaImportRuleRequest is the request for deleting an Okta import rule.
 *
 * @generated from message teleport.okta.v1.DeleteOktaImportRuleRequest
 */
export type DeleteOktaImportRuleRequest = Message<"teleport.okta.v1.DeleteOktaImportRuleRequest"> & {
  /**
   * name is the name of the Okta import rule.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.okta.v1.DeleteOktaImportRuleRequest.
 * Use `create(DeleteOktaImportRuleRequestSchema)` to create a new message.
 */
export const DeleteOktaImportRuleRequestSchema: GenMessage<DeleteOktaImportRuleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 18);

/**
 * DeleteAllOktaImportRulesRequest is the request for deleting all Okta import rules.
 *
 * @generated from message teleport.okta.v1.DeleteAllOktaImportRulesRequest
 */
export type DeleteAllOktaImportRulesRequest = Message<"teleport.okta.v1.DeleteAllOktaImportRulesRequest"> & {
};

/**
 * Describes the message teleport.okta.v1.DeleteAllOktaImportRulesRequest.
 * Use `create(DeleteAllOktaImportRulesRequestSchema)` to create a new message.
 */
export const DeleteAllOktaImportRulesRequestSchema: GenMessage<DeleteAllOktaImportRulesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 19);

/**
 * ListOktaAssignmentsRequest is the request for listing paginated Okta assignments.
 *
 * @generated from message teleport.okta.v1.ListOktaAssignmentsRequest
 */
export type ListOktaAssignmentsRequest = Message<"teleport.okta.v1.ListOktaAssignmentsRequest"> & {
  /**
   * page_size is the number of results to return. If page_size is 0, a default page size of 200 will be chosen.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * page_token is the next page token to use when retrieving results.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.okta.v1.ListOktaAssignmentsRequest.
 * Use `create(ListOktaAssignmentsRequestSchema)` to create a new message.
 */
export const ListOktaAssignmentsRequestSchema: GenMessage<ListOktaAssignmentsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 20);

/**
 * ListOktaAssignmentsResponse is the response for listing paginated Okta assignments.
 *
 * @generated from message teleport.okta.v1.ListOktaAssignmentsResponse
 */
export type ListOktaAssignmentsResponse = Message<"teleport.okta.v1.ListOktaAssignmentsResponse"> & {
  /**
   * assignments is the list of assignments.
   *
   * @generated from field: repeated types.OktaAssignmentV1 assignments = 1;
   */
  assignments: OktaAssignmentV1[];

  /**
   * next_page_token is the next page token. If there are no more results, it will be empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.okta.v1.ListOktaAssignmentsResponse.
 * Use `create(ListOktaAssignmentsResponseSchema)` to create a new message.
 */
export const ListOktaAssignmentsResponseSchema: GenMessage<ListOktaAssignmentsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 21);

/**
 * GetOktaAssignmentRequest is the request for retrieving an Okta assignment.
 *
 * @generated from message teleport.okta.v1.GetOktaAssignmentRequest
 */
export type GetOktaAssignmentRequest = Message<"teleport.okta.v1.GetOktaAssignmentRequest"> & {
  /**
   * name is the name of the Okta assignment.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.okta.v1.GetOktaAssignmentRequest.
 * Use `create(GetOktaAssignmentRequestSchema)` to create a new message.
 */
export const GetOktaAssignmentRequestSchema: GenMessage<GetOktaAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 22);

/**
 * CreateOktaAssignmentRequest is a request for creating an Okta assignment.
 *
 * @generated from message teleport.okta.v1.CreateOktaAssignmentRequest
 */
export type CreateOktaAssignmentRequest = Message<"teleport.okta.v1.CreateOktaAssignmentRequest"> & {
  /**
   * assignment is the Okta assignment to create.
   *
   * @generated from field: types.OktaAssignmentV1 assignment = 1;
   */
  assignment?: OktaAssignmentV1;
};

/**
 * Describes the message teleport.okta.v1.CreateOktaAssignmentRequest.
 * Use `create(CreateOktaAssignmentRequestSchema)` to create a new message.
 */
export const CreateOktaAssignmentRequestSchema: GenMessage<CreateOktaAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 23);

/**
 * UpdateOktaAssignmentRequest is a request for updating an Okta assignment.
 *
 * @generated from message teleport.okta.v1.UpdateOktaAssignmentRequest
 */
export type UpdateOktaAssignmentRequest = Message<"teleport.okta.v1.UpdateOktaAssignmentRequest"> & {
  /**
   * assignment is the Okta assignment to update.
   *
   * @generated from field: types.OktaAssignmentV1 assignment = 1;
   */
  assignment?: OktaAssignmentV1;
};

/**
 * Describes the message teleport.okta.v1.UpdateOktaAssignmentRequest.
 * Use `create(UpdateOktaAssignmentRequestSchema)` to create a new message.
 */
export const UpdateOktaAssignmentRequestSchema: GenMessage<UpdateOktaAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 24);

/**
 * UpdateOktaAssignmentStatusRequest is a request for updating an Okta assignment status.
 *
 * @generated from message teleport.okta.v1.UpdateOktaAssignmentStatusRequest
 */
export type UpdateOktaAssignmentStatusRequest = Message<"teleport.okta.v1.UpdateOktaAssignmentStatusRequest"> & {
  /**
   * name is the name of the Okta assignment.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * status is the status to update the assignment to.
   *
   * @generated from field: types.OktaAssignmentSpecV1.OktaAssignmentStatus status = 2;
   */
  status: OktaAssignmentSpecV1_OktaAssignmentStatus;

  /**
   * timeHasPassed is the amount of time that must have passed since the last transition
   * in order to set the new transition.
   *
   * @generated from field: google.protobuf.Duration time_has_passed = 3;
   */
  timeHasPassed?: Duration;
};

/**
 * Describes the message teleport.okta.v1.UpdateOktaAssignmentStatusRequest.
 * Use `create(UpdateOktaAssignmentStatusRequestSchema)` to create a new message.
 */
export const UpdateOktaAssignmentStatusRequestSchema: GenMessage<UpdateOktaAssignmentStatusRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 25);

/**
 * DeleteOktaAssignmentRequest is the request for deleting an Okta assignment.
 *
 * @generated from message teleport.okta.v1.DeleteOktaAssignmentRequest
 */
export type DeleteOktaAssignmentRequest = Message<"teleport.okta.v1.DeleteOktaAssignmentRequest"> & {
  /**
   * name is the name of the Okta assignment.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.okta.v1.DeleteOktaAssignmentRequest.
 * Use `create(DeleteOktaAssignmentRequestSchema)` to create a new message.
 */
export const DeleteOktaAssignmentRequestSchema: GenMessage<DeleteOktaAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 26);

/**
 * DeleteAllOktaAssignmentsRequest is the request for deleting all Okta assignments.
 *
 * @generated from message teleport.okta.v1.DeleteAllOktaAssignmentsRequest
 */
export type DeleteAllOktaAssignmentsRequest = Message<"teleport.okta.v1.DeleteAllOktaAssignmentsRequest"> & {
};

/**
 * Describes the message teleport.okta.v1.DeleteAllOktaAssignmentsRequest.
 * Use `create(DeleteAllOktaAssignmentsRequestSchema)` to create a new message.
 */
export const DeleteAllOktaAssignmentsRequestSchema: GenMessage<DeleteAllOktaAssignmentsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_okta_v1_okta_service, 27);

/**
 * OktaService provides CRUD methods for Okta resources.
 *
 * @generated from service teleport.okta.v1.OktaService
 */
export const OktaService: GenService<{
  /**
   * ListOktaImportRules returns a paginated list of all Okta import rule resources.
   *
   * @generated from rpc teleport.okta.v1.OktaService.ListOktaImportRules
   */
  listOktaImportRules: {
    methodKind: "unary";
    input: typeof ListOktaImportRulesRequestSchema;
    output: typeof ListOktaImportRulesResponseSchema;
  },
  /**
   * GetOktaImportRule returns the specified Okta import rule resources.
   *
   * @generated from rpc teleport.okta.v1.OktaService.GetOktaImportRule
   */
  getOktaImportRule: {
    methodKind: "unary";
    input: typeof GetOktaImportRuleRequestSchema;
    output: typeof OktaImportRuleV1Schema;
  },
  /**
   * CreateOktaImportRule creates a new Okta import rule resource.
   *
   * @generated from rpc teleport.okta.v1.OktaService.CreateOktaImportRule
   */
  createOktaImportRule: {
    methodKind: "unary";
    input: typeof CreateOktaImportRuleRequestSchema;
    output: typeof OktaImportRuleV1Schema;
  },
  /**
   * UpdateOktaImportRule updates an existing Okta import rule resource.
   *
   * @generated from rpc teleport.okta.v1.OktaService.UpdateOktaImportRule
   */
  updateOktaImportRule: {
    methodKind: "unary";
    input: typeof UpdateOktaImportRuleRequestSchema;
    output: typeof OktaImportRuleV1Schema;
  },
  /**
   * DeleteOktaImportRule removes the specified Okta import rule resource.
   *
   * @generated from rpc teleport.okta.v1.OktaService.DeleteOktaImportRule
   */
  deleteOktaImportRule: {
    methodKind: "unary";
    input: typeof DeleteOktaImportRuleRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * DeleteAllOktaImportRules removes all Okta import rules.
   *
   * @generated from rpc teleport.okta.v1.OktaService.DeleteAllOktaImportRules
   */
  deleteAllOktaImportRules: {
    methodKind: "unary";
    input: typeof DeleteAllOktaImportRulesRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * ListOktaAssignments returns a paginated list of all Okta assignment resources.
   *
   * @generated from rpc teleport.okta.v1.OktaService.ListOktaAssignments
   */
  listOktaAssignments: {
    methodKind: "unary";
    input: typeof ListOktaAssignmentsRequestSchema;
    output: typeof ListOktaAssignmentsResponseSchema;
  },
  /**
   * GetOktaAssignment returns the specified Okta assignment resources.
   *
   * @generated from rpc teleport.okta.v1.OktaService.GetOktaAssignment
   */
  getOktaAssignment: {
    methodKind: "unary";
    input: typeof GetOktaAssignmentRequestSchema;
    output: typeof OktaAssignmentV1Schema;
  },
  /**
   * CreateOktaAssignment creates a new Okta assignment resource.
   *
   * @generated from rpc teleport.okta.v1.OktaService.CreateOktaAssignment
   */
  createOktaAssignment: {
    methodKind: "unary";
    input: typeof CreateOktaAssignmentRequestSchema;
    output: typeof OktaAssignmentV1Schema;
  },
  /**
   * UpdateOktaAssignment updates an existing Okta assignment resource.
   *
   * @generated from rpc teleport.okta.v1.OktaService.UpdateOktaAssignment
   */
  updateOktaAssignment: {
    methodKind: "unary";
    input: typeof UpdateOktaAssignmentRequestSchema;
    output: typeof OktaAssignmentV1Schema;
  },
  /**
   * UpdateOktaAssignmentStatus will update the status for an Okta assignment.
   *
   * @generated from rpc teleport.okta.v1.OktaService.UpdateOktaAssignmentStatus
   */
  updateOktaAssignmentStatus: {
    methodKind: "unary";
    input: typeof UpdateOktaAssignmentStatusRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * DeleteOktaAssignment removes the specified Okta assignment resource.
   *
   * @generated from rpc teleport.okta.v1.OktaService.DeleteOktaAssignment
   */
  deleteOktaAssignment: {
    methodKind: "unary";
    input: typeof DeleteOktaAssignmentRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * DeleteAllOktaAssignments removes all Okta assignments.
   *
   * @generated from rpc teleport.okta.v1.OktaService.DeleteAllOktaAssignments
   */
  deleteAllOktaAssignments: {
    methodKind: "unary";
    input: typeof DeleteAllOktaAssignmentsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * ValidateClientCredentials checks if the provided client credentials are valid.
   *
   * @generated from rpc teleport.okta.v1.OktaService.ValidateClientCredentials
   */
  validateClientCredentials: {
    methodKind: "unary";
    input: typeof ValidateClientCredentialsRequestSchema;
    output: typeof ValidateClientCredentialsResponseSchema;
  },
  /**
   * EnrollIntegration enrolls a new integration with the specified parameters.
   *
   * @generated from rpc teleport.okta.v1.OktaService.CreateIntegration
   */
  createIntegration: {
    methodKind: "unary";
    input: typeof CreateIntegrationRequestSchema;
    output: typeof CreateIntegrationResponseSchema;
  },
  /**
   * UpdateIntegration updates the settings or properties of an existing integration.
   *
   * @generated from rpc teleport.okta.v1.OktaService.UpdateIntegration
   */
  updateIntegration: {
    methodKind: "unary";
    input: typeof UpdateIntegrationRequestSchema;
    output: typeof UpdateIntegrationResponseSchema;
  },
  /**
   * GetApps retrieves a list of apps from Okta based on specified filter criteria.
   *
   * @generated from rpc teleport.okta.v1.OktaService.GetApps
   */
  getApps: {
    methodKind: "unary";
    input: typeof GetAppsRequestSchema;
    output: typeof GetAppsResponseSchema;
  },
  /**
   * GetGroups retrieves a list of apps from Okta based on specified filter criteria.
   *
   * @generated from rpc teleport.okta.v1.OktaService.GetGroups
   */
  getGroups: {
    methodKind: "unary";
    input: typeof GetGroupsRequestSchema;
    output: typeof GetGroupsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_okta_v1_okta_service, 0);

