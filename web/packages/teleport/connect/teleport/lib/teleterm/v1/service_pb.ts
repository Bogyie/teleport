//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/lib/teleterm/v1/service.proto (package teleport.lib.teleterm.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { AccessList } from "../../../accesslist/v1/accesslist_pb";
import { file_teleport_accesslist_v1_accesslist } from "../../../accesslist/v1/accesslist_pb";
import type { DeviceConfirmationToken } from "../../../devicetrust/v1/device_confirmation_token_pb";
import { file_teleport_devicetrust_v1_device_confirmation_token } from "../../../devicetrust/v1/device_confirmation_token_pb";
import type { DeviceWebToken } from "../../../devicetrust/v1/device_web_token_pb";
import { file_teleport_devicetrust_v1_device_web_token } from "../../../devicetrust/v1/device_web_token_pb";
import type { AccessRequest, ResourceID } from "./access_request_pb";
import { file_teleport_lib_teleterm_v1_access_request } from "./access_request_pb";
import type { App } from "./app_pb";
import { file_teleport_lib_teleterm_v1_app } from "./app_pb";
import type { AuthSettingsSchema } from "./auth_settings_pb";
import { file_teleport_lib_teleterm_v1_auth_settings } from "./auth_settings_pb";
import type { Cluster, ClusterSchema } from "./cluster_pb";
import { file_teleport_lib_teleterm_v1_cluster } from "./cluster_pb";
import type { Database } from "./database_pb";
import { file_teleport_lib_teleterm_v1_database } from "./database_pb";
import type { Gateway, GatewaySchema } from "./gateway_pb";
import { file_teleport_lib_teleterm_v1_gateway } from "./gateway_pb";
import type { Kube } from "./kube_pb";
import { file_teleport_lib_teleterm_v1_kube } from "./kube_pb";
import type { Server } from "./server_pb";
import { file_teleport_lib_teleterm_v1_server } from "./server_pb";
import type { ReportUsageEventRequestSchema } from "./usage_events_pb";
import { file_teleport_lib_teleterm_v1_usage_events } from "./usage_events_pb";
import type { ClusterUserPreferences } from "../../../userpreferences/v1/cluster_preferences_pb";
import { file_teleport_userpreferences_v1_cluster_preferences } from "../../../userpreferences/v1/cluster_preferences_pb";
import type { UnifiedResourcePreferences } from "../../../userpreferences/v1/unified_resource_preferences_pb";
import { file_teleport_userpreferences_v1_unified_resource_preferences } from "../../../userpreferences/v1/unified_resource_preferences_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/lib/teleterm/v1/service.proto.
 */
export const file_teleport_lib_teleterm_v1_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_teleport_accesslist_v1_accesslist, file_teleport_devicetrust_v1_device_confirmation_token, file_teleport_devicetrust_v1_device_web_token, file_teleport_lib_teleterm_v1_access_request, file_teleport_lib_teleterm_v1_app, file_teleport_lib_teleterm_v1_auth_settings, file_teleport_lib_teleterm_v1_cluster, file_teleport_lib_teleterm_v1_database, file_teleport_lib_teleterm_v1_gateway, file_teleport_lib_teleterm_v1_kube, file_teleport_lib_teleterm_v1_server, file_teleport_lib_teleterm_v1_usage_events, file_teleport_userpreferences_v1_cluster_preferences, file_teleport_userpreferences_v1_unified_resource_preferences]);

/**
 * @generated from message teleport.lib.teleterm.v1.EmptyResponse
 */
export type EmptyResponse = Message<"teleport.lib.teleterm.v1.EmptyResponse"> & {
};

/**
 * Describes the message teleport.lib.teleterm.v1.EmptyResponse.
 * Use `create(EmptyResponseSchema)` to create a new message.
 */
export const EmptyResponseSchema: GenMessage<EmptyResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 0);

/**
 * RemoveClusterRequest describes RemoveClusterRequest
 *
 * @generated from message teleport.lib.teleterm.v1.RemoveClusterRequest
 */
export type RemoveClusterRequest = Message<"teleport.lib.teleterm.v1.RemoveClusterRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.RemoveClusterRequest.
 * Use `create(RemoveClusterRequestSchema)` to create a new message.
 */
export const RemoveClusterRequestSchema: GenMessage<RemoveClusterRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 1);

/**
 * GetClusterRequest describes GetClusterRequest
 *
 * @generated from message teleport.lib.teleterm.v1.GetClusterRequest
 */
export type GetClusterRequest = Message<"teleport.lib.teleterm.v1.GetClusterRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 2);

/**
 * LogoutRequest describes LogoutRequest
 *
 * @generated from message teleport.lib.teleterm.v1.LogoutRequest
 */
export type LogoutRequest = Message<"teleport.lib.teleterm.v1.LogoutRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.LogoutRequest.
 * Use `create(LogoutRequestSchema)` to create a new message.
 */
export const LogoutRequestSchema: GenMessage<LogoutRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 3);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAccessRequestRequest
 */
export type GetAccessRequestRequest = Message<"teleport.lib.teleterm.v1.GetAccessRequestRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * specifcies a specific request id
   *
   * @generated from field: string access_request_id = 2;
   */
  accessRequestId: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAccessRequestRequest.
 * Use `create(GetAccessRequestRequestSchema)` to create a new message.
 */
export const GetAccessRequestRequestSchema: GenMessage<GetAccessRequestRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 4);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAccessRequestsRequest
 */
export type GetAccessRequestsRequest = Message<"teleport.lib.teleterm.v1.GetAccessRequestsRequest"> & {
  /**
   * cluster_uri is the cluster uri
   *
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAccessRequestsRequest.
 * Use `create(GetAccessRequestsRequestSchema)` to create a new message.
 */
export const GetAccessRequestsRequestSchema: GenMessage<GetAccessRequestsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 5);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAccessRequestResponse
 */
export type GetAccessRequestResponse = Message<"teleport.lib.teleterm.v1.GetAccessRequestResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.AccessRequest request = 1;
   */
  request?: AccessRequest;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAccessRequestResponse.
 * Use `create(GetAccessRequestResponseSchema)` to create a new message.
 */
export const GetAccessRequestResponseSchema: GenMessage<GetAccessRequestResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 6);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAccessRequestsResponse
 */
export type GetAccessRequestsResponse = Message<"teleport.lib.teleterm.v1.GetAccessRequestsResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.AccessRequest requests = 1;
   */
  requests: AccessRequest[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAccessRequestsResponse.
 * Use `create(GetAccessRequestsResponseSchema)` to create a new message.
 */
export const GetAccessRequestsResponseSchema: GenMessage<GetAccessRequestsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 7);

/**
 * @generated from message teleport.lib.teleterm.v1.DeleteAccessRequestRequest
 */
export type DeleteAccessRequestRequest = Message<"teleport.lib.teleterm.v1.DeleteAccessRequestRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: string access_request_id = 2;
   */
  accessRequestId: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.DeleteAccessRequestRequest.
 * Use `create(DeleteAccessRequestRequestSchema)` to create a new message.
 */
export const DeleteAccessRequestRequestSchema: GenMessage<DeleteAccessRequestRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 8);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateAccessRequestRequest
 */
export type CreateAccessRequestRequest = Message<"teleport.lib.teleterm.v1.CreateAccessRequestRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * a list of roles requested
   *
   * @generated from field: repeated string roles = 3;
   */
  roles: string[];

  /**
   * suggested_reviewers is a suggested list of reviewers that can review a request.
   *
   * @generated from field: repeated string suggested_reviewers = 4;
   */
  suggestedReviewers: string[];

  /**
   * TODO(avatus) remove the resource_ids field once the changes to rely on resources instead is merged
   * a list of resourceIDs requested in the AccessRequest
   *
   * @generated from field: repeated teleport.lib.teleterm.v1.ResourceID resource_ids = 5;
   */
  resourceIds: ResourceID[];

  /**
   * assume_start_time is the time after which the requested access can be assumed.
   *
   * @generated from field: google.protobuf.Timestamp assume_start_time = 6;
   */
  assumeStartTime?: Timestamp;

  /**
   * dry_run is a flag that indicates whether the request is a dry run to check and set defaults,
   * and return before actually creating the request in the backend.
   *
   * @generated from field: bool dry_run = 7;
   */
  dryRun: boolean;

  /**
   * max_duration is the maximum duration for which the request is valid.
   *
   * @generated from field: google.protobuf.Timestamp max_duration = 8;
   */
  maxDuration?: Timestamp;

  /**
   * request_ttl is the expiration time of the request (how long it will await
   * approval).
   *
   * @generated from field: google.protobuf.Timestamp request_ttl = 9;
   */
  requestTtl?: Timestamp;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateAccessRequestRequest.
 * Use `create(CreateAccessRequestRequestSchema)` to create a new message.
 */
export const CreateAccessRequestRequestSchema: GenMessage<CreateAccessRequestRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 9);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateAccessRequestResponse
 */
export type CreateAccessRequestResponse = Message<"teleport.lib.teleterm.v1.CreateAccessRequestResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.AccessRequest request = 1;
   */
  request?: AccessRequest;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateAccessRequestResponse.
 * Use `create(CreateAccessRequestResponseSchema)` to create a new message.
 */
export const CreateAccessRequestResponseSchema: GenMessage<CreateAccessRequestResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 10);

/**
 * @generated from message teleport.lib.teleterm.v1.AssumeRoleRequest
 */
export type AssumeRoleRequest = Message<"teleport.lib.teleterm.v1.AssumeRoleRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: repeated string access_request_ids = 2;
   */
  accessRequestIds: string[];

  /**
   * @generated from field: repeated string drop_request_ids = 3;
   */
  dropRequestIds: string[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.AssumeRoleRequest.
 * Use `create(AssumeRoleRequestSchema)` to create a new message.
 */
export const AssumeRoleRequestSchema: GenMessage<AssumeRoleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 11);

/**
 * @generated from message teleport.lib.teleterm.v1.GetRequestableRolesRequest
 */
export type GetRequestableRolesRequest = Message<"teleport.lib.teleterm.v1.GetRequestableRolesRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.ResourceID resource_ids = 2;
   */
  resourceIds: ResourceID[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetRequestableRolesRequest.
 * Use `create(GetRequestableRolesRequestSchema)` to create a new message.
 */
export const GetRequestableRolesRequestSchema: GenMessage<GetRequestableRolesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 12);

/**
 * @generated from message teleport.lib.teleterm.v1.GetRequestableRolesResponse
 */
export type GetRequestableRolesResponse = Message<"teleport.lib.teleterm.v1.GetRequestableRolesResponse"> & {
  /**
   * @generated from field: repeated string roles = 1;
   */
  roles: string[];

  /**
   * @generated from field: repeated string applicable_roles = 2;
   */
  applicableRoles: string[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetRequestableRolesResponse.
 * Use `create(GetRequestableRolesResponseSchema)` to create a new message.
 */
export const GetRequestableRolesResponseSchema: GenMessage<GetRequestableRolesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 13);

/**
 * @generated from message teleport.lib.teleterm.v1.ReviewAccessRequestRequest
 */
export type ReviewAccessRequestRequest = Message<"teleport.lib.teleterm.v1.ReviewAccessRequestRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: string state = 2;
   */
  state: string;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;

  /**
   * @generated from field: repeated string roles = 4;
   */
  roles: string[];

  /**
   * @generated from field: string access_request_id = 5;
   */
  accessRequestId: string;

  /**
   * Overwrites the requested start time (optional).
   *
   * @generated from field: google.protobuf.Timestamp assume_start_time = 6;
   */
  assumeStartTime?: Timestamp;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ReviewAccessRequestRequest.
 * Use `create(ReviewAccessRequestRequestSchema)` to create a new message.
 */
export const ReviewAccessRequestRequestSchema: GenMessage<ReviewAccessRequestRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 14);

/**
 * @generated from message teleport.lib.teleterm.v1.ReviewAccessRequestResponse
 */
export type ReviewAccessRequestResponse = Message<"teleport.lib.teleterm.v1.ReviewAccessRequestResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.AccessRequest request = 1;
   */
  request?: AccessRequest;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ReviewAccessRequestResponse.
 * Use `create(ReviewAccessRequestResponseSchema)` to create a new message.
 */
export const ReviewAccessRequestResponseSchema: GenMessage<ReviewAccessRequestResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 15);

/**
 * @generated from message teleport.lib.teleterm.v1.PromoteAccessRequestRequest
 */
export type PromoteAccessRequestRequest = Message<"teleport.lib.teleterm.v1.PromoteAccessRequestRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: string access_list_id = 2;
   */
  accessListId: string;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;

  /**
   * @generated from field: string access_request_id = 4;
   */
  accessRequestId: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.PromoteAccessRequestRequest.
 * Use `create(PromoteAccessRequestRequestSchema)` to create a new message.
 */
export const PromoteAccessRequestRequestSchema: GenMessage<PromoteAccessRequestRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 16);

/**
 * @generated from message teleport.lib.teleterm.v1.PromoteAccessRequestResponse
 */
export type PromoteAccessRequestResponse = Message<"teleport.lib.teleterm.v1.PromoteAccessRequestResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.AccessRequest request = 1;
   */
  request?: AccessRequest;
};

/**
 * Describes the message teleport.lib.teleterm.v1.PromoteAccessRequestResponse.
 * Use `create(PromoteAccessRequestResponseSchema)` to create a new message.
 */
export const PromoteAccessRequestResponseSchema: GenMessage<PromoteAccessRequestResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 17);

/**
 * @generated from message teleport.lib.teleterm.v1.GetSuggestedAccessListsRequest
 */
export type GetSuggestedAccessListsRequest = Message<"teleport.lib.teleterm.v1.GetSuggestedAccessListsRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: string access_request_id = 2;
   */
  accessRequestId: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetSuggestedAccessListsRequest.
 * Use `create(GetSuggestedAccessListsRequestSchema)` to create a new message.
 */
export const GetSuggestedAccessListsRequestSchema: GenMessage<GetSuggestedAccessListsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 18);

/**
 * @generated from message teleport.lib.teleterm.v1.GetSuggestedAccessListsResponse
 */
export type GetSuggestedAccessListsResponse = Message<"teleport.lib.teleterm.v1.GetSuggestedAccessListsResponse"> & {
  /**
   * @generated from field: repeated teleport.accesslist.v1.AccessList access_lists = 1;
   */
  accessLists: AccessList[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetSuggestedAccessListsResponse.
 * Use `create(GetSuggestedAccessListsResponseSchema)` to create a new message.
 */
export const GetSuggestedAccessListsResponseSchema: GenMessage<GetSuggestedAccessListsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 19);

/**
 * CredentialInfo holds fields related to a user's WebAuthn credential.
 *
 * @generated from message teleport.lib.teleterm.v1.CredentialInfo
 */
export type CredentialInfo = Message<"teleport.lib.teleterm.v1.CredentialInfo"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CredentialInfo.
 * Use `create(CredentialInfoSchema)` to create a new message.
 */
export const CredentialInfoSchema: GenMessage<CredentialInfo> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 20);

/**
 * LoginPasswordlessResponse is a message sent by the server during the
 * passwordless login flow.
 *
 * @generated from message teleport.lib.teleterm.v1.LoginPasswordlessResponse
 */
export type LoginPasswordlessResponse = Message<"teleport.lib.teleterm.v1.LoginPasswordlessResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.PasswordlessPrompt prompt = 1;
   */
  prompt: PasswordlessPrompt;

  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.CredentialInfo credentials = 2;
   */
  credentials: CredentialInfo[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginPasswordlessResponse.
 * Use `create(LoginPasswordlessResponseSchema)` to create a new message.
 */
export const LoginPasswordlessResponseSchema: GenMessage<LoginPasswordlessResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 21);

/**
 * LoginPasswordlessRequest is a message sent by the client during the passwordless login flow.
 *
 * @generated from message teleport.lib.teleterm.v1.LoginPasswordlessRequest
 */
export type LoginPasswordlessRequest = Message<"teleport.lib.teleterm.v1.LoginPasswordlessRequest"> & {
  /**
   * @generated from oneof teleport.lib.teleterm.v1.LoginPasswordlessRequest.request
   */
  request: {
    /**
     * @generated from field: teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessRequestInit init = 1;
     */
    value: LoginPasswordlessRequest_LoginPasswordlessRequestInit;
    case: "init";
  } | {
    /**
     * @generated from field: teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessPINResponse pin = 2;
     */
    value: LoginPasswordlessRequest_LoginPasswordlessPINResponse;
    case: "pin";
  } | {
    /**
     * @generated from field: teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessCredentialResponse credential = 3;
     */
    value: LoginPasswordlessRequest_LoginPasswordlessCredentialResponse;
    case: "credential";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginPasswordlessRequest.
 * Use `create(LoginPasswordlessRequestSchema)` to create a new message.
 */
export const LoginPasswordlessRequestSchema: GenMessage<LoginPasswordlessRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 22);

/**
 * LoginPasswordlessRequestInit contains fields needed to init the stream request.
 *
 * @generated from message teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessRequestInit
 */
export type LoginPasswordlessRequest_LoginPasswordlessRequestInit = Message<"teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessRequestInit"> & {
  /**
   * cluster_uri is needed to resolve cluster by its uri.
   *
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessRequestInit.
 * Use `create(LoginPasswordlessRequest_LoginPasswordlessRequestInitSchema)` to create a new message.
 */
export const LoginPasswordlessRequest_LoginPasswordlessRequestInitSchema: GenMessage<LoginPasswordlessRequest_LoginPasswordlessRequestInit> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 22, 0);

/**
 * LoginPasswordlessPINResponse contains fields related to request from webauthncli.PromptPIN.
 *
 * @generated from message teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessPINResponse
 */
export type LoginPasswordlessRequest_LoginPasswordlessPINResponse = Message<"teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessPINResponse"> & {
  /**
   * pin is the user's device's pin.
   *
   * @generated from field: string pin = 1;
   */
  pin: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessPINResponse.
 * Use `create(LoginPasswordlessRequest_LoginPasswordlessPINResponseSchema)` to create a new message.
 */
export const LoginPasswordlessRequest_LoginPasswordlessPINResponseSchema: GenMessage<LoginPasswordlessRequest_LoginPasswordlessPINResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 22, 1);

/**
 * LoginPasswordlessPINResponse contains fields related to request from
 * webauthncli.PromptCredential.
 *
 * @generated from message teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessCredentialResponse
 */
export type LoginPasswordlessRequest_LoginPasswordlessCredentialResponse = Message<"teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessCredentialResponse"> & {
  /**
   * index is the associated number in the list of credentials that the user selected to log
   * in as.
   *
   * @generated from field: int64 index = 1;
   */
  index: bigint;
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginPasswordlessRequest.LoginPasswordlessCredentialResponse.
 * Use `create(LoginPasswordlessRequest_LoginPasswordlessCredentialResponseSchema)` to create a new message.
 */
export const LoginPasswordlessRequest_LoginPasswordlessCredentialResponseSchema: GenMessage<LoginPasswordlessRequest_LoginPasswordlessCredentialResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 22, 2);

/**
 * @generated from message teleport.lib.teleterm.v1.FileTransferRequest
 */
export type FileTransferRequest = Message<"teleport.lib.teleterm.v1.FileTransferRequest"> & {
  /**
   * login is the SSH username to use for the transfer.
   *
   * @generated from field: string login = 2;
   */
  login: string;

  /**
   * source path of the transferred file.
   *
   * @generated from field: string source = 4;
   */
  source: string;

  /**
   * destination path of the transferred file.
   *
   * @generated from field: string destination = 5;
   */
  destination: string;

  /**
   * direction indicates whether the file is uploaded/downloaded.
   *
   * @generated from field: teleport.lib.teleterm.v1.FileTransferDirection direction = 6;
   */
  direction: FileTransferDirection;

  /**
   * @generated from field: string server_uri = 7;
   */
  serverUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.FileTransferRequest.
 * Use `create(FileTransferRequestSchema)` to create a new message.
 */
export const FileTransferRequestSchema: GenMessage<FileTransferRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 23);

/**
 * @generated from message teleport.lib.teleterm.v1.FileTransferProgress
 */
export type FileTransferProgress = Message<"teleport.lib.teleterm.v1.FileTransferProgress"> & {
  /**
   * @generated from field: uint32 percentage = 1;
   */
  percentage: number;
};

/**
 * Describes the message teleport.lib.teleterm.v1.FileTransferProgress.
 * Use `create(FileTransferProgressSchema)` to create a new message.
 */
export const FileTransferProgressSchema: GenMessage<FileTransferProgress> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 24);

/**
 * LoginRequest describes cluster login request
 *
 * @generated from message teleport.lib.teleterm.v1.LoginRequest
 */
export type LoginRequest = Message<"teleport.lib.teleterm.v1.LoginRequest"> & {
  /**
   * cluster_uri is the cluster uri
   *
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from oneof teleport.lib.teleterm.v1.LoginRequest.params
   */
  params: {
    /**
     * local holds parameters for local logins
     *
     * @generated from field: teleport.lib.teleterm.v1.LoginRequest.LocalParams local = 2;
     */
    value: LoginRequest_LocalParams;
    case: "local";
  } | {
    /**
     * sso holds parameters for sso logins
     *
     * @generated from field: teleport.lib.teleterm.v1.LoginRequest.SsoParams sso = 3;
     */
    value: LoginRequest_SsoParams;
    case: "sso";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginRequest.
 * Use `create(LoginRequestSchema)` to create a new message.
 */
export const LoginRequestSchema: GenMessage<LoginRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 25);

/**
 * LocalParams describes parameters for local user logins
 *
 * @generated from message teleport.lib.teleterm.v1.LoginRequest.LocalParams
 */
export type LoginRequest_LocalParams = Message<"teleport.lib.teleterm.v1.LoginRequest.LocalParams"> & {
  /**
   * user is the user name
   *
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * password is the user password
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * token is the 2FA token
   *
   * @generated from field: string token = 3;
   */
  token: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginRequest.LocalParams.
 * Use `create(LoginRequest_LocalParamsSchema)` to create a new message.
 */
export const LoginRequest_LocalParamsSchema: GenMessage<LoginRequest_LocalParams> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 25, 0);

/**
 * SsoParams describes SSO parameters
 *
 * @generated from message teleport.lib.teleterm.v1.LoginRequest.SsoParams
 */
export type LoginRequest_SsoParams = Message<"teleport.lib.teleterm.v1.LoginRequest.SsoParams"> & {
  /**
   * provider_type is the provider type
   *
   * @generated from field: string provider_type = 1;
   */
  providerType: string;

  /**
   * provider_name is the provider name
   *
   * @generated from field: string provider_name = 2;
   */
  providerName: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.LoginRequest.SsoParams.
 * Use `create(LoginRequest_SsoParamsSchema)` to create a new message.
 */
export const LoginRequest_SsoParamsSchema: GenMessage<LoginRequest_SsoParams> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 25, 1);

/**
 * @generated from message teleport.lib.teleterm.v1.AddClusterRequest
 */
export type AddClusterRequest = Message<"teleport.lib.teleterm.v1.AddClusterRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.AddClusterRequest.
 * Use `create(AddClusterRequestSchema)` to create a new message.
 */
export const AddClusterRequestSchema: GenMessage<AddClusterRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 26);

/**
 * @generated from message teleport.lib.teleterm.v1.ListClustersRequest
 */
export type ListClustersRequest = Message<"teleport.lib.teleterm.v1.ListClustersRequest"> & {
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 27);

/**
 * @generated from message teleport.lib.teleterm.v1.ListClustersResponse
 */
export type ListClustersResponse = Message<"teleport.lib.teleterm.v1.ListClustersResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.Cluster clusters = 1;
   */
  clusters: Cluster[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 28);

/**
 * @generated from message teleport.lib.teleterm.v1.GetDatabasesRequest
 */
export type GetDatabasesRequest = Message<"teleport.lib.teleterm.v1.GetDatabasesRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;

  /**
   * @generated from field: string search = 4;
   */
  search: string;

  /**
   * @generated from field: string query = 5;
   */
  query: string;

  /**
   * @generated from field: string sort_by = 6;
   */
  sortBy: string;

  /**
   * @generated from field: string search_as_roles = 7;
   */
  searchAsRoles: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetDatabasesRequest.
 * Use `create(GetDatabasesRequestSchema)` to create a new message.
 */
export const GetDatabasesRequestSchema: GenMessage<GetDatabasesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 29);

/**
 * @generated from message teleport.lib.teleterm.v1.ListLeafClustersRequest
 */
export type ListLeafClustersRequest = Message<"teleport.lib.teleterm.v1.ListLeafClustersRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListLeafClustersRequest.
 * Use `create(ListLeafClustersRequestSchema)` to create a new message.
 */
export const ListLeafClustersRequestSchema: GenMessage<ListLeafClustersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 30);

/**
 * @generated from message teleport.lib.teleterm.v1.ListDatabaseUsersRequest
 */
export type ListDatabaseUsersRequest = Message<"teleport.lib.teleterm.v1.ListDatabaseUsersRequest"> & {
  /**
   * @generated from field: string db_uri = 1;
   */
  dbUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListDatabaseUsersRequest.
 * Use `create(ListDatabaseUsersRequestSchema)` to create a new message.
 */
export const ListDatabaseUsersRequestSchema: GenMessage<ListDatabaseUsersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 31);

/**
 * @generated from message teleport.lib.teleterm.v1.ListDatabaseUsersResponse
 */
export type ListDatabaseUsersResponse = Message<"teleport.lib.teleterm.v1.ListDatabaseUsersResponse"> & {
  /**
   * @generated from field: repeated string users = 1;
   */
  users: string[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListDatabaseUsersResponse.
 * Use `create(ListDatabaseUsersResponseSchema)` to create a new message.
 */
export const ListDatabaseUsersResponseSchema: GenMessage<ListDatabaseUsersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 32);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateGatewayRequest
 */
export type CreateGatewayRequest = Message<"teleport.lib.teleterm.v1.CreateGatewayRequest"> & {
  /**
   * @generated from field: string target_uri = 1;
   */
  targetUri: string;

  /**
   * @generated from field: string target_user = 2;
   */
  targetUser: string;

  /**
   * @generated from field: string local_port = 3;
   */
  localPort: string;

  /**
   * @generated from field: string target_subresource_name = 4;
   */
  targetSubresourceName: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateGatewayRequest.
 * Use `create(CreateGatewayRequestSchema)` to create a new message.
 */
export const CreateGatewayRequestSchema: GenMessage<CreateGatewayRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 33);

/**
 * @generated from message teleport.lib.teleterm.v1.ListGatewaysRequest
 */
export type ListGatewaysRequest = Message<"teleport.lib.teleterm.v1.ListGatewaysRequest"> & {
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListGatewaysRequest.
 * Use `create(ListGatewaysRequestSchema)` to create a new message.
 */
export const ListGatewaysRequestSchema: GenMessage<ListGatewaysRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 34);

/**
 * @generated from message teleport.lib.teleterm.v1.ListGatewaysResponse
 */
export type ListGatewaysResponse = Message<"teleport.lib.teleterm.v1.ListGatewaysResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.Gateway gateways = 1;
   */
  gateways: Gateway[];
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListGatewaysResponse.
 * Use `create(ListGatewaysResponseSchema)` to create a new message.
 */
export const ListGatewaysResponseSchema: GenMessage<ListGatewaysResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 35);

/**
 * @generated from message teleport.lib.teleterm.v1.RemoveGatewayRequest
 */
export type RemoveGatewayRequest = Message<"teleport.lib.teleterm.v1.RemoveGatewayRequest"> & {
  /**
   * @generated from field: string gateway_uri = 1;
   */
  gatewayUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.RemoveGatewayRequest.
 * Use `create(RemoveGatewayRequestSchema)` to create a new message.
 */
export const RemoveGatewayRequestSchema: GenMessage<RemoveGatewayRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 36);

/**
 * @generated from message teleport.lib.teleterm.v1.SetGatewayTargetSubresourceNameRequest
 */
export type SetGatewayTargetSubresourceNameRequest = Message<"teleport.lib.teleterm.v1.SetGatewayTargetSubresourceNameRequest"> & {
  /**
   * @generated from field: string gateway_uri = 1;
   */
  gatewayUri: string;

  /**
   * @generated from field: string target_subresource_name = 2;
   */
  targetSubresourceName: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.SetGatewayTargetSubresourceNameRequest.
 * Use `create(SetGatewayTargetSubresourceNameRequestSchema)` to create a new message.
 */
export const SetGatewayTargetSubresourceNameRequestSchema: GenMessage<SetGatewayTargetSubresourceNameRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 37);

/**
 * @generated from message teleport.lib.teleterm.v1.SetGatewayLocalPortRequest
 */
export type SetGatewayLocalPortRequest = Message<"teleport.lib.teleterm.v1.SetGatewayLocalPortRequest"> & {
  /**
   * @generated from field: string gateway_uri = 1;
   */
  gatewayUri: string;

  /**
   * @generated from field: string local_port = 2;
   */
  localPort: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.SetGatewayLocalPortRequest.
 * Use `create(SetGatewayLocalPortRequestSchema)` to create a new message.
 */
export const SetGatewayLocalPortRequestSchema: GenMessage<SetGatewayLocalPortRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 38);

/**
 * @generated from message teleport.lib.teleterm.v1.GetServersRequest
 */
export type GetServersRequest = Message<"teleport.lib.teleterm.v1.GetServersRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;

  /**
   * @generated from field: string search = 4;
   */
  search: string;

  /**
   * @generated from field: string query = 5;
   */
  query: string;

  /**
   * @generated from field: string sort_by = 6;
   */
  sortBy: string;

  /**
   * @generated from field: string search_as_roles = 7;
   */
  searchAsRoles: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetServersRequest.
 * Use `create(GetServersRequestSchema)` to create a new message.
 */
export const GetServersRequestSchema: GenMessage<GetServersRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 39);

/**
 * @generated from message teleport.lib.teleterm.v1.GetServersResponse
 */
export type GetServersResponse = Message<"teleport.lib.teleterm.v1.GetServersResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.Server agents = 1;
   */
  agents: Server[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetServersResponse.
 * Use `create(GetServersResponseSchema)` to create a new message.
 */
export const GetServersResponseSchema: GenMessage<GetServersResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 40);

/**
 * @generated from message teleport.lib.teleterm.v1.GetDatabasesResponse
 */
export type GetDatabasesResponse = Message<"teleport.lib.teleterm.v1.GetDatabasesResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.Database agents = 1;
   */
  agents: Database[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetDatabasesResponse.
 * Use `create(GetDatabasesResponseSchema)` to create a new message.
 */
export const GetDatabasesResponseSchema: GenMessage<GetDatabasesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 41);

/**
 * @generated from message teleport.lib.teleterm.v1.GetKubesRequest
 */
export type GetKubesRequest = Message<"teleport.lib.teleterm.v1.GetKubesRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;

  /**
   * @generated from field: string search = 4;
   */
  search: string;

  /**
   * @generated from field: string query = 5;
   */
  query: string;

  /**
   * @generated from field: string sort_by = 6;
   */
  sortBy: string;

  /**
   * @generated from field: string search_as_roles = 7;
   */
  searchAsRoles: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetKubesRequest.
 * Use `create(GetKubesRequestSchema)` to create a new message.
 */
export const GetKubesRequestSchema: GenMessage<GetKubesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 42);

/**
 * @generated from message teleport.lib.teleterm.v1.GetKubesResponse
 */
export type GetKubesResponse = Message<"teleport.lib.teleterm.v1.GetKubesResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.Kube agents = 1;
   */
  agents: Kube[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetKubesResponse.
 * Use `create(GetKubesResponseSchema)` to create a new message.
 */
export const GetKubesResponseSchema: GenMessage<GetKubesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 43);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAppsRequest
 */
export type GetAppsRequest = Message<"teleport.lib.teleterm.v1.GetAppsRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;

  /**
   * @generated from field: string search = 4;
   */
  search: string;

  /**
   * @generated from field: string query = 5;
   */
  query: string;

  /**
   * @generated from field: string sort_by = 6;
   */
  sortBy: string;

  /**
   * @generated from field: string search_as_roles = 7;
   */
  searchAsRoles: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAppsRequest.
 * Use `create(GetAppsRequestSchema)` to create a new message.
 */
export const GetAppsRequestSchema: GenMessage<GetAppsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 44);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAppsResponse
 */
export type GetAppsResponse = Message<"teleport.lib.teleterm.v1.GetAppsResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.App agents = 1;
   */
  agents: App[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: string start_key = 3;
   */
  startKey: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAppsResponse.
 * Use `create(GetAppsResponseSchema)` to create a new message.
 */
export const GetAppsResponseSchema: GenMessage<GetAppsResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 45);

/**
 * @generated from message teleport.lib.teleterm.v1.GetAuthSettingsRequest
 */
export type GetAuthSettingsRequest = Message<"teleport.lib.teleterm.v1.GetAuthSettingsRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetAuthSettingsRequest.
 * Use `create(GetAuthSettingsRequestSchema)` to create a new message.
 */
export const GetAuthSettingsRequestSchema: GenMessage<GetAuthSettingsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 46);

/**
 * @generated from message teleport.lib.teleterm.v1.UpdateTshdEventsServerAddressRequest
 */
export type UpdateTshdEventsServerAddressRequest = Message<"teleport.lib.teleterm.v1.UpdateTshdEventsServerAddressRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.UpdateTshdEventsServerAddressRequest.
 * Use `create(UpdateTshdEventsServerAddressRequestSchema)` to create a new message.
 */
export const UpdateTshdEventsServerAddressRequestSchema: GenMessage<UpdateTshdEventsServerAddressRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 47);

/**
 * @generated from message teleport.lib.teleterm.v1.UpdateTshdEventsServerAddressResponse
 */
export type UpdateTshdEventsServerAddressResponse = Message<"teleport.lib.teleterm.v1.UpdateTshdEventsServerAddressResponse"> & {
};

/**
 * Describes the message teleport.lib.teleterm.v1.UpdateTshdEventsServerAddressResponse.
 * Use `create(UpdateTshdEventsServerAddressResponseSchema)` to create a new message.
 */
export const UpdateTshdEventsServerAddressResponseSchema: GenMessage<UpdateTshdEventsServerAddressResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 48);

/**
 * @generated from message teleport.lib.teleterm.v1.UpdateHeadlessAuthenticationStateRequest
 */
export type UpdateHeadlessAuthenticationStateRequest = Message<"teleport.lib.teleterm.v1.UpdateHeadlessAuthenticationStateRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;

  /**
   * @generated from field: string headless_authentication_id = 2;
   */
  headlessAuthenticationId: string;

  /**
   * @generated from field: teleport.lib.teleterm.v1.HeadlessAuthenticationState state = 3;
   */
  state: HeadlessAuthenticationState;
};

/**
 * Describes the message teleport.lib.teleterm.v1.UpdateHeadlessAuthenticationStateRequest.
 * Use `create(UpdateHeadlessAuthenticationStateRequestSchema)` to create a new message.
 */
export const UpdateHeadlessAuthenticationStateRequestSchema: GenMessage<UpdateHeadlessAuthenticationStateRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 49);

/**
 * @generated from message teleport.lib.teleterm.v1.UpdateHeadlessAuthenticationStateResponse
 */
export type UpdateHeadlessAuthenticationStateResponse = Message<"teleport.lib.teleterm.v1.UpdateHeadlessAuthenticationStateResponse"> & {
};

/**
 * Describes the message teleport.lib.teleterm.v1.UpdateHeadlessAuthenticationStateResponse.
 * Use `create(UpdateHeadlessAuthenticationStateResponseSchema)` to create a new message.
 */
export const UpdateHeadlessAuthenticationStateResponseSchema: GenMessage<UpdateHeadlessAuthenticationStateResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 50);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateConnectMyComputerRoleRequest
 */
export type CreateConnectMyComputerRoleRequest = Message<"teleport.lib.teleterm.v1.CreateConnectMyComputerRoleRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateConnectMyComputerRoleRequest.
 * Use `create(CreateConnectMyComputerRoleRequestSchema)` to create a new message.
 */
export const CreateConnectMyComputerRoleRequestSchema: GenMessage<CreateConnectMyComputerRoleRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 51);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateConnectMyComputerRoleResponse
 */
export type CreateConnectMyComputerRoleResponse = Message<"teleport.lib.teleterm.v1.CreateConnectMyComputerRoleResponse"> & {
  /**
   * certs_reloaded signals to the Electron app that tshd has reloaded the certs in order to refresh
   * the role list. The Electron app should refresh the details from the user cert as well.
   *
   * @generated from field: bool certs_reloaded = 1;
   */
  certsReloaded: boolean;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateConnectMyComputerRoleResponse.
 * Use `create(CreateConnectMyComputerRoleResponseSchema)` to create a new message.
 */
export const CreateConnectMyComputerRoleResponseSchema: GenMessage<CreateConnectMyComputerRoleResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 52);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateConnectMyComputerNodeTokenRequest
 */
export type CreateConnectMyComputerNodeTokenRequest = Message<"teleport.lib.teleterm.v1.CreateConnectMyComputerNodeTokenRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateConnectMyComputerNodeTokenRequest.
 * Use `create(CreateConnectMyComputerNodeTokenRequestSchema)` to create a new message.
 */
export const CreateConnectMyComputerNodeTokenRequestSchema: GenMessage<CreateConnectMyComputerNodeTokenRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 53);

/**
 * @generated from message teleport.lib.teleterm.v1.CreateConnectMyComputerNodeTokenResponse
 */
export type CreateConnectMyComputerNodeTokenResponse = Message<"teleport.lib.teleterm.v1.CreateConnectMyComputerNodeTokenResponse"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.CreateConnectMyComputerNodeTokenResponse.
 * Use `create(CreateConnectMyComputerNodeTokenResponseSchema)` to create a new message.
 */
export const CreateConnectMyComputerNodeTokenResponseSchema: GenMessage<CreateConnectMyComputerNodeTokenResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 54);

/**
 * @generated from message teleport.lib.teleterm.v1.WaitForConnectMyComputerNodeJoinRequest
 */
export type WaitForConnectMyComputerNodeJoinRequest = Message<"teleport.lib.teleterm.v1.WaitForConnectMyComputerNodeJoinRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.WaitForConnectMyComputerNodeJoinRequest.
 * Use `create(WaitForConnectMyComputerNodeJoinRequestSchema)` to create a new message.
 */
export const WaitForConnectMyComputerNodeJoinRequestSchema: GenMessage<WaitForConnectMyComputerNodeJoinRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 55);

/**
 * @generated from message teleport.lib.teleterm.v1.WaitForConnectMyComputerNodeJoinResponse
 */
export type WaitForConnectMyComputerNodeJoinResponse = Message<"teleport.lib.teleterm.v1.WaitForConnectMyComputerNodeJoinResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.Server server = 1;
   */
  server?: Server;
};

/**
 * Describes the message teleport.lib.teleterm.v1.WaitForConnectMyComputerNodeJoinResponse.
 * Use `create(WaitForConnectMyComputerNodeJoinResponseSchema)` to create a new message.
 */
export const WaitForConnectMyComputerNodeJoinResponseSchema: GenMessage<WaitForConnectMyComputerNodeJoinResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 56);

/**
 * @generated from message teleport.lib.teleterm.v1.DeleteConnectMyComputerNodeRequest
 */
export type DeleteConnectMyComputerNodeRequest = Message<"teleport.lib.teleterm.v1.DeleteConnectMyComputerNodeRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.DeleteConnectMyComputerNodeRequest.
 * Use `create(DeleteConnectMyComputerNodeRequestSchema)` to create a new message.
 */
export const DeleteConnectMyComputerNodeRequestSchema: GenMessage<DeleteConnectMyComputerNodeRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 57);

/**
 * @generated from message teleport.lib.teleterm.v1.DeleteConnectMyComputerNodeResponse
 */
export type DeleteConnectMyComputerNodeResponse = Message<"teleport.lib.teleterm.v1.DeleteConnectMyComputerNodeResponse"> & {
};

/**
 * Describes the message teleport.lib.teleterm.v1.DeleteConnectMyComputerNodeResponse.
 * Use `create(DeleteConnectMyComputerNodeResponseSchema)` to create a new message.
 */
export const DeleteConnectMyComputerNodeResponseSchema: GenMessage<DeleteConnectMyComputerNodeResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 58);

/**
 * @generated from message teleport.lib.teleterm.v1.GetConnectMyComputerNodeNameRequest
 */
export type GetConnectMyComputerNodeNameRequest = Message<"teleport.lib.teleterm.v1.GetConnectMyComputerNodeNameRequest"> & {
  /**
   * @generated from field: string root_cluster_uri = 1;
   */
  rootClusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetConnectMyComputerNodeNameRequest.
 * Use `create(GetConnectMyComputerNodeNameRequestSchema)` to create a new message.
 */
export const GetConnectMyComputerNodeNameRequestSchema: GenMessage<GetConnectMyComputerNodeNameRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 59);

/**
 * @generated from message teleport.lib.teleterm.v1.GetConnectMyComputerNodeNameResponse
 */
export type GetConnectMyComputerNodeNameResponse = Message<"teleport.lib.teleterm.v1.GetConnectMyComputerNodeNameResponse"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetConnectMyComputerNodeNameResponse.
 * Use `create(GetConnectMyComputerNodeNameResponseSchema)` to create a new message.
 */
export const GetConnectMyComputerNodeNameResponseSchema: GenMessage<GetConnectMyComputerNodeNameResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 60);

/**
 * @generated from message teleport.lib.teleterm.v1.ListUnifiedResourcesRequest
 */
export type ListUnifiedResourcesRequest = Message<"teleport.lib.teleterm.v1.ListUnifiedResourcesRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * A list of kinds to match against a resource's kind. This can be used in a
   * unified resource request that can include multiple types.
   *
   * @generated from field: repeated string kinds = 2;
   */
  kinds: string[];

  /**
   * The maximum number of resources to retrieve.
   *
   * @generated from field: int32 limit = 3;
   */
  limit: number;

  /**
   * Starts listing resources from a specific spot.
   * It should be set to the next_key from ListUnifiedResourcesResponse if
   * using pagination, or left empty.
   *
   * @generated from field: string start_key = 4;
   */
  startKey: string;

  /**
   * If defined, the advanced search is used. The search field should be left empty.
   *
   * @generated from field: string query = 5;
   */
  query: string;

  /**
   * If defined, the regular search is used. The query field should be left empty.
   *
   * @generated from field: string search = 6;
   */
  search: string;

  /**
   * SortBy describes which resource field and which direction to sort by.
   *
   * @generated from field: teleport.lib.teleterm.v1.SortBy sort_by = 7;
   */
  sortBy?: SortBy;

  /**
   * When true, all resources that the user can request access to are returned.
   *
   * @generated from field: bool search_as_roles = 8;
   */
  searchAsRoles: boolean;

  /**
   * Only the pinned resources will be returned for the requesting user.
   *
   * @generated from field: bool pinned_only = 9;
   */
  pinnedOnly: boolean;

  /**
   * include_requestable indicates that the response should include resources that the user must request access to.
   *
   * @generated from field: bool include_requestable = 10;
   */
  includeRequestable: boolean;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListUnifiedResourcesRequest.
 * Use `create(ListUnifiedResourcesRequestSchema)` to create a new message.
 */
export const ListUnifiedResourcesRequestSchema: GenMessage<ListUnifiedResourcesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 61);

/**
 * @generated from message teleport.lib.teleterm.v1.SortBy
 */
export type SortBy = Message<"teleport.lib.teleterm.v1.SortBy"> & {
  /**
   * A sort direction flag where if true the direction is descending, else ascending.
   *
   * @generated from field: bool is_desc = 1;
   */
  isDesc: boolean;

  /**
   * Name of an object's field to sort by. Resources can be sorted by name and kind.
   *
   * @generated from field: string field = 2;
   */
  field: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.SortBy.
 * Use `create(SortBySchema)` to create a new message.
 */
export const SortBySchema: GenMessage<SortBy> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 62);

/**
 * @generated from message teleport.lib.teleterm.v1.ListUnifiedResourcesResponse
 */
export type ListUnifiedResourcesResponse = Message<"teleport.lib.teleterm.v1.ListUnifiedResourcesResponse"> & {
  /**
   * @generated from field: repeated teleport.lib.teleterm.v1.PaginatedResource resources = 1;
   */
  resources: PaginatedResource[];

  /**
   * A key to use as start_key in a ListResourcesRequest to continue retrieving
   * the next pages. If it is empty, there are no more pages.
   *
   * @generated from field: string next_key = 2;
   */
  nextKey: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ListUnifiedResourcesResponse.
 * Use `create(ListUnifiedResourcesResponseSchema)` to create a new message.
 */
export const ListUnifiedResourcesResponseSchema: GenMessage<ListUnifiedResourcesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 63);

/**
 * @generated from message teleport.lib.teleterm.v1.PaginatedResource
 */
export type PaginatedResource = Message<"teleport.lib.teleterm.v1.PaginatedResource"> & {
  /**
   * @generated from oneof teleport.lib.teleterm.v1.PaginatedResource.resource
   */
  resource: {
    /**
     * @generated from field: teleport.lib.teleterm.v1.Database database = 1;
     */
    value: Database;
    case: "database";
  } | {
    /**
     * @generated from field: teleport.lib.teleterm.v1.Server server = 2;
     */
    value: Server;
    case: "server";
  } | {
    /**
     * @generated from field: teleport.lib.teleterm.v1.Kube kube = 3;
     */
    value: Kube;
    case: "kube";
  } | {
    /**
     * @generated from field: teleport.lib.teleterm.v1.App app = 4;
     */
    value: App;
    case: "app";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool requires_request = 5;
   */
  requiresRequest: boolean;
};

/**
 * Describes the message teleport.lib.teleterm.v1.PaginatedResource.
 * Use `create(PaginatedResourceSchema)` to create a new message.
 */
export const PaginatedResourceSchema: GenMessage<PaginatedResource> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 64);

/**
 * @generated from message teleport.lib.teleterm.v1.GetUserPreferencesRequest
 */
export type GetUserPreferencesRequest = Message<"teleport.lib.teleterm.v1.GetUserPreferencesRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetUserPreferencesRequest.
 * Use `create(GetUserPreferencesRequestSchema)` to create a new message.
 */
export const GetUserPreferencesRequestSchema: GenMessage<GetUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 65);

/**
 * @generated from message teleport.lib.teleterm.v1.GetUserPreferencesResponse
 */
export type GetUserPreferencesResponse = Message<"teleport.lib.teleterm.v1.GetUserPreferencesResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.UserPreferences user_preferences = 1;
   */
  userPreferences?: UserPreferences;
};

/**
 * Describes the message teleport.lib.teleterm.v1.GetUserPreferencesResponse.
 * Use `create(GetUserPreferencesResponseSchema)` to create a new message.
 */
export const GetUserPreferencesResponseSchema: GenMessage<GetUserPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 66);

/**
 * @generated from message teleport.lib.teleterm.v1.UpdateUserPreferencesRequest
 */
export type UpdateUserPreferencesRequest = Message<"teleport.lib.teleterm.v1.UpdateUserPreferencesRequest"> & {
  /**
   * @generated from field: string cluster_uri = 1;
   */
  clusterUri: string;

  /**
   * @generated from field: teleport.lib.teleterm.v1.UserPreferences user_preferences = 2;
   */
  userPreferences?: UserPreferences;
};

/**
 * Describes the message teleport.lib.teleterm.v1.UpdateUserPreferencesRequest.
 * Use `create(UpdateUserPreferencesRequestSchema)` to create a new message.
 */
export const UpdateUserPreferencesRequestSchema: GenMessage<UpdateUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 67);

/**
 * @generated from message teleport.lib.teleterm.v1.UpdateUserPreferencesResponse
 */
export type UpdateUserPreferencesResponse = Message<"teleport.lib.teleterm.v1.UpdateUserPreferencesResponse"> & {
  /**
   * @generated from field: teleport.lib.teleterm.v1.UserPreferences user_preferences = 1;
   */
  userPreferences?: UserPreferences;
};

/**
 * Describes the message teleport.lib.teleterm.v1.UpdateUserPreferencesResponse.
 * Use `create(UpdateUserPreferencesResponseSchema)` to create a new message.
 */
export const UpdateUserPreferencesResponseSchema: GenMessage<UpdateUserPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 68);

/**
 * UserPreferences is a subset of teleport.userpreferences.v1.UserPreferences.
 * It contains preferences that are relevant to Connect.
 *
 * @generated from message teleport.lib.teleterm.v1.UserPreferences
 */
export type UserPreferences = Message<"teleport.lib.teleterm.v1.UserPreferences"> & {
  /**
   * @generated from field: teleport.userpreferences.v1.ClusterUserPreferences cluster_preferences = 1;
   */
  clusterPreferences?: ClusterUserPreferences;

  /**
   * @generated from field: teleport.userpreferences.v1.UnifiedResourcePreferences unified_resource_preferences = 2;
   */
  unifiedResourcePreferences?: UnifiedResourcePreferences;
};

/**
 * Describes the message teleport.lib.teleterm.v1.UserPreferences.
 * Use `create(UserPreferencesSchema)` to create a new message.
 */
export const UserPreferencesSchema: GenMessage<UserPreferences> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 69);

/**
 * Request for AuthenticateWebDevice.
 *
 * @generated from message teleport.lib.teleterm.v1.AuthenticateWebDeviceRequest
 */
export type AuthenticateWebDeviceRequest = Message<"teleport.lib.teleterm.v1.AuthenticateWebDeviceRequest"> & {
  /**
   * Device web token to be spent in exchange for the device authentication
   * attempt.
   *
   * @generated from field: teleport.devicetrust.v1.DeviceWebToken device_web_token = 1;
   */
  deviceWebToken?: DeviceWebToken;

  /**
   * @generated from field: string root_cluster_uri = 2;
   */
  rootClusterUri: string;
};

/**
 * Describes the message teleport.lib.teleterm.v1.AuthenticateWebDeviceRequest.
 * Use `create(AuthenticateWebDeviceRequestSchema)` to create a new message.
 */
export const AuthenticateWebDeviceRequestSchema: GenMessage<AuthenticateWebDeviceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 70);

/**
 * Response for AuthenticateWebDevice.
 *
 * @generated from message teleport.lib.teleterm.v1.AuthenticateWebDeviceResponse
 */
export type AuthenticateWebDeviceResponse = Message<"teleport.lib.teleterm.v1.AuthenticateWebDeviceResponse"> & {
  /**
   * Device confirmation token to be sent to the browser that originated the
   * authentication attempt.
   *
   * @generated from field: teleport.devicetrust.v1.DeviceConfirmationToken confirmation_token = 1;
   */
  confirmationToken?: DeviceConfirmationToken;
};

/**
 * Describes the message teleport.lib.teleterm.v1.AuthenticateWebDeviceResponse.
 * Use `create(AuthenticateWebDeviceResponseSchema)` to create a new message.
 */
export const AuthenticateWebDeviceResponseSchema: GenMessage<AuthenticateWebDeviceResponse> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_service, 71);

/**
 * PasswordlessPrompt describes different prompts we need from users
 * during the passwordless login flow.
 *
 * @generated from enum teleport.lib.teleterm.v1.PasswordlessPrompt
 */
export enum PasswordlessPrompt {
  /**
   * @generated from enum value: PASSWORDLESS_PROMPT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * PASSWORDLESS_PROMPT_PIN is used when we need a user's pin.
   *
   * @generated from enum value: PASSWORDLESS_PROMPT_PIN = 1;
   */
  PIN = 1,

  /**
   * PASSWORDLESS_PROMPT_TAP is used when we require a user to tap their device.
   *
   * @generated from enum value: PASSWORDLESS_PROMPT_TAP = 2;
   */
  TAP = 2,

  /**
   * PASSWORDLESS_PROMPT_CREDENTIAL is used when we require a user to select a username
   * associated with their account.
   *
   * @generated from enum value: PASSWORDLESS_PROMPT_CREDENTIAL = 3;
   */
  CREDENTIAL = 3,
}

/**
 * Describes the enum teleport.lib.teleterm.v1.PasswordlessPrompt.
 */
export const PasswordlessPromptSchema: GenEnum<PasswordlessPrompt> = /*@__PURE__*/
  enumDesc(file_teleport_lib_teleterm_v1_service, 0);

/**
 * FileTransferDirection describes directions of a file transfer
 *
 * @generated from enum teleport.lib.teleterm.v1.FileTransferDirection
 */
export enum FileTransferDirection {
  /**
   * @generated from enum value: FILE_TRANSFER_DIRECTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FILE_TRANSFER_DIRECTION_DOWNLOAD = 1;
   */
  DOWNLOAD = 1,

  /**
   * @generated from enum value: FILE_TRANSFER_DIRECTION_UPLOAD = 2;
   */
  UPLOAD = 2,
}

/**
 * Describes the enum teleport.lib.teleterm.v1.FileTransferDirection.
 */
export const FileTransferDirectionSchema: GenEnum<FileTransferDirection> = /*@__PURE__*/
  enumDesc(file_teleport_lib_teleterm_v1_service, 1);

/**
 * HeadlessAuthenticationState is a headless authentication state.
 *
 * @generated from enum teleport.lib.teleterm.v1.HeadlessAuthenticationState
 */
export enum HeadlessAuthenticationState {
  /**
   * @generated from enum value: HEADLESS_AUTHENTICATION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: HEADLESS_AUTHENTICATION_STATE_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: HEADLESS_AUTHENTICATION_STATE_DENIED = 2;
   */
  DENIED = 2,

  /**
   * @generated from enum value: HEADLESS_AUTHENTICATION_STATE_APPROVED = 3;
   */
  APPROVED = 3,
}

/**
 * Describes the enum teleport.lib.teleterm.v1.HeadlessAuthenticationState.
 */
export const HeadlessAuthenticationStateSchema: GenEnum<HeadlessAuthenticationState> = /*@__PURE__*/
  enumDesc(file_teleport_lib_teleterm_v1_service, 2);

/**
 * TerminalService is used by the Electron app to communicate with the tsh daemon.
 *
 * While we aim to preserve backwards compatibility in order to satisfy CI checks and follow the
 * proto practices used within the company, this service is not guaranteed to be stable across
 * versions. The packaging process of Teleport Connect ensures that the server and the client use
 * the same version of the service.
 *
 * @generated from service teleport.lib.teleterm.v1.TerminalService
 */
export const TerminalService: GenService<{
  /**
   * UpdateTshdEventsServerAddress lets the Electron app update the address the tsh daemon is
   * supposed to use when connecting to the tshd events gRPC service. This RPC needs to be made
   * before any other from this service.
   *
   * The service is supposed to return a response from this call only after the client is ready.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.UpdateTshdEventsServerAddress
   */
  updateTshdEventsServerAddress: {
    methodKind: "unary";
    input: typeof UpdateTshdEventsServerAddressRequestSchema;
    output: typeof UpdateTshdEventsServerAddressResponseSchema;
  },
  /**
   * ListRootClusters lists root clusters
   * Does not include detailed cluster information that would require a network request.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ListRootClusters
   */
  listRootClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * ListLeafClusters lists leaf clusters
   * Does not include detailed cluster information that would require a network request.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ListLeafClusters
   */
  listLeafClusters: {
    methodKind: "unary";
    input: typeof ListLeafClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * GetDatabases returns a filtered and paginated list of databases
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetDatabases
   */
  getDatabases: {
    methodKind: "unary";
    input: typeof GetDatabasesRequestSchema;
    output: typeof GetDatabasesResponseSchema;
  },
  /**
   * ListDatabaseUsers lists allowed users for the given database based on the role set.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ListDatabaseUsers
   */
  listDatabaseUsers: {
    methodKind: "unary";
    input: typeof ListDatabaseUsersRequestSchema;
    output: typeof ListDatabaseUsersResponseSchema;
  },
  /**
   * GetServers returns filtered, sorted, and paginated servers
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetServers
   */
  getServers: {
    methodKind: "unary";
    input: typeof GetServersRequestSchema;
    output: typeof GetServersResponseSchema;
  },
  /**
   * GetAccessRequests lists filtered AccessRequests
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetAccessRequests
   */
  getAccessRequests: {
    methodKind: "unary";
    input: typeof GetAccessRequestsRequestSchema;
    output: typeof GetAccessRequestsResponseSchema;
  },
  /**
   * GetAccessRequest retreives a single Access Request
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetAccessRequest
   */
  getAccessRequest: {
    methodKind: "unary";
    input: typeof GetAccessRequestRequestSchema;
    output: typeof GetAccessRequestResponseSchema;
  },
  /**
   * DeleteAccessRequest deletes the access request by id
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.DeleteAccessRequest
   */
  deleteAccessRequest: {
    methodKind: "unary";
    input: typeof DeleteAccessRequestRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * CreateAccessRequest creates an access request
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.CreateAccessRequest
   */
  createAccessRequest: {
    methodKind: "unary";
    input: typeof CreateAccessRequestRequestSchema;
    output: typeof CreateAccessRequestResponseSchema;
  },
  /**
   * ReviewAccessRequest submits a review for an Access Request
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ReviewAccessRequest
   */
  reviewAccessRequest: {
    methodKind: "unary";
    input: typeof ReviewAccessRequestRequestSchema;
    output: typeof ReviewAccessRequestResponseSchema;
  },
  /**
   * GetRequestableRoles gets all requestable roles
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetRequestableRoles
   */
  getRequestableRoles: {
    methodKind: "unary";
    input: typeof GetRequestableRolesRequestSchema;
    output: typeof GetRequestableRolesResponseSchema;
  },
  /**
   * AssumeRole assumes the role of the given access request
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.AssumeRole
   */
  assumeRole: {
    methodKind: "unary";
    input: typeof AssumeRoleRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * PromoteAccessRequest promotes an access request to an access list.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.PromoteAccessRequest
   */
  promoteAccessRequest: {
    methodKind: "unary";
    input: typeof PromoteAccessRequestRequestSchema;
    output: typeof PromoteAccessRequestResponseSchema;
  },
  /**
   * GetSuggestedAccessLists returns suggested access lists for an access request.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetSuggestedAccessLists
   */
  getSuggestedAccessLists: {
    methodKind: "unary";
    input: typeof GetSuggestedAccessListsRequestSchema;
    output: typeof GetSuggestedAccessListsResponseSchema;
  },
  /**
   * GetKubes returns filtered, sorted, and paginated kubes
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetKubes
   */
  getKubes: {
    methodKind: "unary";
    input: typeof GetKubesRequestSchema;
    output: typeof GetKubesResponseSchema;
  },
  /**
   * GetApps returns a filtered and paginated list of apps.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetApps
   */
  getApps: {
    methodKind: "unary";
    input: typeof GetAppsRequestSchema;
    output: typeof GetAppsResponseSchema;
  },
  /**
   * AddCluster adds a cluster to profile
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.AddCluster
   */
  addCluster: {
    methodKind: "unary";
    input: typeof AddClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * RemoveCluster removes a cluster from profile
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.RemoveCluster
   */
  removeCluster: {
    methodKind: "unary";
    input: typeof RemoveClusterRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * ListGateways lists gateways
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ListGateways
   */
  listGateways: {
    methodKind: "unary";
    input: typeof ListGatewaysRequestSchema;
    output: typeof ListGatewaysResponseSchema;
  },
  /**
   * CreateGateway creates a gateway
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.CreateGateway
   */
  createGateway: {
    methodKind: "unary";
    input: typeof CreateGatewayRequestSchema;
    output: typeof GatewaySchema;
  },
  /**
   * RemoveGateway removes a gateway
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.RemoveGateway
   */
  removeGateway: {
    methodKind: "unary";
    input: typeof RemoveGatewayRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * SetGatewayTargetSubresourceName changes the TargetSubresourceName field of gateway.Gateway
   * and returns the updated version of gateway.Gateway.
   *
   * In Connect this is used to update the db name of a db connection along with the CLI command.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.SetGatewayTargetSubresourceName
   */
  setGatewayTargetSubresourceName: {
    methodKind: "unary";
    input: typeof SetGatewayTargetSubresourceNameRequestSchema;
    output: typeof GatewaySchema;
  },
  /**
   * SetGatewayLocalPort starts a new gateway on the new port, stops the old gateway and then
   * assigns the URI of the old gateway to the new one. It does so without fetching a new db cert.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.SetGatewayLocalPort
   */
  setGatewayLocalPort: {
    methodKind: "unary";
    input: typeof SetGatewayLocalPortRequestSchema;
    output: typeof GatewaySchema;
  },
  /**
   * GetAuthSettings returns cluster auth settigns
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetAuthSettings
   */
  getAuthSettings: {
    methodKind: "unary";
    input: typeof GetAuthSettingsRequestSchema;
    output: typeof AuthSettingsSchema;
  },
  /**
   * GetCluster returns cluster. Makes a network request and includes detailed
   * information about enterprise features availabed on the connected auth server
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * Login logs in a user to a cluster
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.Login
   */
  login: {
    methodKind: "unary";
    input: typeof LoginRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * LoginPasswordless logs in a user to a cluster passwordlessly.
   *
   * The RPC is streaming both ways and the message sequence example for hardware keys are:
   * (-> means client-to-server, <- means server-to-client)
   *
   * Hardware keys:
   * -> Init
   * <- Send PasswordlessPrompt enum TAP to choose a device
   * -> Receive TAP device response
   * <- Send PasswordlessPrompt enum PIN
   * -> Receive PIN response
   * <- Send PasswordlessPrompt enum RETAP to confirm
   * -> Receive RETAP device response
   * <- Send list of credentials (e.g. usernames) associated with device
   * -> Receive the index number associated with the selected credential in list
   * <- End
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.LoginPasswordless
   */
  loginPasswordless: {
    methodKind: "bidi_streaming";
    input: typeof LoginPasswordlessRequestSchema;
    output: typeof LoginPasswordlessResponseSchema;
  },
  /**
   * ClusterLogin logs out a user from cluster
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.Logout
   */
  logout: {
    methodKind: "unary";
    input: typeof LogoutRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * TransferFile sends a request to download/upload a file
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.TransferFile
   */
  transferFile: {
    methodKind: "server_streaming";
    input: typeof FileTransferRequestSchema;
    output: typeof FileTransferProgressSchema;
  },
  /**
   * ReportUsageEvent allows to send usage events that are then anonymized and forwarded to prehog
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ReportUsageEvent
   */
  reportUsageEvent: {
    methodKind: "unary";
    input: typeof ReportUsageEventRequestSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * UpdateHeadlessAuthenticationState updates a headless authentication resource's state.
   * An MFA challenge will be prompted when approving a headless authentication.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.UpdateHeadlessAuthenticationState
   */
  updateHeadlessAuthenticationState: {
    methodKind: "unary";
    input: typeof UpdateHeadlessAuthenticationStateRequestSchema;
    output: typeof UpdateHeadlessAuthenticationStateResponseSchema;
  },
  /**
   * CreateConnectMyComputerRole creates a role which allows access to nodes with the label
   * teleport.dev/connect-my-computer/owner: <cluster user> and allows logging in to those nodes as
   * the current system user.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.CreateConnectMyComputerRole
   */
  createConnectMyComputerRole: {
    methodKind: "unary";
    input: typeof CreateConnectMyComputerRoleRequestSchema;
    output: typeof CreateConnectMyComputerRoleResponseSchema;
  },
  /**
   * CreateConnectMyComputerNodeToken creates a node join token that is valid for 5 minutes
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.CreateConnectMyComputerNodeToken
   */
  createConnectMyComputerNodeToken: {
    methodKind: "unary";
    input: typeof CreateConnectMyComputerNodeTokenRequestSchema;
    output: typeof CreateConnectMyComputerNodeTokenResponseSchema;
  },
  /**
   * WaitForConnectMyComputerNodeJoin sets up a watcher and returns a response only after detecting
   * that the Connect My Computer node for the particular cluster has joined the cluster (the
   * OpPut event).
   *
   * This RPC times out by itself after a minute to prevent the request from hanging forever, in
   * case the client didn't set a deadline or doesn't abort the request.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.WaitForConnectMyComputerNodeJoin
   */
  waitForConnectMyComputerNodeJoin: {
    methodKind: "unary";
    input: typeof WaitForConnectMyComputerNodeJoinRequestSchema;
    output: typeof WaitForConnectMyComputerNodeJoinResponseSchema;
  },
  /**
   * DeleteConnectMyComputerNode deletes the Connect My Computer node.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.DeleteConnectMyComputerNode
   */
  deleteConnectMyComputerNode: {
    methodKind: "unary";
    input: typeof DeleteConnectMyComputerNodeRequestSchema;
    output: typeof DeleteConnectMyComputerNodeResponseSchema;
  },
  /**
   * GetConnectMyComputerNodeName reads the Connect My Computer node name (UUID) from a disk.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetConnectMyComputerNodeName
   */
  getConnectMyComputerNodeName: {
    methodKind: "unary";
    input: typeof GetConnectMyComputerNodeNameRequestSchema;
    output: typeof GetConnectMyComputerNodeNameResponseSchema;
  },
  /**
   * ListUnifiedResources retrieves a paginated list of all resource types displayable in the UI.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.ListUnifiedResources
   */
  listUnifiedResources: {
    methodKind: "unary";
    input: typeof ListUnifiedResourcesRequestSchema;
    output: typeof ListUnifiedResourcesResponseSchema;
  },
  /**
   * GetUserPreferences returns the combined (root + leaf cluster) preferences for a given user.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.GetUserPreferences
   */
  getUserPreferences: {
    methodKind: "unary";
    input: typeof GetUserPreferencesRequestSchema;
    output: typeof GetUserPreferencesResponseSchema;
  },
  /**
   * UpdateUserPreferences updates the preferences for a given user in appropriate root and leaf clusters.
   * Only the properties that are set (cluster_preferences, unified_resource_preferences) will be updated.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.UpdateUserPreferences
   */
  updateUserPreferences: {
    methodKind: "unary";
    input: typeof UpdateUserPreferencesRequestSchema;
    output: typeof UpdateUserPreferencesResponseSchema;
  },
  /**
   * AuthenticateWebDevice blesses a web session with device trust by performing
   * the on-behalf-of device authentication ceremony.
   *
   * See
   * https://github.com/gravitational/teleport.e/blob/master/rfd/0009e-device-trust-web-support.md#device-web-authentication.
   *
   * @generated from rpc teleport.lib.teleterm.v1.TerminalService.AuthenticateWebDevice
   */
  authenticateWebDevice: {
    methodKind: "unary";
    input: typeof AuthenticateWebDeviceRequestSchema;
    output: typeof AuthenticateWebDeviceResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_lib_teleterm_v1_service, 0);

