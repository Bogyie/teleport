//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/lib/teleterm/v1/usage_events.proto (package teleport.lib.teleterm.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { SubmitConnectEventRequest } from "../../../../prehog/v1alpha/connect_pb";
import { file_prehog_v1alpha_connect } from "../../../../prehog/v1alpha/connect_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/lib/teleterm/v1/usage_events.proto.
 */
export const file_teleport_lib_teleterm_v1_usage_events: GenFile = /*@__PURE__*/
  fileDesc("Cit0ZWxlcG9ydC9saWIvdGVsZXRlcm0vdjEvdXNhZ2VfZXZlbnRzLnByb3RvEhh0ZWxlcG9ydC5saWIudGVsZXRlcm0udjEicQoXUmVwb3J0VXNhZ2VFdmVudFJlcXVlc3QSFwoPYXV0aF9jbHVzdGVyX2lkGAEgASgJEj0KCnByZWhvZ19yZXEYAiABKAsyKS5wcmVob2cudjFhbHBoYS5TdWJtaXRDb25uZWN0RXZlbnRSZXF1ZXN0QlRaUmdpdGh1Yi5jb20vZ3Jhdml0YXRpb25hbC90ZWxlcG9ydC9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvbGliL3RlbGV0ZXJtL3YxO3RlbGV0ZXJtdjFiBnByb3RvMw", [file_prehog_v1alpha_connect]);

/**
 * @generated from message teleport.lib.teleterm.v1.ReportUsageEventRequest
 */
export type ReportUsageEventRequest = Message<"teleport.lib.teleterm.v1.ReportUsageEventRequest"> & {
  /**
   * @generated from field: string auth_cluster_id = 1;
   */
  authClusterId: string;

  /**
   * @generated from field: prehog.v1alpha.SubmitConnectEventRequest prehog_req = 2;
   */
  prehogReq?: SubmitConnectEventRequest;
};

/**
 * Describes the message teleport.lib.teleterm.v1.ReportUsageEventRequest.
 * Use `create(ReportUsageEventRequestSchema)` to create a new message.
 */
export const ReportUsageEventRequestSchema: GenMessage<ReportUsageEventRequest> = /*@__PURE__*/
  messageDesc(file_teleport_lib_teleterm_v1_usage_events, 0);

