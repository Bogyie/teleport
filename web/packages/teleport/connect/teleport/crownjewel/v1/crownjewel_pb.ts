// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/crownjewel/v1/crownjewel.proto (package teleport.crownjewel.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { StringValue } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Metadata } from "../../header/v1/metadata_pb";
import { file_teleport_header_v1_metadata } from "../../header/v1/metadata_pb";
import type { Label } from "../../label/v1/label_pb";
import { file_teleport_label_v1_label } from "../../label/v1/label_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/crownjewel/v1/crownjewel.proto.
 */
export const file_teleport_crownjewel_v1_crownjewel: GenFile = /*@__PURE__*/
  fileDesc("Cid0ZWxlcG9ydC9jcm93bmpld2VsL3YxL2Nyb3duamV3ZWwucHJvdG8SFnRlbGVwb3J0LmNyb3duamV3ZWwudjEiowEKCkNyb3duSmV3ZWwSDAoEa2luZBgBIAEoCRIQCghzdWJfa2luZBgCIAEoCRIPCgd2ZXJzaW9uGAMgASgJEi4KCG1ldGFkYXRhGAQgASgLMhwudGVsZXBvcnQuaGVhZGVyLnYxLk1ldGFkYXRhEjQKBHNwZWMYBSABKAsyJi50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkNyb3duSmV3ZWxTcGVjIp0BCg5Dcm93bkpld2VsU3BlYxJCChF0ZWxlcG9ydF9tYXRjaGVycxgBIAMoCzInLnRlbGVwb3J0LmNyb3duamV3ZWwudjEuVGVsZXBvcnRNYXRjaGVyEjgKDGF3c19tYXRjaGVycxgCIAMoCzIiLnRlbGVwb3J0LmNyb3duamV3ZWwudjEuQVdTTWF0Y2hlchINCgVxdWVyeRgDIAEoCSJlCg9UZWxlcG9ydE1hdGNoZXISDQoFa2luZHMYAiADKAkSKAoGbGFiZWxzGAMgAygLMhgudGVsZXBvcnQubGFiZWwudjEuTGFiZWwSDQoFbmFtZXMYBCADKAlKBAgBEAJSBG5hbWUicwoKQVdTTWF0Y2hlchINCgV0eXBlcxgBIAMoCRIPCgdyZWdpb25zGAIgAygJEiwKBHRhZ3MYAyADKAsyHi50ZWxlcG9ydC5jcm93bmpld2VsLnYxLkFXU1RhZxIMCgRhcm5zGAUgAygJSgQIBBAFUgNhcm4iQwoGQVdTVGFnEgsKA2tleRgBIAEoCRIsCgZ2YWx1ZXMYAiADKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVCWFpWZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvY3Jvd25qZXdlbC92MTtjcm93bmpld2VsdjFiBnByb3RvMw", [file_google_protobuf_wrappers, file_teleport_header_v1_metadata, file_teleport_label_v1_label]);

/**
 * CrownJewel represents a Crown Jewel resource.
 * Crown Jewel is a resource that represents a set of resources that are
 * considered critical to the organization. Access Graph uses Crown Jewel to
 * generate audit events if access to a resource has changed.
 *
 * @generated from message teleport.crownjewel.v1.CrownJewel
 */
export type CrownJewel = Message<"teleport.crownjewel.v1.CrownJewel"> & {
  /**
   * The kind of resource represented.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Mandatory field for all resources. Not populated for this resource type.
   *
   * @generated from field: string sub_kind = 2;
   */
  subKind: string;

  /**
   * The version of the resource being represented.
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Common metadata that all resources share.
   *
   * @generated from field: teleport.header.v1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  /**
   * Spec is the crown jewel spec.
   *
   * @generated from field: teleport.crownjewel.v1.CrownJewelSpec spec = 5;
   */
  spec?: CrownJewelSpec;
};

/**
 * Describes the message teleport.crownjewel.v1.CrownJewel.
 * Use `create(CrownJewelSchema)` to create a new message.
 */
export const CrownJewelSchema: GenMessage<CrownJewel> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel, 0);

/**
 * CrownJewelSpec is the specification of a Crown Jewel.
 *
 * @generated from message teleport.crownjewel.v1.CrownJewelSpec
 */
export type CrownJewelSpec = Message<"teleport.crownjewel.v1.CrownJewelSpec"> & {
  /**
   * TeleportMatchers is a list of teleport matchers.
   * DEPRECATED: Use query instead.
   *
   * @generated from field: repeated teleport.crownjewel.v1.TeleportMatcher teleport_matchers = 1;
   */
  teleportMatchers: TeleportMatcher[];

  /**
   * AWSMatchers is a list of AWS matchers.
   * DEPRECATED: Use query instead.
   *
   * @generated from field: repeated teleport.crownjewel.v1.AWSMatcher aws_matchers = 2;
   */
  awsMatchers: AWSMatcher[];

  /**
   * Query is a Access Graph query to match resources.
   *
   * @generated from field: string query = 3;
   */
  query: string;
};

/**
 * Describes the message teleport.crownjewel.v1.CrownJewelSpec.
 * Use `create(CrownJewelSpecSchema)` to create a new message.
 */
export const CrownJewelSpecSchema: GenMessage<CrownJewelSpec> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel, 1);

/**
 * TeleportMatcher represents a matcher for Teleport resources.
 *
 * @generated from message teleport.crownjewel.v1.TeleportMatcher
 */
export type TeleportMatcher = Message<"teleport.crownjewel.v1.TeleportMatcher"> & {
  /**
   * Kind is the kind of the resource: ssh, k8s, db, etc
   * Multiple kinds can be provided to match multiple kinds.
   *
   * @generated from field: repeated string kinds = 2;
   */
  kinds: string[];

  /**
   * Labels is a set of labels.
   *
   * @generated from field: repeated teleport.label.v1.Label labels = 3;
   */
  labels: Label[];

  /**
   * Names are the name of resources. When the name is provided, it will match
   * resources with the same name.
   *
   * @generated from field: repeated string names = 4;
   */
  names: string[];
};

/**
 * Describes the message teleport.crownjewel.v1.TeleportMatcher.
 * Use `create(TeleportMatcherSchema)` to create a new message.
 */
export const TeleportMatcherSchema: GenMessage<TeleportMatcher> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel, 2);

/**
 * AWSMatcher represents a matcher for AWS resources.
 * Those matchers are used only by Access Graph. Teleport related matchers are
 * defined in the TeleportMatcher.
 *
 * @generated from message teleport.crownjewel.v1.AWSMatcher
 */
export type AWSMatcher = Message<"teleport.crownjewel.v1.AWSMatcher"> & {
  /**
   * Types are AWS database types to match, "ec2", "rds", "s3", etc
   *
   * @generated from field: repeated string types = 1;
   */
  types: string[];

  /**
   * Regions are AWS regions to query for resources.
   *
   * @generated from field: repeated string regions = 2;
   */
  regions: string[];

  /**
   * Tags are AWS resource Tags to match.
   * labels is a set of labels.
   *
   * @generated from field: repeated teleport.crownjewel.v1.AWSTag tags = 3;
   */
  tags: AWSTag[];

  /**
   * ARNs are AWS resources ARN to match.
   *
   * @generated from field: repeated string arns = 5;
   */
  arns: string[];
};

/**
 * Describes the message teleport.crownjewel.v1.AWSMatcher.
 * Use `create(AWSMatcherSchema)` to create a new message.
 */
export const AWSMatcherSchema: GenMessage<AWSMatcher> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel, 3);

/**
 * AWSTag is a tag that is attached to an AWS resource.
 *
 * @generated from message teleport.crownjewel.v1.AWSTag
 */
export type AWSTag = Message<"teleport.crownjewel.v1.AWSTag"> & {
  /**
   * Key is the key of the tag.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value is the value of the tag.
   *
   * @generated from field: repeated google.protobuf.StringValue values = 2;
   */
  values: StringValue[];
};

/**
 * Describes the message teleport.crownjewel.v1.AWSTag.
 * Use `create(AWSTagSchema)` to create a new message.
 */
export const AWSTagSchema: GenMessage<AWSTag> = /*@__PURE__*/
  messageDesc(file_teleport_crownjewel_v1_crownjewel, 4);

