//
// Teleport
// Copyright (C) 2024  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/notifications/v1/notifications_service.proto (package teleport.notifications.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateGlobalNotificationRequest, CreateUserNotificationRequest, DeleteGlobalNotificationRequest, DeleteUserNotificationRequest, ListNotificationsRequest, ListNotificationsResponse, UpsertUserLastSeenNotificationRequest, UpsertUserNotificationStateRequest } from "./notifications_service_pb.js";
import { GlobalNotification, Notification, UserLastSeenNotification, UserNotificationState } from "./notifications_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * NotificationService provides CRUD operations for notifications resources.
 *
 * @generated from service teleport.notifications.v1.NotificationService
 */
export const NotificationService = {
  typeName: "teleport.notifications.v1.NotificationService",
  methods: {
    /**
     * CreateUserNotification creates a user-specific notification.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.CreateUserNotification
     */
    createUserNotification: {
      name: "CreateUserNotification",
      I: CreateUserNotificationRequest,
      O: Notification,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteUserNotification deletes a user-specific notification.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.DeleteUserNotification
     */
    deleteUserNotification: {
      name: "DeleteUserNotification",
      I: DeleteUserNotificationRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * CreateGlobalNotification creates a global notification.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.CreateGlobalNotification
     */
    createGlobalNotification: {
      name: "CreateGlobalNotification",
      I: CreateGlobalNotificationRequest,
      O: GlobalNotification,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteGlobalNotification deletes a global notification.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.DeleteGlobalNotification
     */
    deleteGlobalNotification: {
      name: "DeleteGlobalNotification",
      I: DeleteGlobalNotificationRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * ListNotifications returns a paginated list of a user's notifications.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.ListNotifications
     */
    listNotifications: {
      name: "ListNotifications",
      I: ListNotificationsRequest,
      O: ListNotificationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertUserNotificationState creates or updates a user notification state which records whether the user has clicked on or dismissed a notification.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.UpsertUserNotificationState
     */
    upsertUserNotificationState: {
      name: "UpsertUserNotificationState",
      I: UpsertUserNotificationStateRequest,
      O: UserNotificationState,
      kind: MethodKind.Unary,
    },
    /**
     * UpsertUserLastSeenNotification creates or updates a user's last seen notification item.
     *
     * @generated from rpc teleport.notifications.v1.NotificationService.UpsertUserLastSeenNotification
     */
    upsertUserLastSeenNotification: {
      name: "UpsertUserLastSeenNotification",
      I: UpsertUserLastSeenNotificationRequest,
      O: UserLastSeenNotification,
      kind: MethodKind.Unary,
    },
  }
} as const;

