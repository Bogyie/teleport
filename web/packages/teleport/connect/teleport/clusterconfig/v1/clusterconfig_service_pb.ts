// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/clusterconfig/v1/clusterconfig_service.proto (package teleport.clusterconfig.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AccessGraphConfig } from "./access_graph_pb";
import { file_teleport_clusterconfig_v1_access_graph } from "./access_graph_pb";
import type { AccessGraphSettings, AccessGraphSettingsSchema } from "./access_graph_settings_pb";
import { file_teleport_clusterconfig_v1_access_graph_settings } from "./access_graph_settings_pb";
import type { AuthPreferenceV2, AuthPreferenceV2Schema, ClusterAuditConfigV2Schema, ClusterNetworkingConfigV2, ClusterNetworkingConfigV2Schema, SessionRecordingConfigV2, SessionRecordingConfigV2Schema } from "../../legacy/types/types_pb";
import { file_teleport_legacy_types_types } from "../../legacy/types/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/clusterconfig/v1/clusterconfig_service.proto.
 */
export const file_teleport_clusterconfig_v1_clusterconfig_service: GenFile = /*@__PURE__*/
  fileDesc("CjV0ZWxlcG9ydC9jbHVzdGVyY29uZmlnL3YxL2NsdXN0ZXJjb25maWdfc2VydmljZS5wcm90bxIZdGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MSIjCiFHZXRDbHVzdGVyTmV0d29ya2luZ0NvbmZpZ1JlcXVlc3QiaAokVXBkYXRlQ2x1c3Rlck5ldHdvcmtpbmdDb25maWdSZXF1ZXN0EkAKFmNsdXN0ZXJfbmV0d29ya19jb25maWcYASABKAsyIC50eXBlcy5DbHVzdGVyTmV0d29ya2luZ0NvbmZpZ1YyImgKJFVwc2VydENsdXN0ZXJOZXR3b3JraW5nQ29uZmlnUmVxdWVzdBJAChZjbHVzdGVyX25ldHdvcmtfY29uZmlnGAEgASgLMiAudHlwZXMuQ2x1c3Rlck5ldHdvcmtpbmdDb25maWdWMiIlCiNSZXNldENsdXN0ZXJOZXR3b3JraW5nQ29uZmlnUmVxdWVzdCIiCiBHZXRTZXNzaW9uUmVjb3JkaW5nQ29uZmlnUmVxdWVzdCJoCiNVcGRhdGVTZXNzaW9uUmVjb3JkaW5nQ29uZmlnUmVxdWVzdBJBChhzZXNzaW9uX3JlY29yZGluZ19jb25maWcYASABKAsyHy50eXBlcy5TZXNzaW9uUmVjb3JkaW5nQ29uZmlnVjIiaAojVXBzZXJ0U2Vzc2lvblJlY29yZGluZ0NvbmZpZ1JlcXVlc3QSQQoYc2Vzc2lvbl9yZWNvcmRpbmdfY29uZmlnGAEgASgLMh8udHlwZXMuU2Vzc2lvblJlY29yZGluZ0NvbmZpZ1YyIiQKIlJlc2V0U2Vzc2lvblJlY29yZGluZ0NvbmZpZ1JlcXVlc3QiGgoYR2V0QXV0aFByZWZlcmVuY2VSZXF1ZXN0Ik8KG1VwZGF0ZUF1dGhQcmVmZXJlbmNlUmVxdWVzdBIwCg9hdXRoX3ByZWZlcmVuY2UYASABKAsyFy50eXBlcy5BdXRoUHJlZmVyZW5jZVYyIk8KG1Vwc2VydEF1dGhQcmVmZXJlbmNlUmVxdWVzdBIwCg9hdXRoX3ByZWZlcmVuY2UYASABKAsyFy50eXBlcy5BdXRoUHJlZmVyZW5jZVYyIhwKGlJlc2V0QXV0aFByZWZlcmVuY2VSZXF1ZXN0Ih4KHEdldENsdXN0ZXJBdWRpdENvbmZpZ1JlcXVlc3QiJAoiR2V0Q2x1c3RlckFjY2Vzc0dyYXBoQ29uZmlnUmVxdWVzdCJpCiNHZXRDbHVzdGVyQWNjZXNzR3JhcGhDb25maWdSZXNwb25zZRJCCgxhY2Nlc3NfZ3JhcGgYASABKAsyLC50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkFjY2Vzc0dyYXBoQ29uZmlnIh8KHUdldEFjY2Vzc0dyYXBoU2V0dGluZ3NSZXF1ZXN0InEKIENyZWF0ZUFjY2Vzc0dyYXBoU2V0dGluZ3NSZXF1ZXN0Ek0KFWFjY2Vzc19ncmFwaF9zZXR0aW5ncxgBIAEoCzIuLnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuQWNjZXNzR3JhcGhTZXR0aW5ncyJxCiBVcGRhdGVBY2Nlc3NHcmFwaFNldHRpbmdzUmVxdWVzdBJNChVhY2Nlc3NfZ3JhcGhfc2V0dGluZ3MYASABKAsyLi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkFjY2Vzc0dyYXBoU2V0dGluZ3MicQogVXBzZXJ0QWNjZXNzR3JhcGhTZXR0aW5nc1JlcXVlc3QSTQoVYWNjZXNzX2dyYXBoX3NldHRpbmdzGAEgASgLMi4udGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5BY2Nlc3NHcmFwaFNldHRpbmdzIiEKH1Jlc2V0QWNjZXNzR3JhcGhTZXR0aW5nc1JlcXVlc3Qy9hIKFENsdXN0ZXJDb25maWdTZXJ2aWNlEnwKGkdldENsdXN0ZXJOZXR3b3JraW5nQ29uZmlnEjwudGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5HZXRDbHVzdGVyTmV0d29ya2luZ0NvbmZpZ1JlcXVlc3QaIC50eXBlcy5DbHVzdGVyTmV0d29ya2luZ0NvbmZpZ1YyEoIBCh1VcGRhdGVDbHVzdGVyTmV0d29ya2luZ0NvbmZpZxI/LnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuVXBkYXRlQ2x1c3Rlck5ldHdvcmtpbmdDb25maWdSZXF1ZXN0GiAudHlwZXMuQ2x1c3Rlck5ldHdvcmtpbmdDb25maWdWMhKCAQodVXBzZXJ0Q2x1c3Rlck5ldHdvcmtpbmdDb25maWcSPy50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLlVwc2VydENsdXN0ZXJOZXR3b3JraW5nQ29uZmlnUmVxdWVzdBogLnR5cGVzLkNsdXN0ZXJOZXR3b3JraW5nQ29uZmlnVjISgAEKHFJlc2V0Q2x1c3Rlck5ldHdvcmtpbmdDb25maWcSPi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLlJlc2V0Q2x1c3Rlck5ldHdvcmtpbmdDb25maWdSZXF1ZXN0GiAudHlwZXMuQ2x1c3Rlck5ldHdvcmtpbmdDb25maWdWMhJ5ChlHZXRTZXNzaW9uUmVjb3JkaW5nQ29uZmlnEjsudGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5HZXRTZXNzaW9uUmVjb3JkaW5nQ29uZmlnUmVxdWVzdBofLnR5cGVzLlNlc3Npb25SZWNvcmRpbmdDb25maWdWMhJ/ChxVcGRhdGVTZXNzaW9uUmVjb3JkaW5nQ29uZmlnEj4udGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5VcGRhdGVTZXNzaW9uUmVjb3JkaW5nQ29uZmlnUmVxdWVzdBofLnR5cGVzLlNlc3Npb25SZWNvcmRpbmdDb25maWdWMhJ/ChxVcHNlcnRTZXNzaW9uUmVjb3JkaW5nQ29uZmlnEj4udGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5VcHNlcnRTZXNzaW9uUmVjb3JkaW5nQ29uZmlnUmVxdWVzdBofLnR5cGVzLlNlc3Npb25SZWNvcmRpbmdDb25maWdWMhJ9ChtSZXNldFNlc3Npb25SZWNvcmRpbmdDb25maWcSPS50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLlJlc2V0U2Vzc2lvblJlY29yZGluZ0NvbmZpZ1JlcXVlc3QaHy50eXBlcy5TZXNzaW9uUmVjb3JkaW5nQ29uZmlnVjISYQoRR2V0QXV0aFByZWZlcmVuY2USMy50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkdldEF1dGhQcmVmZXJlbmNlUmVxdWVzdBoXLnR5cGVzLkF1dGhQcmVmZXJlbmNlVjISZwoUVXBkYXRlQXV0aFByZWZlcmVuY2USNi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLlVwZGF0ZUF1dGhQcmVmZXJlbmNlUmVxdWVzdBoXLnR5cGVzLkF1dGhQcmVmZXJlbmNlVjISZwoUVXBzZXJ0QXV0aFByZWZlcmVuY2USNi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLlVwc2VydEF1dGhQcmVmZXJlbmNlUmVxdWVzdBoXLnR5cGVzLkF1dGhQcmVmZXJlbmNlVjISZQoTUmVzZXRBdXRoUHJlZmVyZW5jZRI1LnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuUmVzZXRBdXRoUHJlZmVyZW5jZVJlcXVlc3QaFy50eXBlcy5BdXRoUHJlZmVyZW5jZVYyEm0KFUdldENsdXN0ZXJBdWRpdENvbmZpZxI3LnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuR2V0Q2x1c3RlckF1ZGl0Q29uZmlnUmVxdWVzdBobLnR5cGVzLkNsdXN0ZXJBdWRpdENvbmZpZ1YyEpwBChtHZXRDbHVzdGVyQWNjZXNzR3JhcGhDb25maWcSPS50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkdldENsdXN0ZXJBY2Nlc3NHcmFwaENvbmZpZ1JlcXVlc3QaPi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkdldENsdXN0ZXJBY2Nlc3NHcmFwaENvbmZpZ1Jlc3BvbnNlEoIBChZHZXRBY2Nlc3NHcmFwaFNldHRpbmdzEjgudGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5HZXRBY2Nlc3NHcmFwaFNldHRpbmdzUmVxdWVzdBouLnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuQWNjZXNzR3JhcGhTZXR0aW5ncxKIAQoZQ3JlYXRlQWNjZXNzR3JhcGhTZXR0aW5ncxI7LnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuQ3JlYXRlQWNjZXNzR3JhcGhTZXR0aW5nc1JlcXVlc3QaLi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkFjY2Vzc0dyYXBoU2V0dGluZ3MSiAEKGVVwZGF0ZUFjY2Vzc0dyYXBoU2V0dGluZ3MSOy50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLlVwZGF0ZUFjY2Vzc0dyYXBoU2V0dGluZ3NSZXF1ZXN0Gi4udGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5BY2Nlc3NHcmFwaFNldHRpbmdzEogBChlVcHNlcnRBY2Nlc3NHcmFwaFNldHRpbmdzEjsudGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5VcHNlcnRBY2Nlc3NHcmFwaFNldHRpbmdzUmVxdWVzdBouLnRlbGVwb3J0LmNsdXN0ZXJjb25maWcudjEuQWNjZXNzR3JhcGhTZXR0aW5ncxKGAQoYUmVzZXRBY2Nlc3NHcmFwaFNldHRpbmdzEjoudGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5SZXNldEFjY2Vzc0dyYXBoU2V0dGluZ3NSZXF1ZXN0Gi4udGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MS5BY2Nlc3NHcmFwaFNldHRpbmdzQl5aXGdpdGh1Yi5jb20vZ3Jhdml0YXRpb25hbC90ZWxlcG9ydC9hcGkvZ2VuL3Byb3RvL2dvL3RlbGVwb3J0L2NsdXN0ZXJjb25maWcvdjE7Y2x1c3RlcmNvbmZpZ3YxYgZwcm90bzM", [file_teleport_clusterconfig_v1_access_graph, file_teleport_clusterconfig_v1_access_graph_settings, file_teleport_legacy_types_types]);

/**
 * Request for GetClusterNetworkingConfig
 *
 * @generated from message teleport.clusterconfig.v1.GetClusterNetworkingConfigRequest
 */
export type GetClusterNetworkingConfigRequest = Message<"teleport.clusterconfig.v1.GetClusterNetworkingConfigRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.GetClusterNetworkingConfigRequest.
 * Use `create(GetClusterNetworkingConfigRequestSchema)` to create a new message.
 */
export const GetClusterNetworkingConfigRequestSchema: GenMessage<GetClusterNetworkingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 0);

/**
 * Request for UpdateClusterNetworkingConfig
 *
 * @generated from message teleport.clusterconfig.v1.UpdateClusterNetworkingConfigRequest
 */
export type UpdateClusterNetworkingConfigRequest = Message<"teleport.clusterconfig.v1.UpdateClusterNetworkingConfigRequest"> & {
  /**
   * @generated from field: types.ClusterNetworkingConfigV2 cluster_network_config = 1;
   */
  clusterNetworkConfig?: ClusterNetworkingConfigV2;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpdateClusterNetworkingConfigRequest.
 * Use `create(UpdateClusterNetworkingConfigRequestSchema)` to create a new message.
 */
export const UpdateClusterNetworkingConfigRequestSchema: GenMessage<UpdateClusterNetworkingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 1);

/**
 * Request for UpsertClusterNetworkingConfig
 *
 * @generated from message teleport.clusterconfig.v1.UpsertClusterNetworkingConfigRequest
 */
export type UpsertClusterNetworkingConfigRequest = Message<"teleport.clusterconfig.v1.UpsertClusterNetworkingConfigRequest"> & {
  /**
   * @generated from field: types.ClusterNetworkingConfigV2 cluster_network_config = 1;
   */
  clusterNetworkConfig?: ClusterNetworkingConfigV2;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpsertClusterNetworkingConfigRequest.
 * Use `create(UpsertClusterNetworkingConfigRequestSchema)` to create a new message.
 */
export const UpsertClusterNetworkingConfigRequestSchema: GenMessage<UpsertClusterNetworkingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 2);

/**
 * Request for ResetClusterNetworkingConfig
 *
 * @generated from message teleport.clusterconfig.v1.ResetClusterNetworkingConfigRequest
 */
export type ResetClusterNetworkingConfigRequest = Message<"teleport.clusterconfig.v1.ResetClusterNetworkingConfigRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.ResetClusterNetworkingConfigRequest.
 * Use `create(ResetClusterNetworkingConfigRequestSchema)` to create a new message.
 */
export const ResetClusterNetworkingConfigRequestSchema: GenMessage<ResetClusterNetworkingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 3);

/**
 * Request for GetSessionRecordingConfig
 *
 * @generated from message teleport.clusterconfig.v1.GetSessionRecordingConfigRequest
 */
export type GetSessionRecordingConfigRequest = Message<"teleport.clusterconfig.v1.GetSessionRecordingConfigRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.GetSessionRecordingConfigRequest.
 * Use `create(GetSessionRecordingConfigRequestSchema)` to create a new message.
 */
export const GetSessionRecordingConfigRequestSchema: GenMessage<GetSessionRecordingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 4);

/**
 * Request for UpdateSessionRecordingConfig
 *
 * @generated from message teleport.clusterconfig.v1.UpdateSessionRecordingConfigRequest
 */
export type UpdateSessionRecordingConfigRequest = Message<"teleport.clusterconfig.v1.UpdateSessionRecordingConfigRequest"> & {
  /**
   * @generated from field: types.SessionRecordingConfigV2 session_recording_config = 1;
   */
  sessionRecordingConfig?: SessionRecordingConfigV2;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpdateSessionRecordingConfigRequest.
 * Use `create(UpdateSessionRecordingConfigRequestSchema)` to create a new message.
 */
export const UpdateSessionRecordingConfigRequestSchema: GenMessage<UpdateSessionRecordingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 5);

/**
 * Request for UpsertSessionRecordingConfig
 *
 * @generated from message teleport.clusterconfig.v1.UpsertSessionRecordingConfigRequest
 */
export type UpsertSessionRecordingConfigRequest = Message<"teleport.clusterconfig.v1.UpsertSessionRecordingConfigRequest"> & {
  /**
   * @generated from field: types.SessionRecordingConfigV2 session_recording_config = 1;
   */
  sessionRecordingConfig?: SessionRecordingConfigV2;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpsertSessionRecordingConfigRequest.
 * Use `create(UpsertSessionRecordingConfigRequestSchema)` to create a new message.
 */
export const UpsertSessionRecordingConfigRequestSchema: GenMessage<UpsertSessionRecordingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 6);

/**
 * Request for ResetSessionRecordingConfig
 *
 * @generated from message teleport.clusterconfig.v1.ResetSessionRecordingConfigRequest
 */
export type ResetSessionRecordingConfigRequest = Message<"teleport.clusterconfig.v1.ResetSessionRecordingConfigRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.ResetSessionRecordingConfigRequest.
 * Use `create(ResetSessionRecordingConfigRequestSchema)` to create a new message.
 */
export const ResetSessionRecordingConfigRequestSchema: GenMessage<ResetSessionRecordingConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 7);

/**
 * Request for GetAuthPreference
 *
 * @generated from message teleport.clusterconfig.v1.GetAuthPreferenceRequest
 */
export type GetAuthPreferenceRequest = Message<"teleport.clusterconfig.v1.GetAuthPreferenceRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.GetAuthPreferenceRequest.
 * Use `create(GetAuthPreferenceRequestSchema)` to create a new message.
 */
export const GetAuthPreferenceRequestSchema: GenMessage<GetAuthPreferenceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 8);

/**
 * Request for UpdateAuthPreference
 *
 * @generated from message teleport.clusterconfig.v1.UpdateAuthPreferenceRequest
 */
export type UpdateAuthPreferenceRequest = Message<"teleport.clusterconfig.v1.UpdateAuthPreferenceRequest"> & {
  /**
   * @generated from field: types.AuthPreferenceV2 auth_preference = 1;
   */
  authPreference?: AuthPreferenceV2;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpdateAuthPreferenceRequest.
 * Use `create(UpdateAuthPreferenceRequestSchema)` to create a new message.
 */
export const UpdateAuthPreferenceRequestSchema: GenMessage<UpdateAuthPreferenceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 9);

/**
 * Request for UpsertAuthPreference
 *
 * @generated from message teleport.clusterconfig.v1.UpsertAuthPreferenceRequest
 */
export type UpsertAuthPreferenceRequest = Message<"teleport.clusterconfig.v1.UpsertAuthPreferenceRequest"> & {
  /**
   * @generated from field: types.AuthPreferenceV2 auth_preference = 1;
   */
  authPreference?: AuthPreferenceV2;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpsertAuthPreferenceRequest.
 * Use `create(UpsertAuthPreferenceRequestSchema)` to create a new message.
 */
export const UpsertAuthPreferenceRequestSchema: GenMessage<UpsertAuthPreferenceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 10);

/**
 * Request for ResetAuthPreference
 *
 * @generated from message teleport.clusterconfig.v1.ResetAuthPreferenceRequest
 */
export type ResetAuthPreferenceRequest = Message<"teleport.clusterconfig.v1.ResetAuthPreferenceRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.ResetAuthPreferenceRequest.
 * Use `create(ResetAuthPreferenceRequestSchema)` to create a new message.
 */
export const ResetAuthPreferenceRequestSchema: GenMessage<ResetAuthPreferenceRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 11);

/**
 * Request for GetClusterAuditConfig
 *
 * @generated from message teleport.clusterconfig.v1.GetClusterAuditConfigRequest
 */
export type GetClusterAuditConfigRequest = Message<"teleport.clusterconfig.v1.GetClusterAuditConfigRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.GetClusterAuditConfigRequest.
 * Use `create(GetClusterAuditConfigRequestSchema)` to create a new message.
 */
export const GetClusterAuditConfigRequestSchema: GenMessage<GetClusterAuditConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 12);

/**
 * Request for GetClusterAccessGraphConfig
 *
 * @generated from message teleport.clusterconfig.v1.GetClusterAccessGraphConfigRequest
 */
export type GetClusterAccessGraphConfigRequest = Message<"teleport.clusterconfig.v1.GetClusterAccessGraphConfigRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.GetClusterAccessGraphConfigRequest.
 * Use `create(GetClusterAccessGraphConfigRequestSchema)` to create a new message.
 */
export const GetClusterAccessGraphConfigRequestSchema: GenMessage<GetClusterAccessGraphConfigRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 13);

/**
 * Response for GetClusterAccessGraphConfig
 *
 * @generated from message teleport.clusterconfig.v1.GetClusterAccessGraphConfigResponse
 */
export type GetClusterAccessGraphConfigResponse = Message<"teleport.clusterconfig.v1.GetClusterAccessGraphConfigResponse"> & {
  /**
   * access_graph holds the information about Access Graph service.
   *
   * @generated from field: teleport.clusterconfig.v1.AccessGraphConfig access_graph = 1;
   */
  accessGraph?: AccessGraphConfig;
};

/**
 * Describes the message teleport.clusterconfig.v1.GetClusterAccessGraphConfigResponse.
 * Use `create(GetClusterAccessGraphConfigResponseSchema)` to create a new message.
 */
export const GetClusterAccessGraphConfigResponseSchema: GenMessage<GetClusterAccessGraphConfigResponse> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 14);

/**
 * Request for GetAccessGraphSettings
 *
 * @generated from message teleport.clusterconfig.v1.GetAccessGraphSettingsRequest
 */
export type GetAccessGraphSettingsRequest = Message<"teleport.clusterconfig.v1.GetAccessGraphSettingsRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.GetAccessGraphSettingsRequest.
 * Use `create(GetAccessGraphSettingsRequestSchema)` to create a new message.
 */
export const GetAccessGraphSettingsRequestSchema: GenMessage<GetAccessGraphSettingsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 15);

/**
 * Request for CreateAccessGraphSettings
 *
 * @generated from message teleport.clusterconfig.v1.CreateAccessGraphSettingsRequest
 */
export type CreateAccessGraphSettingsRequest = Message<"teleport.clusterconfig.v1.CreateAccessGraphSettingsRequest"> & {
  /**
   * @generated from field: teleport.clusterconfig.v1.AccessGraphSettings access_graph_settings = 1;
   */
  accessGraphSettings?: AccessGraphSettings;
};

/**
 * Describes the message teleport.clusterconfig.v1.CreateAccessGraphSettingsRequest.
 * Use `create(CreateAccessGraphSettingsRequestSchema)` to create a new message.
 */
export const CreateAccessGraphSettingsRequestSchema: GenMessage<CreateAccessGraphSettingsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 16);

/**
 * Request for UpdateAccessGraphSettings
 *
 * @generated from message teleport.clusterconfig.v1.UpdateAccessGraphSettingsRequest
 */
export type UpdateAccessGraphSettingsRequest = Message<"teleport.clusterconfig.v1.UpdateAccessGraphSettingsRequest"> & {
  /**
   * @generated from field: teleport.clusterconfig.v1.AccessGraphSettings access_graph_settings = 1;
   */
  accessGraphSettings?: AccessGraphSettings;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpdateAccessGraphSettingsRequest.
 * Use `create(UpdateAccessGraphSettingsRequestSchema)` to create a new message.
 */
export const UpdateAccessGraphSettingsRequestSchema: GenMessage<UpdateAccessGraphSettingsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 17);

/**
 * Request for UpsertAccessGraphSettings
 *
 * @generated from message teleport.clusterconfig.v1.UpsertAccessGraphSettingsRequest
 */
export type UpsertAccessGraphSettingsRequest = Message<"teleport.clusterconfig.v1.UpsertAccessGraphSettingsRequest"> & {
  /**
   * @generated from field: teleport.clusterconfig.v1.AccessGraphSettings access_graph_settings = 1;
   */
  accessGraphSettings?: AccessGraphSettings;
};

/**
 * Describes the message teleport.clusterconfig.v1.UpsertAccessGraphSettingsRequest.
 * Use `create(UpsertAccessGraphSettingsRequestSchema)` to create a new message.
 */
export const UpsertAccessGraphSettingsRequestSchema: GenMessage<UpsertAccessGraphSettingsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 18);

/**
 * Request for ResetAccessGraphSettings
 *
 * @generated from message teleport.clusterconfig.v1.ResetAccessGraphSettingsRequest
 */
export type ResetAccessGraphSettingsRequest = Message<"teleport.clusterconfig.v1.ResetAccessGraphSettingsRequest"> & {
};

/**
 * Describes the message teleport.clusterconfig.v1.ResetAccessGraphSettingsRequest.
 * Use `create(ResetAccessGraphSettingsRequestSchema)` to create a new message.
 */
export const ResetAccessGraphSettingsRequestSchema: GenMessage<ResetAccessGraphSettingsRequest> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 19);

/**
 * ClusterConfigService provides methods to manage cluster configuration resources.
 *
 * @generated from service teleport.clusterconfig.v1.ClusterConfigService
 */
export const ClusterConfigService: GenService<{
  /**
   * GetClusterNetworkingConfig retrieves the active cluster networking configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.GetClusterNetworkingConfig
   */
  getClusterNetworkingConfig: {
    methodKind: "unary";
    input: typeof GetClusterNetworkingConfigRequestSchema;
    output: typeof ClusterNetworkingConfigV2Schema;
  },
  /**
   * UpdateClusterNetworkingConfig updates the cluster networking configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpdateClusterNetworkingConfig
   */
  updateClusterNetworkingConfig: {
    methodKind: "unary";
    input: typeof UpdateClusterNetworkingConfigRequestSchema;
    output: typeof ClusterNetworkingConfigV2Schema;
  },
  /**
   * UpsertClusterNetworkingConfig overwrites the active cluster networking configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpsertClusterNetworkingConfig
   */
  upsertClusterNetworkingConfig: {
    methodKind: "unary";
    input: typeof UpsertClusterNetworkingConfigRequestSchema;
    output: typeof ClusterNetworkingConfigV2Schema;
  },
  /**
   * ResetClusterNetworkingConfig restores the active cluster networking configuration to default settings.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.ResetClusterNetworkingConfig
   */
  resetClusterNetworkingConfig: {
    methodKind: "unary";
    input: typeof ResetClusterNetworkingConfigRequestSchema;
    output: typeof ClusterNetworkingConfigV2Schema;
  },
  /**
   * GetSessionRecordingConfig retrieves the active session recording configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.GetSessionRecordingConfig
   */
  getSessionRecordingConfig: {
    methodKind: "unary";
    input: typeof GetSessionRecordingConfigRequestSchema;
    output: typeof SessionRecordingConfigV2Schema;
  },
  /**
   * UpdateSessionRecordingConfig updates the session recording configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpdateSessionRecordingConfig
   */
  updateSessionRecordingConfig: {
    methodKind: "unary";
    input: typeof UpdateSessionRecordingConfigRequestSchema;
    output: typeof SessionRecordingConfigV2Schema;
  },
  /**
   * UpsertSessionRecordingConfig overwrites the active session recording configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpsertSessionRecordingConfig
   */
  upsertSessionRecordingConfig: {
    methodKind: "unary";
    input: typeof UpsertSessionRecordingConfigRequestSchema;
    output: typeof SessionRecordingConfigV2Schema;
  },
  /**
   * ResetSessionRecordingConfig restores the active session recording configuration to default settings.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.ResetSessionRecordingConfig
   */
  resetSessionRecordingConfig: {
    methodKind: "unary";
    input: typeof ResetSessionRecordingConfigRequestSchema;
    output: typeof SessionRecordingConfigV2Schema;
  },
  /**
   * GetAuthPreference retrieves the active auth preference.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.GetAuthPreference
   */
  getAuthPreference: {
    methodKind: "unary";
    input: typeof GetAuthPreferenceRequestSchema;
    output: typeof AuthPreferenceV2Schema;
  },
  /**
   * UpdateAuthPreference updates the auth preference.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpdateAuthPreference
   */
  updateAuthPreference: {
    methodKind: "unary";
    input: typeof UpdateAuthPreferenceRequestSchema;
    output: typeof AuthPreferenceV2Schema;
  },
  /**
   * UpsertAuthPreference overwrites the active auth preference.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpsertAuthPreference
   */
  upsertAuthPreference: {
    methodKind: "unary";
    input: typeof UpsertAuthPreferenceRequestSchema;
    output: typeof AuthPreferenceV2Schema;
  },
  /**
   * ResetAuthPreference restores the active auth preference to default settings.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.ResetAuthPreference
   */
  resetAuthPreference: {
    methodKind: "unary";
    input: typeof ResetAuthPreferenceRequestSchema;
    output: typeof AuthPreferenceV2Schema;
  },
  /**
   * GetClusterAuditConfig retrieves the active cluster audit configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.GetClusterAuditConfig
   */
  getClusterAuditConfig: {
    methodKind: "unary";
    input: typeof GetClusterAuditConfigRequestSchema;
    output: typeof ClusterAuditConfigV2Schema;
  },
  /**
   * GetClusterAccessGraphConfig retrieves the cluster Access Graph configuration from Auth service.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.GetClusterAccessGraphConfig
   */
  getClusterAccessGraphConfig: {
    methodKind: "unary";
    input: typeof GetClusterAccessGraphConfigRequestSchema;
    output: typeof GetClusterAccessGraphConfigResponseSchema;
  },
  /**
   * GetAccessGraphSettings updates the cluster Access Graph configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.GetAccessGraphSettings
   */
  getAccessGraphSettings: {
    methodKind: "unary";
    input: typeof GetAccessGraphSettingsRequestSchema;
    output: typeof AccessGraphSettingsSchema;
  },
  /**
   * CreateAccessGraphSettings creates the cluster Access Graph configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.CreateAccessGraphSettings
   */
  createAccessGraphSettings: {
    methodKind: "unary";
    input: typeof CreateAccessGraphSettingsRequestSchema;
    output: typeof AccessGraphSettingsSchema;
  },
  /**
   * UpdateAccessGraphSettings updates the cluster Access Graph configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpdateAccessGraphSettings
   */
  updateAccessGraphSettings: {
    methodKind: "unary";
    input: typeof UpdateAccessGraphSettingsRequestSchema;
    output: typeof AccessGraphSettingsSchema;
  },
  /**
   * UpsertAccessGraphSettings overwrites the active cluster Access Graph configuration.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.UpsertAccessGraphSettings
   */
  upsertAccessGraphSettings: {
    methodKind: "unary";
    input: typeof UpsertAccessGraphSettingsRequestSchema;
    output: typeof AccessGraphSettingsSchema;
  },
  /**
   * ResetAccessGraphSettings restores the active cluster Access Graph to default settings.
   *
   * @generated from rpc teleport.clusterconfig.v1.ClusterConfigService.ResetAccessGraphSettings
   */
  resetAccessGraphSettings: {
    methodKind: "unary";
    input: typeof ResetAccessGraphSettingsRequestSchema;
    output: typeof AccessGraphSettingsSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_clusterconfig_v1_clusterconfig_service, 0);

