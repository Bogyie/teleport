// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/clusterconfig/v1/access_graph.proto (package teleport.clusterconfig.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/clusterconfig/v1/access_graph.proto.
 */
export const file_teleport_clusterconfig_v1_access_graph: GenFile = /*@__PURE__*/
  fileDesc("Cix0ZWxlcG9ydC9jbHVzdGVyY29uZmlnL3YxL2FjY2Vzc19ncmFwaC5wcm90bxIZdGVsZXBvcnQuY2x1c3RlcmNvbmZpZy52MSKwAQoRQWNjZXNzR3JhcGhDb25maWcSDwoHZW5hYmxlZBgBIAEoCBIPCgdhZGRyZXNzGAIgASgJEgoKAmNhGAMgASgMEhAKCGluc2VjdXJlGAQgASgIElsKE3NlY3JldHNfc2Nhbl9jb25maWcYBSABKAsyPi50ZWxlcG9ydC5jbHVzdGVyY29uZmlnLnYxLkFjY2Vzc0dyYXBoU2VjcmV0c1NjYW5Db25maWd1cmF0aW9uIj8KI0FjY2Vzc0dyYXBoU2VjcmV0c1NjYW5Db25maWd1cmF0aW9uEhgKEHNzaF9zY2FuX2VuYWJsZWQYASABKAhCXlpcZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvY2x1c3RlcmNvbmZpZy92MTtjbHVzdGVyY29uZmlndjFiBnByb3RvMw");

/**
 * AccessGraphConfig holds the information about the configured Access Graph service.
 *
 * @generated from message teleport.clusterconfig.v1.AccessGraphConfig
 */
export type AccessGraphConfig = Message<"teleport.clusterconfig.v1.AccessGraphConfig"> & {
  /**
   * enabled indicates if the Access Graph is enabled for the cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * address is the address of the access graph service. The address is in the
   * form of "host:port".
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * ca is the PEM-encoded CA certificate of the access graph service.
   *
   * @generated from field: bytes ca = 3;
   */
  ca: Uint8Array;

  /**
   * insecure is a flag that indicates whether the access graph service should
   * skip verifying the server's certificate chain and host name.
   *
   * @generated from field: bool insecure = 4;
   */
  insecure: boolean;

  /**
   * secrets_scan_config is used to configure the parameters for the secrets scanning functionality.
   *
   * @generated from field: teleport.clusterconfig.v1.AccessGraphSecretsScanConfiguration secrets_scan_config = 5;
   */
  secretsScanConfig?: AccessGraphSecretsScanConfiguration;
};

/**
 * Describes the message teleport.clusterconfig.v1.AccessGraphConfig.
 * Use `create(AccessGraphConfigSchema)` to create a new message.
 */
export const AccessGraphConfigSchema: GenMessage<AccessGraphConfig> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_access_graph, 0);

/**
 * AccessGraphSecretsScanConfiguration controls the secrets scanning service parameters.
 *
 * @generated from message teleport.clusterconfig.v1.AccessGraphSecretsScanConfiguration
 */
export type AccessGraphSecretsScanConfiguration = Message<"teleport.clusterconfig.v1.AccessGraphSecretsScanConfiguration"> & {
  /**
   * ssh_scan_enabled indicates if the SSH scan feature is enabled for the cluster.
   *
   * @generated from field: bool ssh_scan_enabled = 1;
   */
  sshScanEnabled: boolean;
};

/**
 * Describes the message teleport.clusterconfig.v1.AccessGraphSecretsScanConfiguration.
 * Use `create(AccessGraphSecretsScanConfigurationSchema)` to create a new message.
 */
export const AccessGraphSecretsScanConfigurationSchema: GenMessage<AccessGraphSecretsScanConfiguration> = /*@__PURE__*/
  messageDesc(file_teleport_clusterconfig_v1_access_graph, 1);

