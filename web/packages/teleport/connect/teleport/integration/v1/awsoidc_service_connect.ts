// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file teleport/integration/v1/awsoidc_service.proto (package teleport.integration.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateEICERequest, CreateEICEResponse, DeployDatabaseServiceRequest, DeployDatabaseServiceResponse, DeployServiceRequest, DeployServiceResponse, EnrollEKSClustersRequest, EnrollEKSClustersResponse, ListDatabasesRequest, ListDatabasesResponse, ListEC2Request, ListEC2Response, ListEICERequest, ListEICEResponse, ListEKSClustersRequest, ListEKSClustersResponse, ListSecurityGroupsRequest, ListSecurityGroupsResponse, ListSubnetsRequest, ListSubnetsResponse, ListVPCsRequest, ListVPCsResponse, PingRequest, PingResponse } from "./awsoidc_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * AWSOIDCService provides access to AWS APIs using the AWS OIDC Integration.
 *
 * @generated from service teleport.integration.v1.AWSOIDCService
 */
export const AWSOIDCService = {
  typeName: "teleport.integration.v1.AWSOIDCService",
  methods: {
    /**
     * ListEICE returns a list of EC2 Instance Connect Endpoints.
     * An optional NextToken that can be used to fetch the next page.
     * It uses the following API:
     * https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceConnectEndpoints.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListEICE
     */
    listEICE: {
      name: "ListEICE",
      I: ListEICERequest,
      O: ListEICEResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateEICE creates multiple EC2 Instance Connect Endpoint using the provided Subnets and Security Group IDs.
     * It uses the following API:
     * https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceConnectEndpoint.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.CreateEICE
     */
    createEICE: {
      name: "CreateEICE",
      I: CreateEICERequest,
      O: CreateEICEResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListDatabases calls the following AWS API:
     * https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html
     * https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html
     * It returns a list of Databases and an optional NextToken that can be used to fetch the next page
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListDatabases
     */
    listDatabases: {
      name: "ListDatabases",
      I: ListDatabasesRequest,
      O: ListDatabasesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListSecurityGroups returns a list of AWS VPC SecurityGroups.
     * It uses the following API:
     * https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListSecurityGroups
     */
    listSecurityGroups: {
      name: "ListSecurityGroups",
      I: ListSecurityGroupsRequest,
      O: ListSecurityGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListSubnets returns a list of AWS VPC subnets.
     * It uses the following API:
     * https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListSubnets
     */
    listSubnets: {
      name: "ListSubnets",
      I: ListSubnetsRequest,
      O: ListSubnetsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListVPCs returns a list of AWS VPCs.
     * It uses the following API:
     * https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListVPCs
     */
    listVPCs: {
      name: "ListVPCs",
      I: ListVPCsRequest,
      O: ListVPCsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeployDatabaseService deploys a Database Services to Amazon ECS.
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.DeployDatabaseService
     */
    deployDatabaseService: {
      name: "DeployDatabaseService",
      I: DeployDatabaseServiceRequest,
      O: DeployDatabaseServiceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeployService deploys an ECS Service to Amazon ECS.
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.DeployService
     */
    deployService: {
      name: "DeployService",
      I: DeployServiceRequest,
      O: DeployServiceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * EnrollEKSClusters enrolls EKS clusters by installing kube agent Helm chart.
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.EnrollEKSClusters
     */
    enrollEKSClusters: {
      name: "EnrollEKSClusters",
      I: EnrollEKSClustersRequest,
      O: EnrollEKSClustersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListEC2 lists the EC2 instances of the AWS account per region.
     * It uses the following API:
     * https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListEC2
     */
    listEC2: {
      name: "ListEC2",
      I: ListEC2Request,
      O: ListEC2Response,
      kind: MethodKind.Unary,
    },
    /**
     * ListEKSClusters retrieves a paginated list of EKS clusters in the specified AWS region for a specific account.
     * It uses the following APIs:
     * https://docs.aws.amazon.com/eks/latest/APIReference/API_ListClusters.html
     * https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeCluster.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.ListEKSClusters
     */
    listEKSClusters: {
      name: "ListEKSClusters",
      I: ListEKSClustersRequest,
      O: ListEKSClustersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Ping does an health check for the integration.
     * Returns the caller identity.
     * It uses the following APIs:
     * https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html
     *
     * @generated from rpc teleport.integration.v1.AWSOIDCService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

