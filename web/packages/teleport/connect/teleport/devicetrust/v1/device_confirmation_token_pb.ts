// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/devicetrust/v1/device_confirmation_token.proto (package teleport.devicetrust.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/devicetrust/v1/device_confirmation_token.proto.
 */
export const file_teleport_devicetrust_v1_device_confirmation_token: GenFile = /*@__PURE__*/
  fileDesc("Cjd0ZWxlcG9ydC9kZXZpY2V0cnVzdC92MS9kZXZpY2VfY29uZmlybWF0aW9uX3Rva2VuLnByb3RvEhd0ZWxlcG9ydC5kZXZpY2V0cnVzdC52MSI0ChdEZXZpY2VDb25maXJtYXRpb25Ub2tlbhIKCgJpZBgBIAEoCRINCgV0b2tlbhgCIAEoCUJaWlhnaXRodWIuY29tL2dyYXZpdGF0aW9uYWwvdGVsZXBvcnQvYXBpL2dlbi9wcm90by9nby90ZWxlcG9ydC9kZXZpY2V0cnVzdC92MTtkZXZpY2V0cnVzdHYxYgZwcm90bzM");

/**
 * A device confirmation token marks the last step of device web authentication.
 * It is acquired at the end of a successful AuthenticateDevice stream and
 * exchanged during the ConfirmDeviceWebAuthentication RPC.
 *
 * See
 * https://github.com/gravitational/teleport.e/blob/master/rfd/0009e-device-trust-web-support.md#device-confirmation-token.
 *
 * @generated from message teleport.devicetrust.v1.DeviceConfirmationToken
 */
export type DeviceConfirmationToken = Message<"teleport.devicetrust.v1.DeviceConfirmationToken"> & {
  /**
   * Opaque token identifier.
   * System-generated.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Opaque device confirmation token, in plaintext, encoded in
   * base64.RawURLEncoding (so it is inherently safe for URl use).
   * System-generated.
   *
   * @generated from field: string token = 2;
   */
  token: string;
};

/**
 * Describes the message teleport.devicetrust.v1.DeviceConfirmationToken.
 * Use `create(DeviceConfirmationTokenSchema)` to create a new message.
 */
export const DeviceConfirmationTokenSchema: GenMessage<DeviceConfirmationToken> = /*@__PURE__*/
  messageDesc(file_teleport_devicetrust_v1_device_confirmation_token, 0);

