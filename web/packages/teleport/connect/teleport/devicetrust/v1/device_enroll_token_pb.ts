// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/devicetrust/v1/device_enroll_token.proto (package teleport.devicetrust.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/devicetrust/v1/device_enroll_token.proto.
 */
export const file_teleport_devicetrust_v1_device_enroll_token: GenFile = /*@__PURE__*/
  fileDesc("CjF0ZWxlcG9ydC9kZXZpY2V0cnVzdC92MS9kZXZpY2VfZW5yb2xsX3Rva2VuLnByb3RvEhd0ZWxlcG9ydC5kZXZpY2V0cnVzdC52MSJTChFEZXZpY2VFbnJvbGxUb2tlbhINCgV0b2tlbhgBIAEoCRIvCgtleHBpcmVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCWlpYZ2l0aHViLmNvbS9ncmF2aXRhdGlvbmFsL3RlbGVwb3J0L2FwaS9nZW4vcHJvdG8vZ28vdGVsZXBvcnQvZGV2aWNldHJ1c3QvdjE7ZGV2aWNldHJ1c3R2MWIGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * DeviceEnrollToken encapsulates the permission, granted by a device
 * administrator to an user, to enroll a device.
 * An enrolled device allows its user to perform device-aware actions.
 *
 * @generated from message teleport.devicetrust.v1.DeviceEnrollToken
 */
export type DeviceEnrollToken = Message<"teleport.devicetrust.v1.DeviceEnrollToken"> & {
  /**
   * Opaque enrollement token required by the EnrollDevice RPC.
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * Expiration time for the token.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message teleport.devicetrust.v1.DeviceEnrollToken.
 * Use `create(DeviceEnrollTokenSchema)` to create a new message.
 */
export const DeviceEnrollTokenSchema: GenMessage<DeviceEnrollToken> = /*@__PURE__*/
  messageDesc(file_teleport_devicetrust_v1_device_enroll_token, 0);

