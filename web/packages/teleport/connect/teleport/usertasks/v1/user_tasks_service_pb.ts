// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/usertasks/v1/user_tasks_service.proto (package teleport.usertasks.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { UserTask, UserTaskSchema } from "./user_tasks_pb";
import { file_teleport_usertasks_v1_user_tasks } from "./user_tasks_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/usertasks/v1/user_tasks_service.proto.
 */
export const file_teleport_usertasks_v1_user_tasks_service: GenFile = /*@__PURE__*/
  fileDesc("Ci50ZWxlcG9ydC91c2VydGFza3MvdjEvdXNlcl90YXNrc19zZXJ2aWNlLnByb3RvEhV0ZWxlcG9ydC51c2VydGFza3MudjEiSwoVQ3JlYXRlVXNlclRhc2tSZXF1ZXN0EjIKCXVzZXJfdGFzaxgBIAEoCzIfLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5Vc2VyVGFzayJLChVVcHNlcnRVc2VyVGFza1JlcXVlc3QSMgoJdXNlcl90YXNrGAEgASgLMh8udGVsZXBvcnQudXNlcnRhc2tzLnYxLlVzZXJUYXNrIiIKEkdldFVzZXJUYXNrUmVxdWVzdBIMCgRuYW1lGAEgASgJIj0KFExpc3RVc2VyVGFza3NSZXF1ZXN0EhEKCXBhZ2Vfc2l6ZRgBIAEoAxISCgpwYWdlX3Rva2VuGAIgASgJImUKFUxpc3RVc2VyVGFza3NSZXNwb25zZRIzCgp1c2VyX3Rhc2tzGAEgAygLMh8udGVsZXBvcnQudXNlcnRhc2tzLnYxLlVzZXJUYXNrEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJLChVVcGRhdGVVc2VyVGFza1JlcXVlc3QSMgoJdXNlcl90YXNrGAEgASgLMh8udGVsZXBvcnQudXNlcnRhc2tzLnYxLlVzZXJUYXNrIiUKFURlbGV0ZVVzZXJUYXNrUmVxdWVzdBIMCgRuYW1lGAEgASgJMtMECg9Vc2VyVGFza1NlcnZpY2USXwoOQ3JlYXRlVXNlclRhc2sSLC50ZWxlcG9ydC51c2VydGFza3MudjEuQ3JlYXRlVXNlclRhc2tSZXF1ZXN0Gh8udGVsZXBvcnQudXNlcnRhc2tzLnYxLlVzZXJUYXNrEl8KDlVwc2VydFVzZXJUYXNrEiwudGVsZXBvcnQudXNlcnRhc2tzLnYxLlVwc2VydFVzZXJUYXNrUmVxdWVzdBofLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5Vc2VyVGFzaxJZCgtHZXRVc2VyVGFzaxIpLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5HZXRVc2VyVGFza1JlcXVlc3QaHy50ZWxlcG9ydC51c2VydGFza3MudjEuVXNlclRhc2sSagoNTGlzdFVzZXJUYXNrcxIrLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5MaXN0VXNlclRhc2tzUmVxdWVzdBosLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5MaXN0VXNlclRhc2tzUmVzcG9uc2USXwoOVXBkYXRlVXNlclRhc2sSLC50ZWxlcG9ydC51c2VydGFza3MudjEuVXBkYXRlVXNlclRhc2tSZXF1ZXN0Gh8udGVsZXBvcnQudXNlcnRhc2tzLnYxLlVzZXJUYXNrElYKDkRlbGV0ZVVzZXJUYXNrEiwudGVsZXBvcnQudXNlcnRhc2tzLnYxLkRlbGV0ZVVzZXJUYXNrUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUJWWlRnaXRodWIuY29tL2dyYXZpdGF0aW9uYWwvdGVsZXBvcnQvYXBpL2dlbi9wcm90by9nby90ZWxlcG9ydC91c2VydGFza3MvdjE7dXNlcnRhc2tzdjFiBnByb3RvMw", [file_google_protobuf_empty, file_teleport_usertasks_v1_user_tasks]);

/**
 * CreateUserTaskRequest is a request to create a User Task.
 *
 * @generated from message teleport.usertasks.v1.CreateUserTaskRequest
 */
export type CreateUserTaskRequest = Message<"teleport.usertasks.v1.CreateUserTaskRequest"> & {
  /**
   * @generated from field: teleport.usertasks.v1.UserTask user_task = 1;
   */
  userTask?: UserTask;
};

/**
 * Describes the message teleport.usertasks.v1.CreateUserTaskRequest.
 * Use `create(CreateUserTaskRequestSchema)` to create a new message.
 */
export const CreateUserTaskRequestSchema: GenMessage<CreateUserTaskRequest> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 0);

/**
 * UpsertUserTaskRequest is a request to create or update a User Task.
 *
 * @generated from message teleport.usertasks.v1.UpsertUserTaskRequest
 */
export type UpsertUserTaskRequest = Message<"teleport.usertasks.v1.UpsertUserTaskRequest"> & {
  /**
   * @generated from field: teleport.usertasks.v1.UserTask user_task = 1;
   */
  userTask?: UserTask;
};

/**
 * Describes the message teleport.usertasks.v1.UpsertUserTaskRequest.
 * Use `create(UpsertUserTaskRequestSchema)` to create a new message.
 */
export const UpsertUserTaskRequestSchema: GenMessage<UpsertUserTaskRequest> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 1);

/**
 * GetUserTaskRequest is a request to get a User Task by name.
 *
 * @generated from message teleport.usertasks.v1.GetUserTaskRequest
 */
export type GetUserTaskRequest = Message<"teleport.usertasks.v1.GetUserTaskRequest"> & {
  /**
   * Name is the name of the UserTask to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.usertasks.v1.GetUserTaskRequest.
 * Use `create(GetUserTaskRequestSchema)` to create a new message.
 */
export const GetUserTaskRequestSchema: GenMessage<GetUserTaskRequest> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 2);

/**
 * ListUserTasksRequest is a request to get a list of User Tasks.
 *
 * @generated from message teleport.usertasks.v1.ListUserTasksRequest
 */
export type ListUserTasksRequest = Message<"teleport.usertasks.v1.ListUserTasksRequest"> & {
  /**
   * page_size is the maximum number of items to return.
   * The server may impose a different page size at its discretion.
   *
   * @generated from field: int64 page_size = 1;
   */
  pageSize: bigint;

  /**
   * page_token is the next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message teleport.usertasks.v1.ListUserTasksRequest.
 * Use `create(ListUserTasksRequestSchema)` to create a new message.
 */
export const ListUserTasksRequestSchema: GenMessage<ListUserTasksRequest> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 3);

/**
 * ListUserTasksResponse is a response to ListUserTasks.
 *
 * @generated from message teleport.usertasks.v1.ListUserTasksResponse
 */
export type ListUserTasksResponse = Message<"teleport.usertasks.v1.ListUserTasksResponse"> & {
  /**
   * @generated from field: repeated teleport.usertasks.v1.UserTask user_tasks = 1;
   */
  userTasks: UserTask[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message teleport.usertasks.v1.ListUserTasksResponse.
 * Use `create(ListUserTasksResponseSchema)` to create a new message.
 */
export const ListUserTasksResponseSchema: GenMessage<ListUserTasksResponse> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 4);

/**
 * UpdateUserTaskRequest is a request to update an existing User Task.
 *
 * @generated from message teleport.usertasks.v1.UpdateUserTaskRequest
 */
export type UpdateUserTaskRequest = Message<"teleport.usertasks.v1.UpdateUserTaskRequest"> & {
  /**
   * @generated from field: teleport.usertasks.v1.UserTask user_task = 1;
   */
  userTask?: UserTask;
};

/**
 * Describes the message teleport.usertasks.v1.UpdateUserTaskRequest.
 * Use `create(UpdateUserTaskRequestSchema)` to create a new message.
 */
export const UpdateUserTaskRequestSchema: GenMessage<UpdateUserTaskRequest> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 5);

/**
 * DeleteUserTaskRequest is a request to delete a User Task.
 *
 * @generated from message teleport.usertasks.v1.DeleteUserTaskRequest
 */
export type DeleteUserTaskRequest = Message<"teleport.usertasks.v1.DeleteUserTaskRequest"> & {
  /**
   * Name is the name of the User Task to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message teleport.usertasks.v1.DeleteUserTaskRequest.
 * Use `create(DeleteUserTaskRequestSchema)` to create a new message.
 */
export const DeleteUserTaskRequestSchema: GenMessage<DeleteUserTaskRequest> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks_service, 6);

/**
 * UserTaskService is a service that provides methods to manage User Tasks.
 *
 * @generated from service teleport.usertasks.v1.UserTaskService
 */
export const UserTaskService: GenService<{
  /**
   * CreateUserTask creates a User Task.
   *
   * @generated from rpc teleport.usertasks.v1.UserTaskService.CreateUserTask
   */
  createUserTask: {
    methodKind: "unary";
    input: typeof CreateUserTaskRequestSchema;
    output: typeof UserTaskSchema;
  },
  /**
   * UpsertUserTask creates or updates User Task.
   *
   * @generated from rpc teleport.usertasks.v1.UserTaskService.UpsertUserTask
   */
  upsertUserTask: {
    methodKind: "unary";
    input: typeof UpsertUserTaskRequestSchema;
    output: typeof UserTaskSchema;
  },
  /**
   * GetUserTask gets a UserTask by name.
   *
   * @generated from rpc teleport.usertasks.v1.UserTaskService.GetUserTask
   */
  getUserTask: {
    methodKind: "unary";
    input: typeof GetUserTaskRequestSchema;
    output: typeof UserTaskSchema;
  },
  /**
   * ListUserTasks returns a list of UserTasks. It supports pagination and filters.
   *
   * @generated from rpc teleport.usertasks.v1.UserTaskService.ListUserTasks
   */
  listUserTasks: {
    methodKind: "unary";
    input: typeof ListUserTasksRequestSchema;
    output: typeof ListUserTasksResponseSchema;
  },
  /**
   * UpdateUserTask updates an existing User Task.
   *
   * @generated from rpc teleport.usertasks.v1.UserTaskService.UpdateUserTask
   */
  updateUserTask: {
    methodKind: "unary";
    input: typeof UpdateUserTaskRequestSchema;
    output: typeof UserTaskSchema;
  },
  /**
   * DeleteUserTask deletes a User Task.
   *
   * @generated from rpc teleport.usertasks.v1.UserTaskService.DeleteUserTask
   */
  deleteUserTask: {
    methodKind: "unary";
    input: typeof DeleteUserTaskRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_teleport_usertasks_v1_user_tasks_service, 0);

