// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file teleport/usertasks/v1/user_tasks.proto (package teleport.usertasks.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Metadata } from "../../header/v1/metadata_pb";
import { file_teleport_header_v1_metadata } from "../../header/v1/metadata_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teleport/usertasks/v1/user_tasks.proto.
 */
export const file_teleport_usertasks_v1_user_tasks: GenFile = /*@__PURE__*/
  fileDesc("CiZ0ZWxlcG9ydC91c2VydGFza3MvdjEvdXNlcl90YXNrcy5wcm90bxIVdGVsZXBvcnQudXNlcnRhc2tzLnYxIp4BCghVc2VyVGFzaxIMCgRraW5kGAEgASgJEhAKCHN1Yl9raW5kGAIgASgJEg8KB3ZlcnNpb24YAyABKAkSLgoIbWV0YWRhdGEYBCABKAsyHC50ZWxlcG9ydC5oZWFkZXIudjEuTWV0YWRhdGESMQoEc3BlYxgFIAEoCzIjLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5Vc2VyVGFza1NwZWMikwEKDFVzZXJUYXNrU3BlYxITCgtpbnRlZ3JhdGlvbhgBIAEoCRIRCgl0YXNrX3R5cGUYAiABKAkSEgoKaXNzdWVfdHlwZRgDIAEoCRINCgVzdGF0ZRgEIAEoCRI4CgxkaXNjb3Zlcl9lYzIYBSABKAsyIi50ZWxlcG9ydC51c2VydGFza3MudjEuRGlzY292ZXJFQzIisQEKC0Rpc2NvdmVyRUMyEkQKCWluc3RhbmNlcxgBIAMoCzIxLnRlbGVwb3J0LnVzZXJ0YXNrcy52MS5EaXNjb3ZlckVDMi5JbnN0YW5jZXNFbnRyeRpcCg5JbnN0YW5jZXNFbnRyeRILCgNrZXkYASABKAkSOQoFdmFsdWUYAiABKAsyKi50ZWxlcG9ydC51c2VydGFza3MudjEuRGlzY292ZXJFQzJJbnN0YW5jZToCOAEi1gEKE0Rpc2NvdmVyRUMySW5zdGFuY2USEwoLaW5zdGFuY2VfaWQYASABKAkSDAoEbmFtZRgCIAEoCRISCgphY2NvdW50X2lkGAMgASgJEg4KBnJlZ2lvbhgEIAEoCRIWCg5pbnZvY2F0aW9uX3VybBgFIAEoCRIYChBkaXNjb3ZlcnlfY29uZmlnGAYgASgJEhcKD2Rpc2NvdmVyeV9ncm91cBgHIAEoCRItCglzeW5jX3RpbWUYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQlZaVGdpdGh1Yi5jb20vZ3Jhdml0YXRpb25hbC90ZWxlcG9ydC9hcGkvZ2VuL3Byb3RvL2dvL3RlbGVwb3J0L3VzZXJ0YXNrcy92MTt1c2VydGFza3N2MWIGcHJvdG8z", [file_google_protobuf_timestamp, file_teleport_header_v1_metadata]);

/**
 * UserTask is a resource that represents an action to be completed by the user.
 * UserTasks are a unit of work for users to act upon issues related to other resources.
 * As an example, when auto-enrolling EC2 instances using the Discovery Service
 * a UserTask is created to let the user know that something failed on a set of instances.
 * The user can then mark the task as resolved after following the recommendation/fixing steps.
 *
 * @generated from message teleport.usertasks.v1.UserTask
 */
export type UserTask = Message<"teleport.usertasks.v1.UserTask"> & {
  /**
   * The kind of resource represented.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Mandatory field for all resources. Not populated for this resource type.
   *
   * @generated from field: string sub_kind = 2;
   */
  subKind: string;

  /**
   * The version of the resource being represented.
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Common metadata that all resources share.
   *
   * @generated from field: teleport.header.v1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  /**
   * The configured properties of UserTask.
   *
   * @generated from field: teleport.usertasks.v1.UserTaskSpec spec = 5;
   */
  spec?: UserTaskSpec;
};

/**
 * Describes the message teleport.usertasks.v1.UserTask.
 * Use `create(UserTaskSchema)` to create a new message.
 */
export const UserTaskSchema: GenMessage<UserTask> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks, 0);

/**
 * UserTaskSpec contains the properties of the UserTask.
 *
 * @generated from message teleport.usertasks.v1.UserTaskSpec
 */
export type UserTaskSpec = Message<"teleport.usertasks.v1.UserTaskSpec"> & {
  /**
   * Integration is the integration name that originated this task.
   *
   * @generated from field: string integration = 1;
   */
  integration: string;

  /**
   * TaskType indicates the type of task.
   * Examples: discover-ec2, discover-rds, discover-eks
   *
   * @generated from field: string task_type = 2;
   */
  taskType: string;

  /**
   * IssueType is an identifier for the type of issue that happened.
   * Example for discover-ec2: SSM_AGENT_NOT_AVAILABLE
   *
   * @generated from field: string issue_type = 3;
   */
  issueType: string;

  /**
   * State indicates the task state.
   * When the task is created, it starts with OPEN.
   * Users can mark it as RESOLVED.
   * If the issue happens again (eg, new discover iteration faces the same error), it will move to OPEN again.
   *
   * @generated from field: string state = 4;
   */
  state: string;

  /**
   * DiscoverEC2 contains the AWS EC2 instances that failed to auto enroll into the cluster.
   * Present when TaskType is discover-ec2.
   *
   * @generated from field: teleport.usertasks.v1.DiscoverEC2 discover_ec2 = 5;
   */
  discoverEc2?: DiscoverEC2;
};

/**
 * Describes the message teleport.usertasks.v1.UserTaskSpec.
 * Use `create(UserTaskSpecSchema)` to create a new message.
 */
export const UserTaskSpecSchema: GenMessage<UserTaskSpec> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks, 1);

/**
 * DiscoverEC2 contains the instances that failed to auto-enroll into the cluster.
 *
 * @generated from message teleport.usertasks.v1.DiscoverEC2
 */
export type DiscoverEC2 = Message<"teleport.usertasks.v1.DiscoverEC2"> & {
  /**
   * Instances maps an instance id to the result of enrolling that instance into teleport.
   *
   * @generated from field: map<string, teleport.usertasks.v1.DiscoverEC2Instance> instances = 1;
   */
  instances: { [key: string]: DiscoverEC2Instance };
};

/**
 * Describes the message teleport.usertasks.v1.DiscoverEC2.
 * Use `create(DiscoverEC2Schema)` to create a new message.
 */
export const DiscoverEC2Schema: GenMessage<DiscoverEC2> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks, 2);

/**
 * DiscoverEC2Instance contains the result of enrolling an AWS EC2 Instance.
 *
 * @generated from message teleport.usertasks.v1.DiscoverEC2Instance
 */
export type DiscoverEC2Instance = Message<"teleport.usertasks.v1.DiscoverEC2Instance"> & {
  /**
   * InstanceID is the EC2 Instance ID that uniquely identifies the instance.
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Name is the instance Name.
   * Might be empty, if the instance doesn't have the Name tag.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * AccountID is the AWS Account ID for this instance.
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;

  /**
   * Region is the AWS Region where this issue is happening.
   *
   * @generated from field: string region = 4;
   */
  region: string;

  /**
   * InvocationURL is the URL that points to the invocation.
   * Empty if there was an error before installing the
   *
   * @generated from field: string invocation_url = 5;
   */
  invocationUrl: string;

  /**
   * DiscoveryConfig is the discovery config name that originated this instance enrollment.
   *
   * @generated from field: string discovery_config = 6;
   */
  discoveryConfig: string;

  /**
   * DiscoveryGroup is the DiscoveryGroup name that originated this task.
   *
   * @generated from field: string discovery_group = 7;
   */
  discoveryGroup: string;

  /**
   * SyncTime is the timestamp when the error was produced.
   *
   * @generated from field: google.protobuf.Timestamp sync_time = 8;
   */
  syncTime?: Timestamp;
};

/**
 * Describes the message teleport.usertasks.v1.DiscoverEC2Instance.
 * Use `create(DiscoverEC2InstanceSchema)` to create a new message.
 */
export const DiscoverEC2InstanceSchema: GenMessage<DiscoverEC2Instance> = /*@__PURE__*/
  messageDesc(file_teleport_usertasks_v1_user_tasks, 3);

